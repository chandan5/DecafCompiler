Terminals which are not used

   COMMA
   CLASS
   IF
   ELSE
   FOR
   CONTINUE
   BREAK
   CALLOUT
   RETURN
   VOID
   NOT
   AND
   OR
   EQUALEQUAL
   NOTEQUAL
   LESSEQUAL
   LESSTHAN
   GREATEREQUAL
   GREATERTHAN
   PLUSEQUAL
   MINUSEQUAL
   STRING_VALUE
   CHAR_VALUE


Grammar

    0 $accept: program $end

    1 program: INT OPEN_PARANTHESIS CLOSE_PARANTHESIS OPEN_CURLYBRACE declarations statements CLOSE_CURLYBRACE

    2 declarations: declaration
    3             | declaration declarations

    4 statements: statement
    5           | statement statements

    6 declaration: type IDENTIFIER SEMICOLON
    7            | type IDENTIFIER OPEN_SQUAREBRACKET INT_VALUE CLOSE_SQUAREBRACKET SEMICOLON

    8 statement: SEMICOLON
    9          | IDENTIFIER EQUAL expression SEMICOLON
   10          | IDENTIFIER OPEN_SQUAREBRACKET expression CLOSE_SQUAREBRACKET EQUAL expression SEMICOLON

   11 expression: term
   12           | term PLUS term
   13           | term MINUS term

   14 term: factor
   15     | factor MULTIPLY factor
   16     | factor DIVIDE factor
   17     | factor MODULO factor

   18 factor: IDENTIFIER
   19       | IDENTIFIER OPEN_SQUAREBRACKET expression CLOSE_SQUAREBRACKET
   20       | literal
   21       | OPEN_PARANTHESIS expression CLOSE_PARANTHESIS

   22 literal: INT_VALUE
   23        | bool_value

   24 bool_value: TRUE
   25           | FALSE

   26 type: INT
   27     | BOOLEAN


Terminals, with rules where they appear

$end (0) 0
error (256)
SEMICOLON (258) 6 7 8 9 10
COMMA (259)
OPEN_PARANTHESIS (260) 1 21
CLOSE_PARANTHESIS (261) 1 21
OPEN_SQUAREBRACKET (262) 7 10 19
CLOSE_SQUAREBRACKET (263) 7 10 19
OPEN_CURLYBRACE (264) 1
CLOSE_CURLYBRACE (265) 1
CLASS (266)
IF (267)
ELSE (268)
FOR (269)
CONTINUE (270)
BREAK (271)
CALLOUT (272)
RETURN (273)
VOID (274)
FALSE (275) 25
INT (276) 1 26
BOOLEAN (277) 27
TRUE (278) 24
NOT (279)
AND (280)
OR (281)
EQUALEQUAL (282)
NOTEQUAL (283)
LESSEQUAL (284)
LESSTHAN (285)
GREATEREQUAL (286)
GREATERTHAN (287)
EQUAL (288) 9 10
PLUSEQUAL (289)
MINUSEQUAL (290)
PLUS (291) 12
MINUS (292) 13
MULTIPLY (293) 15
DIVIDE (294) 16
MODULO (295) 17
IDENTIFIER (296) 6 7 9 10 18 19
STRING_VALUE (297)
CHAR_VALUE (298)
INT_VALUE (299) 7 22


Nonterminals, with rules where they appear

$accept (45)
    on left: 0
program (46)
    on left: 1, on right: 0
declarations (47)
    on left: 2 3, on right: 1 3
statements (48)
    on left: 4 5, on right: 1 5
declaration (49)
    on left: 6 7, on right: 2 3
statement (50)
    on left: 8 9 10, on right: 4 5
expression (51)
    on left: 11 12 13, on right: 9 10 19 21
term (52)
    on left: 14 15 16 17, on right: 11 12 13
factor (53)
    on left: 18 19 20 21, on right: 14 15 16 17
literal (54)
    on left: 22 23, on right: 20
bool_value (55)
    on left: 24 25, on right: 23
type (56)
    on left: 26 27, on right: 6 7


state 0

    0 $accept: . program $end

    INT  shift, and go to state 1

    program  go to state 2


state 1

    1 program: INT . OPEN_PARANTHESIS CLOSE_PARANTHESIS OPEN_CURLYBRACE declarations statements CLOSE_CURLYBRACE

    OPEN_PARANTHESIS  shift, and go to state 3


state 2

    0 $accept: program . $end

    $end  shift, and go to state 4


state 3

    1 program: INT OPEN_PARANTHESIS . CLOSE_PARANTHESIS OPEN_CURLYBRACE declarations statements CLOSE_CURLYBRACE

    CLOSE_PARANTHESIS  shift, and go to state 5


state 4

    0 $accept: program $end .

    $default  accept


state 5

    1 program: INT OPEN_PARANTHESIS CLOSE_PARANTHESIS . OPEN_CURLYBRACE declarations statements CLOSE_CURLYBRACE

    OPEN_CURLYBRACE  shift, and go to state 6


state 6

    1 program: INT OPEN_PARANTHESIS CLOSE_PARANTHESIS OPEN_CURLYBRACE . declarations statements CLOSE_CURLYBRACE

    INT      shift, and go to state 7
    BOOLEAN  shift, and go to state 8

    declarations  go to state 9
    declaration   go to state 10
    type          go to state 11


state 7

   26 type: INT .

    $default  reduce using rule 26 (type)


state 8

   27 type: BOOLEAN .

    $default  reduce using rule 27 (type)


state 9

    1 program: INT OPEN_PARANTHESIS CLOSE_PARANTHESIS OPEN_CURLYBRACE declarations . statements CLOSE_CURLYBRACE

    SEMICOLON   shift, and go to state 12
    IDENTIFIER  shift, and go to state 13

    statements  go to state 14
    statement   go to state 15


state 10

    2 declarations: declaration .
    3             | declaration . declarations

    INT      shift, and go to state 7
    BOOLEAN  shift, and go to state 8

    $default  reduce using rule 2 (declarations)

    declarations  go to state 16
    declaration   go to state 10
    type          go to state 11


state 11

    6 declaration: type . IDENTIFIER SEMICOLON
    7            | type . IDENTIFIER OPEN_SQUAREBRACKET INT_VALUE CLOSE_SQUAREBRACKET SEMICOLON

    IDENTIFIER  shift, and go to state 17


state 12

    8 statement: SEMICOLON .

    $default  reduce using rule 8 (statement)


state 13

    9 statement: IDENTIFIER . EQUAL expression SEMICOLON
   10          | IDENTIFIER . OPEN_SQUAREBRACKET expression CLOSE_SQUAREBRACKET EQUAL expression SEMICOLON

    OPEN_SQUAREBRACKET  shift, and go to state 18
    EQUAL               shift, and go to state 19


state 14

    1 program: INT OPEN_PARANTHESIS CLOSE_PARANTHESIS OPEN_CURLYBRACE declarations statements . CLOSE_CURLYBRACE

    CLOSE_CURLYBRACE  shift, and go to state 20


state 15

    4 statements: statement .
    5           | statement . statements

    SEMICOLON   shift, and go to state 12
    IDENTIFIER  shift, and go to state 13

    $default  reduce using rule 4 (statements)

    statements  go to state 21
    statement   go to state 15


state 16

    3 declarations: declaration declarations .

    $default  reduce using rule 3 (declarations)


state 17

    6 declaration: type IDENTIFIER . SEMICOLON
    7            | type IDENTIFIER . OPEN_SQUAREBRACKET INT_VALUE CLOSE_SQUAREBRACKET SEMICOLON

    SEMICOLON           shift, and go to state 22
    OPEN_SQUAREBRACKET  shift, and go to state 23


state 18

   10 statement: IDENTIFIER OPEN_SQUAREBRACKET . expression CLOSE_SQUAREBRACKET EQUAL expression SEMICOLON

    OPEN_PARANTHESIS  shift, and go to state 24
    FALSE             shift, and go to state 25
    TRUE              shift, and go to state 26
    IDENTIFIER        shift, and go to state 27
    INT_VALUE         shift, and go to state 28

    expression  go to state 29
    term        go to state 30
    factor      go to state 31
    literal     go to state 32
    bool_value  go to state 33


state 19

    9 statement: IDENTIFIER EQUAL . expression SEMICOLON

    OPEN_PARANTHESIS  shift, and go to state 24
    FALSE             shift, and go to state 25
    TRUE              shift, and go to state 26
    IDENTIFIER        shift, and go to state 27
    INT_VALUE         shift, and go to state 28

    expression  go to state 34
    term        go to state 30
    factor      go to state 31
    literal     go to state 32
    bool_value  go to state 33


state 20

    1 program: INT OPEN_PARANTHESIS CLOSE_PARANTHESIS OPEN_CURLYBRACE declarations statements CLOSE_CURLYBRACE .

    $default  reduce using rule 1 (program)


state 21

    5 statements: statement statements .

    $default  reduce using rule 5 (statements)


state 22

    6 declaration: type IDENTIFIER SEMICOLON .

    $default  reduce using rule 6 (declaration)


state 23

    7 declaration: type IDENTIFIER OPEN_SQUAREBRACKET . INT_VALUE CLOSE_SQUAREBRACKET SEMICOLON

    INT_VALUE  shift, and go to state 35


state 24

   21 factor: OPEN_PARANTHESIS . expression CLOSE_PARANTHESIS

    OPEN_PARANTHESIS  shift, and go to state 24
    FALSE             shift, and go to state 25
    TRUE              shift, and go to state 26
    IDENTIFIER        shift, and go to state 27
    INT_VALUE         shift, and go to state 28

    expression  go to state 36
    term        go to state 30
    factor      go to state 31
    literal     go to state 32
    bool_value  go to state 33


state 25

   25 bool_value: FALSE .

    $default  reduce using rule 25 (bool_value)


state 26

   24 bool_value: TRUE .

    $default  reduce using rule 24 (bool_value)


state 27

   18 factor: IDENTIFIER .
   19       | IDENTIFIER . OPEN_SQUAREBRACKET expression CLOSE_SQUAREBRACKET

    OPEN_SQUAREBRACKET  shift, and go to state 37

    $default  reduce using rule 18 (factor)


state 28

   22 literal: INT_VALUE .

    $default  reduce using rule 22 (literal)


state 29

   10 statement: IDENTIFIER OPEN_SQUAREBRACKET expression . CLOSE_SQUAREBRACKET EQUAL expression SEMICOLON

    CLOSE_SQUAREBRACKET  shift, and go to state 38


state 30

   11 expression: term .
   12           | term . PLUS term
   13           | term . MINUS term

    PLUS   shift, and go to state 39
    MINUS  shift, and go to state 40

    $default  reduce using rule 11 (expression)


state 31

   14 term: factor .
   15     | factor . MULTIPLY factor
   16     | factor . DIVIDE factor
   17     | factor . MODULO factor

    MULTIPLY  shift, and go to state 41
    DIVIDE    shift, and go to state 42
    MODULO    shift, and go to state 43

    $default  reduce using rule 14 (term)


state 32

   20 factor: literal .

    $default  reduce using rule 20 (factor)


state 33

   23 literal: bool_value .

    $default  reduce using rule 23 (literal)


state 34

    9 statement: IDENTIFIER EQUAL expression . SEMICOLON

    SEMICOLON  shift, and go to state 44


state 35

    7 declaration: type IDENTIFIER OPEN_SQUAREBRACKET INT_VALUE . CLOSE_SQUAREBRACKET SEMICOLON

    CLOSE_SQUAREBRACKET  shift, and go to state 45


state 36

   21 factor: OPEN_PARANTHESIS expression . CLOSE_PARANTHESIS

    CLOSE_PARANTHESIS  shift, and go to state 46


state 37

   19 factor: IDENTIFIER OPEN_SQUAREBRACKET . expression CLOSE_SQUAREBRACKET

    OPEN_PARANTHESIS  shift, and go to state 24
    FALSE             shift, and go to state 25
    TRUE              shift, and go to state 26
    IDENTIFIER        shift, and go to state 27
    INT_VALUE         shift, and go to state 28

    expression  go to state 47
    term        go to state 30
    factor      go to state 31
    literal     go to state 32
    bool_value  go to state 33


state 38

   10 statement: IDENTIFIER OPEN_SQUAREBRACKET expression CLOSE_SQUAREBRACKET . EQUAL expression SEMICOLON

    EQUAL  shift, and go to state 48


state 39

   12 expression: term PLUS . term

    OPEN_PARANTHESIS  shift, and go to state 24
    FALSE             shift, and go to state 25
    TRUE              shift, and go to state 26
    IDENTIFIER        shift, and go to state 27
    INT_VALUE         shift, and go to state 28

    term        go to state 49
    factor      go to state 31
    literal     go to state 32
    bool_value  go to state 33


state 40

   13 expression: term MINUS . term

    OPEN_PARANTHESIS  shift, and go to state 24
    FALSE             shift, and go to state 25
    TRUE              shift, and go to state 26
    IDENTIFIER        shift, and go to state 27
    INT_VALUE         shift, and go to state 28

    term        go to state 50
    factor      go to state 31
    literal     go to state 32
    bool_value  go to state 33


state 41

   15 term: factor MULTIPLY . factor

    OPEN_PARANTHESIS  shift, and go to state 24
    FALSE             shift, and go to state 25
    TRUE              shift, and go to state 26
    IDENTIFIER        shift, and go to state 27
    INT_VALUE         shift, and go to state 28

    factor      go to state 51
    literal     go to state 32
    bool_value  go to state 33


state 42

   16 term: factor DIVIDE . factor

    OPEN_PARANTHESIS  shift, and go to state 24
    FALSE             shift, and go to state 25
    TRUE              shift, and go to state 26
    IDENTIFIER        shift, and go to state 27
    INT_VALUE         shift, and go to state 28

    factor      go to state 52
    literal     go to state 32
    bool_value  go to state 33


state 43

   17 term: factor MODULO . factor

    OPEN_PARANTHESIS  shift, and go to state 24
    FALSE             shift, and go to state 25
    TRUE              shift, and go to state 26
    IDENTIFIER        shift, and go to state 27
    INT_VALUE         shift, and go to state 28

    factor      go to state 53
    literal     go to state 32
    bool_value  go to state 33


state 44

    9 statement: IDENTIFIER EQUAL expression SEMICOLON .

    $default  reduce using rule 9 (statement)


state 45

    7 declaration: type IDENTIFIER OPEN_SQUAREBRACKET INT_VALUE CLOSE_SQUAREBRACKET . SEMICOLON

    SEMICOLON  shift, and go to state 54


state 46

   21 factor: OPEN_PARANTHESIS expression CLOSE_PARANTHESIS .

    $default  reduce using rule 21 (factor)


state 47

   19 factor: IDENTIFIER OPEN_SQUAREBRACKET expression . CLOSE_SQUAREBRACKET

    CLOSE_SQUAREBRACKET  shift, and go to state 55


state 48

   10 statement: IDENTIFIER OPEN_SQUAREBRACKET expression CLOSE_SQUAREBRACKET EQUAL . expression SEMICOLON

    OPEN_PARANTHESIS  shift, and go to state 24
    FALSE             shift, and go to state 25
    TRUE              shift, and go to state 26
    IDENTIFIER        shift, and go to state 27
    INT_VALUE         shift, and go to state 28

    expression  go to state 56
    term        go to state 30
    factor      go to state 31
    literal     go to state 32
    bool_value  go to state 33


state 49

   12 expression: term PLUS term .

    $default  reduce using rule 12 (expression)


state 50

   13 expression: term MINUS term .

    $default  reduce using rule 13 (expression)


state 51

   15 term: factor MULTIPLY factor .

    $default  reduce using rule 15 (term)


state 52

   16 term: factor DIVIDE factor .

    $default  reduce using rule 16 (term)


state 53

   17 term: factor MODULO factor .

    $default  reduce using rule 17 (term)


state 54

    7 declaration: type IDENTIFIER OPEN_SQUAREBRACKET INT_VALUE CLOSE_SQUAREBRACKET SEMICOLON .

    $default  reduce using rule 7 (declaration)


state 55

   19 factor: IDENTIFIER OPEN_SQUAREBRACKET expression CLOSE_SQUAREBRACKET .

    $default  reduce using rule 19 (factor)


state 56

   10 statement: IDENTIFIER OPEN_SQUAREBRACKET expression CLOSE_SQUAREBRACKET EQUAL expression . SEMICOLON

    SEMICOLON  shift, and go to state 57


state 57

   10 statement: IDENTIFIER OPEN_SQUAREBRACKET expression CLOSE_SQUAREBRACKET EQUAL expression SEMICOLON .

    $default  reduce using rule 10 (statement)
