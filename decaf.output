Grammar

    0 $accept: program $end

    1 program: CLASS IDENTIFIER OPEN_CURLYBRACE field_decls method_decls CLOSE_CURLYBRACE
    2        | CLASS IDENTIFIER OPEN_CURLYBRACE field_decls CLOSE_CURLYBRACE
    3        | CLASS IDENTIFIER OPEN_CURLYBRACE method_decls CLOSE_CURLYBRACE
    4        | CLASS IDENTIFIER OPEN_CURLYBRACE CLOSE_CURLYBRACE

    5 field_decls: field_decl
    6            | field_decls field_decl

    7 field_decl: type identifier_opt_arrs SEMICOLON

    8 identifier_opt_arrs: identifier_opt_arr
    9                    | identifier_opt_arrs COMMA identifier_opt_arr

   10 identifier_opt_arr: IDENTIFIER
   11                   | IDENTIFIER OPEN_SQUAREBRACKET INT_VALUE CLOSE_SQUAREBRACKET

   12 method_decls: method_decl
   13             | method_decls method_decl

   14 method_decl: type IDENTIFIER OPEN_PARANTHESIS params CLOSE_PARANTHESIS block
   15            | VOID IDENTIFIER OPEN_PARANTHESIS params CLOSE_PARANTHESIS block
   16            | type IDENTIFIER OPEN_PARANTHESIS CLOSE_PARANTHESIS block
   17            | VOID IDENTIFIER OPEN_PARANTHESIS CLOSE_PARANTHESIS block

   18 params: param
   19       | params COMMA param

   20 param: type IDENTIFIER

   21 block: OPEN_CURLYBRACE var_decls statements CLOSE_CURLYBRACE
   22      | OPEN_CURLYBRACE var_decls CLOSE_CURLYBRACE
   23      | OPEN_CURLYBRACE statements CLOSE_CURLYBRACE
   24      | OPEN_CURLYBRACE CLOSE_CURLYBRACE

   25 var_decls: var_decl
   26          | var_decls var_decl

   27 var_decl: type identifiers SEMICOLON

   28 identifiers: IDENTIFIER
   29            | identifiers COMMA IDENTIFIER

   30 statements: statement
   31           | statements statement

   32 statement: location assign_op expr SEMICOLON
   33          | method_call SEMICOLON
   34          | IF OPEN_PARANTHESIS expr CLOSE_PARANTHESIS block ELSE block
   35          | IF OPEN_PARANTHESIS expr CLOSE_PARANTHESIS block
   36          | FOR IDENTIFIER EQUAL expr COMMA expr block
   37          | RETURN expr SEMICOLON
   38          | RETURN SEMICOLON
   39          | BREAK SEMICOLON
   40          | CONTINUE SEMICOLON
   41          | block
   42          | SEMICOLON

   43 method_call: IDENTIFIER OPEN_PARANTHESIS CLOSE_PARANTHESIS
   44            | IDENTIFIER OPEN_PARANTHESIS exprs CLOSE_PARANTHESIS
   45            | CALLOUT OPEN_PARANTHESIS STRING_VALUE CLOSE_PARANTHESIS
   46            | CALLOUT OPEN_PARANTHESIS STRING_VALUE callout_args CLOSE_PARANTHESIS

   47 exprs: expr
   48      | exprs COMMA expr

   49 location: IDENTIFIER
   50         | IDENTIFIER OPEN_SQUAREBRACKET expr CLOSE_SQUAREBRACKET

   51 expr: location
   52     | method_call
   53     | literal
   54     | expr OR expr
   55     | expr AND expr
   56     | expr EQUALEQUAL expr
   57     | expr NOTEQUAL expr
   58     | expr LESSTHAN expr
   59     | expr LESSEQUAL expr
   60     | expr GREATERTHAN expr
   61     | expr GREATEREQUAL expr
   62     | expr PLUS expr
   63     | expr MINUS expr
   64     | expr MULTIPLY expr
   65     | expr DIVIDE expr
   66     | expr MODULO expr
   67     | MINUS expr
   68     | NOT expr
   69     | OPEN_PARANTHESIS expr CLOSE_PARANTHESIS

   70 callout_args: COMMA callout_arg
   71             | callout_args COMMA callout_arg

   72 callout_arg: expr
   73            | STRING_VALUE

   74 assign_op: EQUAL
   75          | PLUSEQUAL
   76          | MINUSEQUAL

   77 literal: INT_VALUE
   78        | bool_value
   79        | CHAR_VALUE

   80 bool_value: TRUE
   81           | FALSE

   82 type: INT
   83     | BOOLEAN


Terminals, with rules where they appear

$end (0) 0
error (256)
SEMICOLON (258) 7 27 32 33 37 38 39 40 42
COMMA (259) 9 19 29 36 48 70 71
OPEN_PARANTHESIS (260) 14 15 16 17 34 35 43 44 45 46 69
CLOSE_PARANTHESIS (261) 14 15 16 17 34 35 43 44 45 46 69
OPEN_SQUAREBRACKET (262) 11 50
CLOSE_SQUAREBRACKET (263) 11 50
OPEN_CURLYBRACE (264) 1 2 3 4 21 22 23 24
CLOSE_CURLYBRACE (265) 1 2 3 4 21 22 23 24
CLASS (266) 1 2 3 4
IF (267) 34 35
ELSE (268) 34
FOR (269) 36
CONTINUE (270) 40
BREAK (271) 39
CALLOUT (272) 45 46
RETURN (273) 37 38
VOID (274) 15 17
FALSE (275) 81
INT (276) 82
BOOLEAN (277) 83
TRUE (278) 80
IDENTIFIER (279) 1 2 3 4 10 11 14 15 16 17 20 28 29 36 43 44 49 50
STRING_VALUE (280) 45 46 73
CHAR_VALUE (281) 79
INT_VALUE (282) 11 77
OR (283) 54
AND (284) 55
EQUAL (285) 36 74
PLUSEQUAL (286) 75
MINUSEQUAL (287) 76
EQUALEQUAL (288) 56
NOTEQUAL (289) 57
LESSEQUAL (290) 59
LESSTHAN (291) 58
GREATEREQUAL (292) 61
GREATERTHAN (293) 60
PLUS (294) 62
MINUS (295) 63 67
MULTIPLY (296) 64
DIVIDE (297) 65
MODULO (298) 66
NOT (299) 68


Nonterminals, with rules where they appear

$accept (45)
    on left: 0
program (46)
    on left: 1 2 3 4, on right: 0
field_decls (47)
    on left: 5 6, on right: 1 2 6
field_decl (48)
    on left: 7, on right: 5 6
identifier_opt_arrs (49)
    on left: 8 9, on right: 7 9
identifier_opt_arr (50)
    on left: 10 11, on right: 8 9
method_decls (51)
    on left: 12 13, on right: 1 3 13
method_decl (52)
    on left: 14 15 16 17, on right: 12 13
params (53)
    on left: 18 19, on right: 14 15 19
param (54)
    on left: 20, on right: 18 19
block (55)
    on left: 21 22 23 24, on right: 14 15 16 17 34 35 36 41
var_decls (56)
    on left: 25 26, on right: 21 22 26
var_decl (57)
    on left: 27, on right: 25 26
identifiers (58)
    on left: 28 29, on right: 27 29
statements (59)
    on left: 30 31, on right: 21 23 31
statement (60)
    on left: 32 33 34 35 36 37 38 39 40 41 42, on right: 30 31
method_call (61)
    on left: 43 44 45 46, on right: 33 52
exprs (62)
    on left: 47 48, on right: 44 48
location (63)
    on left: 49 50, on right: 32 51
expr (64)
    on left: 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68
    69, on right: 32 34 35 36 37 47 48 50 54 55 56 57 58 59 60 61 62
    63 64 65 66 67 68 69 72
callout_args (65)
    on left: 70 71, on right: 46 71
callout_arg (66)
    on left: 72 73, on right: 70 71
assign_op (67)
    on left: 74 75 76, on right: 32
literal (68)
    on left: 77 78 79, on right: 53
bool_value (69)
    on left: 80 81, on right: 78
type (70)
    on left: 82 83, on right: 7 14 16 20 27


State 0

    0 $accept: . program $end

    CLASS  shift, and go to state 1

    program  go to state 2


State 1

    1 program: CLASS . IDENTIFIER OPEN_CURLYBRACE field_decls method_decls CLOSE_CURLYBRACE
    2        | CLASS . IDENTIFIER OPEN_CURLYBRACE field_decls CLOSE_CURLYBRACE
    3        | CLASS . IDENTIFIER OPEN_CURLYBRACE method_decls CLOSE_CURLYBRACE
    4        | CLASS . IDENTIFIER OPEN_CURLYBRACE CLOSE_CURLYBRACE

    IDENTIFIER  shift, and go to state 3


State 2

    0 $accept: program . $end

    $end  shift, and go to state 4


State 3

    1 program: CLASS IDENTIFIER . OPEN_CURLYBRACE field_decls method_decls CLOSE_CURLYBRACE
    2        | CLASS IDENTIFIER . OPEN_CURLYBRACE field_decls CLOSE_CURLYBRACE
    3        | CLASS IDENTIFIER . OPEN_CURLYBRACE method_decls CLOSE_CURLYBRACE
    4        | CLASS IDENTIFIER . OPEN_CURLYBRACE CLOSE_CURLYBRACE

    OPEN_CURLYBRACE  shift, and go to state 5


State 4

    0 $accept: program $end .

    $default  accept


State 5

    1 program: CLASS IDENTIFIER OPEN_CURLYBRACE . field_decls method_decls CLOSE_CURLYBRACE
    2        | CLASS IDENTIFIER OPEN_CURLYBRACE . field_decls CLOSE_CURLYBRACE
    3        | CLASS IDENTIFIER OPEN_CURLYBRACE . method_decls CLOSE_CURLYBRACE
    4        | CLASS IDENTIFIER OPEN_CURLYBRACE . CLOSE_CURLYBRACE

    CLOSE_CURLYBRACE  shift, and go to state 6
    VOID              shift, and go to state 7
    INT               shift, and go to state 8
    BOOLEAN           shift, and go to state 9

    field_decls   go to state 10
    field_decl    go to state 11
    method_decls  go to state 12
    method_decl   go to state 13
    type          go to state 14


State 6

    4 program: CLASS IDENTIFIER OPEN_CURLYBRACE CLOSE_CURLYBRACE .

    $default  reduce using rule 4 (program)


State 7

   15 method_decl: VOID . IDENTIFIER OPEN_PARANTHESIS params CLOSE_PARANTHESIS block
   17            | VOID . IDENTIFIER OPEN_PARANTHESIS CLOSE_PARANTHESIS block

    IDENTIFIER  shift, and go to state 15


State 8

   82 type: INT .

    $default  reduce using rule 82 (type)


State 9

   83 type: BOOLEAN .

    $default  reduce using rule 83 (type)


State 10

    1 program: CLASS IDENTIFIER OPEN_CURLYBRACE field_decls . method_decls CLOSE_CURLYBRACE
    2        | CLASS IDENTIFIER OPEN_CURLYBRACE field_decls . CLOSE_CURLYBRACE
    6 field_decls: field_decls . field_decl

    CLOSE_CURLYBRACE  shift, and go to state 16
    VOID              shift, and go to state 7
    INT               shift, and go to state 8
    BOOLEAN           shift, and go to state 9

    field_decl    go to state 17
    method_decls  go to state 18
    method_decl   go to state 13
    type          go to state 14


State 11

    5 field_decls: field_decl .

    $default  reduce using rule 5 (field_decls)


State 12

    3 program: CLASS IDENTIFIER OPEN_CURLYBRACE method_decls . CLOSE_CURLYBRACE
   13 method_decls: method_decls . method_decl

    CLOSE_CURLYBRACE  shift, and go to state 19
    VOID              shift, and go to state 7
    INT               shift, and go to state 8
    BOOLEAN           shift, and go to state 9

    method_decl  go to state 20
    type         go to state 21


State 13

   12 method_decls: method_decl .

    $default  reduce using rule 12 (method_decls)


State 14

    7 field_decl: type . identifier_opt_arrs SEMICOLON
   14 method_decl: type . IDENTIFIER OPEN_PARANTHESIS params CLOSE_PARANTHESIS block
   16            | type . IDENTIFIER OPEN_PARANTHESIS CLOSE_PARANTHESIS block

    IDENTIFIER  shift, and go to state 22

    identifier_opt_arrs  go to state 23
    identifier_opt_arr   go to state 24


State 15

   15 method_decl: VOID IDENTIFIER . OPEN_PARANTHESIS params CLOSE_PARANTHESIS block
   17            | VOID IDENTIFIER . OPEN_PARANTHESIS CLOSE_PARANTHESIS block

    OPEN_PARANTHESIS  shift, and go to state 25


State 16

    2 program: CLASS IDENTIFIER OPEN_CURLYBRACE field_decls CLOSE_CURLYBRACE .

    $default  reduce using rule 2 (program)


State 17

    6 field_decls: field_decls field_decl .

    $default  reduce using rule 6 (field_decls)


State 18

    1 program: CLASS IDENTIFIER OPEN_CURLYBRACE field_decls method_decls . CLOSE_CURLYBRACE
   13 method_decls: method_decls . method_decl

    CLOSE_CURLYBRACE  shift, and go to state 26
    VOID              shift, and go to state 7
    INT               shift, and go to state 8
    BOOLEAN           shift, and go to state 9

    method_decl  go to state 20
    type         go to state 21


State 19

    3 program: CLASS IDENTIFIER OPEN_CURLYBRACE method_decls CLOSE_CURLYBRACE .

    $default  reduce using rule 3 (program)


State 20

   13 method_decls: method_decls method_decl .

    $default  reduce using rule 13 (method_decls)


State 21

   14 method_decl: type . IDENTIFIER OPEN_PARANTHESIS params CLOSE_PARANTHESIS block
   16            | type . IDENTIFIER OPEN_PARANTHESIS CLOSE_PARANTHESIS block

    IDENTIFIER  shift, and go to state 27


State 22

   10 identifier_opt_arr: IDENTIFIER .
   11                   | IDENTIFIER . OPEN_SQUAREBRACKET INT_VALUE CLOSE_SQUAREBRACKET
   14 method_decl: type IDENTIFIER . OPEN_PARANTHESIS params CLOSE_PARANTHESIS block
   16            | type IDENTIFIER . OPEN_PARANTHESIS CLOSE_PARANTHESIS block

    OPEN_PARANTHESIS    shift, and go to state 28
    OPEN_SQUAREBRACKET  shift, and go to state 29

    $default  reduce using rule 10 (identifier_opt_arr)


State 23

    7 field_decl: type identifier_opt_arrs . SEMICOLON
    9 identifier_opt_arrs: identifier_opt_arrs . COMMA identifier_opt_arr

    SEMICOLON  shift, and go to state 30
    COMMA      shift, and go to state 31


State 24

    8 identifier_opt_arrs: identifier_opt_arr .

    $default  reduce using rule 8 (identifier_opt_arrs)


State 25

   15 method_decl: VOID IDENTIFIER OPEN_PARANTHESIS . params CLOSE_PARANTHESIS block
   17            | VOID IDENTIFIER OPEN_PARANTHESIS . CLOSE_PARANTHESIS block

    CLOSE_PARANTHESIS  shift, and go to state 32
    INT                shift, and go to state 8
    BOOLEAN            shift, and go to state 9

    params  go to state 33
    param   go to state 34
    type    go to state 35


State 26

    1 program: CLASS IDENTIFIER OPEN_CURLYBRACE field_decls method_decls CLOSE_CURLYBRACE .

    $default  reduce using rule 1 (program)


State 27

   14 method_decl: type IDENTIFIER . OPEN_PARANTHESIS params CLOSE_PARANTHESIS block
   16            | type IDENTIFIER . OPEN_PARANTHESIS CLOSE_PARANTHESIS block

    OPEN_PARANTHESIS  shift, and go to state 28


State 28

   14 method_decl: type IDENTIFIER OPEN_PARANTHESIS . params CLOSE_PARANTHESIS block
   16            | type IDENTIFIER OPEN_PARANTHESIS . CLOSE_PARANTHESIS block

    CLOSE_PARANTHESIS  shift, and go to state 36
    INT                shift, and go to state 8
    BOOLEAN            shift, and go to state 9

    params  go to state 37
    param   go to state 34
    type    go to state 35


State 29

   11 identifier_opt_arr: IDENTIFIER OPEN_SQUAREBRACKET . INT_VALUE CLOSE_SQUAREBRACKET

    INT_VALUE  shift, and go to state 38


State 30

    7 field_decl: type identifier_opt_arrs SEMICOLON .

    $default  reduce using rule 7 (field_decl)


State 31

    9 identifier_opt_arrs: identifier_opt_arrs COMMA . identifier_opt_arr

    IDENTIFIER  shift, and go to state 39

    identifier_opt_arr  go to state 40


State 32

   17 method_decl: VOID IDENTIFIER OPEN_PARANTHESIS CLOSE_PARANTHESIS . block

    OPEN_CURLYBRACE  shift, and go to state 41

    block  go to state 42


State 33

   15 method_decl: VOID IDENTIFIER OPEN_PARANTHESIS params . CLOSE_PARANTHESIS block
   19 params: params . COMMA param

    COMMA              shift, and go to state 43
    CLOSE_PARANTHESIS  shift, and go to state 44


State 34

   18 params: param .

    $default  reduce using rule 18 (params)


State 35

   20 param: type . IDENTIFIER

    IDENTIFIER  shift, and go to state 45


State 36

   16 method_decl: type IDENTIFIER OPEN_PARANTHESIS CLOSE_PARANTHESIS . block

    OPEN_CURLYBRACE  shift, and go to state 41

    block  go to state 46


State 37

   14 method_decl: type IDENTIFIER OPEN_PARANTHESIS params . CLOSE_PARANTHESIS block
   19 params: params . COMMA param

    COMMA              shift, and go to state 43
    CLOSE_PARANTHESIS  shift, and go to state 47


State 38

   11 identifier_opt_arr: IDENTIFIER OPEN_SQUAREBRACKET INT_VALUE . CLOSE_SQUAREBRACKET

    CLOSE_SQUAREBRACKET  shift, and go to state 48


State 39

   10 identifier_opt_arr: IDENTIFIER .
   11                   | IDENTIFIER . OPEN_SQUAREBRACKET INT_VALUE CLOSE_SQUAREBRACKET

    OPEN_SQUAREBRACKET  shift, and go to state 29

    $default  reduce using rule 10 (identifier_opt_arr)


State 40

    9 identifier_opt_arrs: identifier_opt_arrs COMMA identifier_opt_arr .

    $default  reduce using rule 9 (identifier_opt_arrs)


State 41

   21 block: OPEN_CURLYBRACE . var_decls statements CLOSE_CURLYBRACE
   22      | OPEN_CURLYBRACE . var_decls CLOSE_CURLYBRACE
   23      | OPEN_CURLYBRACE . statements CLOSE_CURLYBRACE
   24      | OPEN_CURLYBRACE . CLOSE_CURLYBRACE

    SEMICOLON         shift, and go to state 49
    OPEN_CURLYBRACE   shift, and go to state 41
    CLOSE_CURLYBRACE  shift, and go to state 50
    IF                shift, and go to state 51
    FOR               shift, and go to state 52
    CONTINUE          shift, and go to state 53
    BREAK             shift, and go to state 54
    CALLOUT           shift, and go to state 55
    RETURN            shift, and go to state 56
    INT               shift, and go to state 8
    BOOLEAN           shift, and go to state 9
    IDENTIFIER        shift, and go to state 57

    block        go to state 58
    var_decls    go to state 59
    var_decl     go to state 60
    statements   go to state 61
    statement    go to state 62
    method_call  go to state 63
    location     go to state 64
    type         go to state 65


State 42

   17 method_decl: VOID IDENTIFIER OPEN_PARANTHESIS CLOSE_PARANTHESIS block .

    $default  reduce using rule 17 (method_decl)


State 43

   19 params: params COMMA . param

    INT      shift, and go to state 8
    BOOLEAN  shift, and go to state 9

    param  go to state 66
    type   go to state 35


State 44

   15 method_decl: VOID IDENTIFIER OPEN_PARANTHESIS params CLOSE_PARANTHESIS . block

    OPEN_CURLYBRACE  shift, and go to state 41

    block  go to state 67


State 45

   20 param: type IDENTIFIER .

    $default  reduce using rule 20 (param)


State 46

   16 method_decl: type IDENTIFIER OPEN_PARANTHESIS CLOSE_PARANTHESIS block .

    $default  reduce using rule 16 (method_decl)


State 47

   14 method_decl: type IDENTIFIER OPEN_PARANTHESIS params CLOSE_PARANTHESIS . block

    OPEN_CURLYBRACE  shift, and go to state 41

    block  go to state 68


State 48

   11 identifier_opt_arr: IDENTIFIER OPEN_SQUAREBRACKET INT_VALUE CLOSE_SQUAREBRACKET .

    $default  reduce using rule 11 (identifier_opt_arr)


State 49

   42 statement: SEMICOLON .

    $default  reduce using rule 42 (statement)


State 50

   24 block: OPEN_CURLYBRACE CLOSE_CURLYBRACE .

    $default  reduce using rule 24 (block)


State 51

   34 statement: IF . OPEN_PARANTHESIS expr CLOSE_PARANTHESIS block ELSE block
   35          | IF . OPEN_PARANTHESIS expr CLOSE_PARANTHESIS block

    OPEN_PARANTHESIS  shift, and go to state 69


State 52

   36 statement: FOR . IDENTIFIER EQUAL expr COMMA expr block

    IDENTIFIER  shift, and go to state 70


State 53

   40 statement: CONTINUE . SEMICOLON

    SEMICOLON  shift, and go to state 71


State 54

   39 statement: BREAK . SEMICOLON

    SEMICOLON  shift, and go to state 72


State 55

   45 method_call: CALLOUT . OPEN_PARANTHESIS STRING_VALUE CLOSE_PARANTHESIS
   46            | CALLOUT . OPEN_PARANTHESIS STRING_VALUE callout_args CLOSE_PARANTHESIS

    OPEN_PARANTHESIS  shift, and go to state 73


State 56

   37 statement: RETURN . expr SEMICOLON
   38          | RETURN . SEMICOLON

    SEMICOLON         shift, and go to state 74
    OPEN_PARANTHESIS  shift, and go to state 75
    CALLOUT           shift, and go to state 55
    FALSE             shift, and go to state 76
    TRUE              shift, and go to state 77
    IDENTIFIER        shift, and go to state 57
    CHAR_VALUE        shift, and go to state 78
    INT_VALUE         shift, and go to state 79
    MINUS             shift, and go to state 80
    NOT               shift, and go to state 81

    method_call  go to state 82
    location     go to state 83
    expr         go to state 84
    literal      go to state 85
    bool_value   go to state 86


State 57

   43 method_call: IDENTIFIER . OPEN_PARANTHESIS CLOSE_PARANTHESIS
   44            | IDENTIFIER . OPEN_PARANTHESIS exprs CLOSE_PARANTHESIS
   49 location: IDENTIFIER .
   50         | IDENTIFIER . OPEN_SQUAREBRACKET expr CLOSE_SQUAREBRACKET

    OPEN_PARANTHESIS    shift, and go to state 87
    OPEN_SQUAREBRACKET  shift, and go to state 88

    $default  reduce using rule 49 (location)


State 58

   41 statement: block .

    $default  reduce using rule 41 (statement)


State 59

   21 block: OPEN_CURLYBRACE var_decls . statements CLOSE_CURLYBRACE
   22      | OPEN_CURLYBRACE var_decls . CLOSE_CURLYBRACE
   26 var_decls: var_decls . var_decl

    SEMICOLON         shift, and go to state 49
    OPEN_CURLYBRACE   shift, and go to state 41
    CLOSE_CURLYBRACE  shift, and go to state 89
    IF                shift, and go to state 51
    FOR               shift, and go to state 52
    CONTINUE          shift, and go to state 53
    BREAK             shift, and go to state 54
    CALLOUT           shift, and go to state 55
    RETURN            shift, and go to state 56
    INT               shift, and go to state 8
    BOOLEAN           shift, and go to state 9
    IDENTIFIER        shift, and go to state 57

    block        go to state 58
    var_decl     go to state 90
    statements   go to state 91
    statement    go to state 62
    method_call  go to state 63
    location     go to state 64
    type         go to state 65


State 60

   25 var_decls: var_decl .

    $default  reduce using rule 25 (var_decls)


State 61

   23 block: OPEN_CURLYBRACE statements . CLOSE_CURLYBRACE
   31 statements: statements . statement

    SEMICOLON         shift, and go to state 49
    OPEN_CURLYBRACE   shift, and go to state 41
    CLOSE_CURLYBRACE  shift, and go to state 92
    IF                shift, and go to state 51
    FOR               shift, and go to state 52
    CONTINUE          shift, and go to state 53
    BREAK             shift, and go to state 54
    CALLOUT           shift, and go to state 55
    RETURN            shift, and go to state 56
    IDENTIFIER        shift, and go to state 57

    block        go to state 58
    statement    go to state 93
    method_call  go to state 63
    location     go to state 64


State 62

   30 statements: statement .

    $default  reduce using rule 30 (statements)


State 63

   33 statement: method_call . SEMICOLON

    SEMICOLON  shift, and go to state 94


State 64

   32 statement: location . assign_op expr SEMICOLON

    EQUAL       shift, and go to state 95
    PLUSEQUAL   shift, and go to state 96
    MINUSEQUAL  shift, and go to state 97

    assign_op  go to state 98


State 65

   27 var_decl: type . identifiers SEMICOLON

    IDENTIFIER  shift, and go to state 99

    identifiers  go to state 100


State 66

   19 params: params COMMA param .

    $default  reduce using rule 19 (params)


State 67

   15 method_decl: VOID IDENTIFIER OPEN_PARANTHESIS params CLOSE_PARANTHESIS block .

    $default  reduce using rule 15 (method_decl)


State 68

   14 method_decl: type IDENTIFIER OPEN_PARANTHESIS params CLOSE_PARANTHESIS block .

    $default  reduce using rule 14 (method_decl)


State 69

   34 statement: IF OPEN_PARANTHESIS . expr CLOSE_PARANTHESIS block ELSE block
   35          | IF OPEN_PARANTHESIS . expr CLOSE_PARANTHESIS block

    OPEN_PARANTHESIS  shift, and go to state 75
    CALLOUT           shift, and go to state 55
    FALSE             shift, and go to state 76
    TRUE              shift, and go to state 77
    IDENTIFIER        shift, and go to state 57
    CHAR_VALUE        shift, and go to state 78
    INT_VALUE         shift, and go to state 79
    MINUS             shift, and go to state 80
    NOT               shift, and go to state 81

    method_call  go to state 82
    location     go to state 83
    expr         go to state 101
    literal      go to state 85
    bool_value   go to state 86


State 70

   36 statement: FOR IDENTIFIER . EQUAL expr COMMA expr block

    EQUAL  shift, and go to state 102


State 71

   40 statement: CONTINUE SEMICOLON .

    $default  reduce using rule 40 (statement)


State 72

   39 statement: BREAK SEMICOLON .

    $default  reduce using rule 39 (statement)


State 73

   45 method_call: CALLOUT OPEN_PARANTHESIS . STRING_VALUE CLOSE_PARANTHESIS
   46            | CALLOUT OPEN_PARANTHESIS . STRING_VALUE callout_args CLOSE_PARANTHESIS

    STRING_VALUE  shift, and go to state 103


State 74

   38 statement: RETURN SEMICOLON .

    $default  reduce using rule 38 (statement)


State 75

   69 expr: OPEN_PARANTHESIS . expr CLOSE_PARANTHESIS

    OPEN_PARANTHESIS  shift, and go to state 75
    CALLOUT           shift, and go to state 55
    FALSE             shift, and go to state 76
    TRUE              shift, and go to state 77
    IDENTIFIER        shift, and go to state 57
    CHAR_VALUE        shift, and go to state 78
    INT_VALUE         shift, and go to state 79
    MINUS             shift, and go to state 80
    NOT               shift, and go to state 81

    method_call  go to state 82
    location     go to state 83
    expr         go to state 104
    literal      go to state 85
    bool_value   go to state 86


State 76

   81 bool_value: FALSE .

    $default  reduce using rule 81 (bool_value)


State 77

   80 bool_value: TRUE .

    $default  reduce using rule 80 (bool_value)


State 78

   79 literal: CHAR_VALUE .

    $default  reduce using rule 79 (literal)


State 79

   77 literal: INT_VALUE .

    $default  reduce using rule 77 (literal)


State 80

   67 expr: MINUS . expr

    OPEN_PARANTHESIS  shift, and go to state 75
    CALLOUT           shift, and go to state 55
    FALSE             shift, and go to state 76
    TRUE              shift, and go to state 77
    IDENTIFIER        shift, and go to state 57
    CHAR_VALUE        shift, and go to state 78
    INT_VALUE         shift, and go to state 79
    MINUS             shift, and go to state 80
    NOT               shift, and go to state 81

    method_call  go to state 82
    location     go to state 83
    expr         go to state 105
    literal      go to state 85
    bool_value   go to state 86


State 81

   68 expr: NOT . expr

    OPEN_PARANTHESIS  shift, and go to state 75
    CALLOUT           shift, and go to state 55
    FALSE             shift, and go to state 76
    TRUE              shift, and go to state 77
    IDENTIFIER        shift, and go to state 57
    CHAR_VALUE        shift, and go to state 78
    INT_VALUE         shift, and go to state 79
    MINUS             shift, and go to state 80
    NOT               shift, and go to state 81

    method_call  go to state 82
    location     go to state 83
    expr         go to state 106
    literal      go to state 85
    bool_value   go to state 86


State 82

   52 expr: method_call .

    $default  reduce using rule 52 (expr)


State 83

   51 expr: location .

    $default  reduce using rule 51 (expr)


State 84

   37 statement: RETURN expr . SEMICOLON
   54 expr: expr . OR expr
   55     | expr . AND expr
   56     | expr . EQUALEQUAL expr
   57     | expr . NOTEQUAL expr
   58     | expr . LESSTHAN expr
   59     | expr . LESSEQUAL expr
   60     | expr . GREATERTHAN expr
   61     | expr . GREATEREQUAL expr
   62     | expr . PLUS expr
   63     | expr . MINUS expr
   64     | expr . MULTIPLY expr
   65     | expr . DIVIDE expr
   66     | expr . MODULO expr

    SEMICOLON     shift, and go to state 107
    OR            shift, and go to state 108
    AND           shift, and go to state 109
    EQUALEQUAL    shift, and go to state 110
    NOTEQUAL      shift, and go to state 111
    LESSEQUAL     shift, and go to state 112
    LESSTHAN      shift, and go to state 113
    GREATEREQUAL  shift, and go to state 114
    GREATERTHAN   shift, and go to state 115
    PLUS          shift, and go to state 116
    MINUS         shift, and go to state 117
    MULTIPLY      shift, and go to state 118
    DIVIDE        shift, and go to state 119
    MODULO        shift, and go to state 120


State 85

   53 expr: literal .

    $default  reduce using rule 53 (expr)


State 86

   78 literal: bool_value .

    $default  reduce using rule 78 (literal)


State 87

   43 method_call: IDENTIFIER OPEN_PARANTHESIS . CLOSE_PARANTHESIS
   44            | IDENTIFIER OPEN_PARANTHESIS . exprs CLOSE_PARANTHESIS

    OPEN_PARANTHESIS   shift, and go to state 75
    CLOSE_PARANTHESIS  shift, and go to state 121
    CALLOUT            shift, and go to state 55
    FALSE              shift, and go to state 76
    TRUE               shift, and go to state 77
    IDENTIFIER         shift, and go to state 57
    CHAR_VALUE         shift, and go to state 78
    INT_VALUE          shift, and go to state 79
    MINUS              shift, and go to state 80
    NOT                shift, and go to state 81

    method_call  go to state 82
    exprs        go to state 122
    location     go to state 83
    expr         go to state 123
    literal      go to state 85
    bool_value   go to state 86


State 88

   50 location: IDENTIFIER OPEN_SQUAREBRACKET . expr CLOSE_SQUAREBRACKET

    OPEN_PARANTHESIS  shift, and go to state 75
    CALLOUT           shift, and go to state 55
    FALSE             shift, and go to state 76
    TRUE              shift, and go to state 77
    IDENTIFIER        shift, and go to state 57
    CHAR_VALUE        shift, and go to state 78
    INT_VALUE         shift, and go to state 79
    MINUS             shift, and go to state 80
    NOT               shift, and go to state 81

    method_call  go to state 82
    location     go to state 83
    expr         go to state 124
    literal      go to state 85
    bool_value   go to state 86


State 89

   22 block: OPEN_CURLYBRACE var_decls CLOSE_CURLYBRACE .

    $default  reduce using rule 22 (block)


State 90

   26 var_decls: var_decls var_decl .

    $default  reduce using rule 26 (var_decls)


State 91

   21 block: OPEN_CURLYBRACE var_decls statements . CLOSE_CURLYBRACE
   31 statements: statements . statement

    SEMICOLON         shift, and go to state 49
    OPEN_CURLYBRACE   shift, and go to state 41
    CLOSE_CURLYBRACE  shift, and go to state 125
    IF                shift, and go to state 51
    FOR               shift, and go to state 52
    CONTINUE          shift, and go to state 53
    BREAK             shift, and go to state 54
    CALLOUT           shift, and go to state 55
    RETURN            shift, and go to state 56
    IDENTIFIER        shift, and go to state 57

    block        go to state 58
    statement    go to state 93
    method_call  go to state 63
    location     go to state 64


State 92

   23 block: OPEN_CURLYBRACE statements CLOSE_CURLYBRACE .

    $default  reduce using rule 23 (block)


State 93

   31 statements: statements statement .

    $default  reduce using rule 31 (statements)


State 94

   33 statement: method_call SEMICOLON .

    $default  reduce using rule 33 (statement)


State 95

   74 assign_op: EQUAL .

    $default  reduce using rule 74 (assign_op)


State 96

   75 assign_op: PLUSEQUAL .

    $default  reduce using rule 75 (assign_op)


State 97

   76 assign_op: MINUSEQUAL .

    $default  reduce using rule 76 (assign_op)


State 98

   32 statement: location assign_op . expr SEMICOLON

    OPEN_PARANTHESIS  shift, and go to state 75
    CALLOUT           shift, and go to state 55
    FALSE             shift, and go to state 76
    TRUE              shift, and go to state 77
    IDENTIFIER        shift, and go to state 57
    CHAR_VALUE        shift, and go to state 78
    INT_VALUE         shift, and go to state 79
    MINUS             shift, and go to state 80
    NOT               shift, and go to state 81

    method_call  go to state 82
    location     go to state 83
    expr         go to state 126
    literal      go to state 85
    bool_value   go to state 86


State 99

   28 identifiers: IDENTIFIER .

    $default  reduce using rule 28 (identifiers)


State 100

   27 var_decl: type identifiers . SEMICOLON
   29 identifiers: identifiers . COMMA IDENTIFIER

    SEMICOLON  shift, and go to state 127
    COMMA      shift, and go to state 128


State 101

   34 statement: IF OPEN_PARANTHESIS expr . CLOSE_PARANTHESIS block ELSE block
   35          | IF OPEN_PARANTHESIS expr . CLOSE_PARANTHESIS block
   54 expr: expr . OR expr
   55     | expr . AND expr
   56     | expr . EQUALEQUAL expr
   57     | expr . NOTEQUAL expr
   58     | expr . LESSTHAN expr
   59     | expr . LESSEQUAL expr
   60     | expr . GREATERTHAN expr
   61     | expr . GREATEREQUAL expr
   62     | expr . PLUS expr
   63     | expr . MINUS expr
   64     | expr . MULTIPLY expr
   65     | expr . DIVIDE expr
   66     | expr . MODULO expr

    CLOSE_PARANTHESIS  shift, and go to state 129
    OR                 shift, and go to state 108
    AND                shift, and go to state 109
    EQUALEQUAL         shift, and go to state 110
    NOTEQUAL           shift, and go to state 111
    LESSEQUAL          shift, and go to state 112
    LESSTHAN           shift, and go to state 113
    GREATEREQUAL       shift, and go to state 114
    GREATERTHAN        shift, and go to state 115
    PLUS               shift, and go to state 116
    MINUS              shift, and go to state 117
    MULTIPLY           shift, and go to state 118
    DIVIDE             shift, and go to state 119
    MODULO             shift, and go to state 120


State 102

   36 statement: FOR IDENTIFIER EQUAL . expr COMMA expr block

    OPEN_PARANTHESIS  shift, and go to state 75
    CALLOUT           shift, and go to state 55
    FALSE             shift, and go to state 76
    TRUE              shift, and go to state 77
    IDENTIFIER        shift, and go to state 57
    CHAR_VALUE        shift, and go to state 78
    INT_VALUE         shift, and go to state 79
    MINUS             shift, and go to state 80
    NOT               shift, and go to state 81

    method_call  go to state 82
    location     go to state 83
    expr         go to state 130
    literal      go to state 85
    bool_value   go to state 86


State 103

   45 method_call: CALLOUT OPEN_PARANTHESIS STRING_VALUE . CLOSE_PARANTHESIS
   46            | CALLOUT OPEN_PARANTHESIS STRING_VALUE . callout_args CLOSE_PARANTHESIS

    COMMA              shift, and go to state 131
    CLOSE_PARANTHESIS  shift, and go to state 132

    callout_args  go to state 133


State 104

   54 expr: expr . OR expr
   55     | expr . AND expr
   56     | expr . EQUALEQUAL expr
   57     | expr . NOTEQUAL expr
   58     | expr . LESSTHAN expr
   59     | expr . LESSEQUAL expr
   60     | expr . GREATERTHAN expr
   61     | expr . GREATEREQUAL expr
   62     | expr . PLUS expr
   63     | expr . MINUS expr
   64     | expr . MULTIPLY expr
   65     | expr . DIVIDE expr
   66     | expr . MODULO expr
   69     | OPEN_PARANTHESIS expr . CLOSE_PARANTHESIS

    CLOSE_PARANTHESIS  shift, and go to state 134
    OR                 shift, and go to state 108
    AND                shift, and go to state 109
    EQUALEQUAL         shift, and go to state 110
    NOTEQUAL           shift, and go to state 111
    LESSEQUAL          shift, and go to state 112
    LESSTHAN           shift, and go to state 113
    GREATEREQUAL       shift, and go to state 114
    GREATERTHAN        shift, and go to state 115
    PLUS               shift, and go to state 116
    MINUS              shift, and go to state 117
    MULTIPLY           shift, and go to state 118
    DIVIDE             shift, and go to state 119
    MODULO             shift, and go to state 120


State 105

   54 expr: expr . OR expr
   55     | expr . AND expr
   56     | expr . EQUALEQUAL expr
   57     | expr . NOTEQUAL expr
   58     | expr . LESSTHAN expr
   59     | expr . LESSEQUAL expr
   60     | expr . GREATERTHAN expr
   61     | expr . GREATEREQUAL expr
   62     | expr . PLUS expr
   63     | expr . MINUS expr
   64     | expr . MULTIPLY expr
   65     | expr . DIVIDE expr
   66     | expr . MODULO expr
   67     | MINUS expr .

    MULTIPLY  shift, and go to state 118
    DIVIDE    shift, and go to state 119
    MODULO    shift, and go to state 120

    $default  reduce using rule 67 (expr)


State 106

   54 expr: expr . OR expr
   55     | expr . AND expr
   56     | expr . EQUALEQUAL expr
   57     | expr . NOTEQUAL expr
   58     | expr . LESSTHAN expr
   59     | expr . LESSEQUAL expr
   60     | expr . GREATERTHAN expr
   61     | expr . GREATEREQUAL expr
   62     | expr . PLUS expr
   63     | expr . MINUS expr
   64     | expr . MULTIPLY expr
   65     | expr . DIVIDE expr
   66     | expr . MODULO expr
   68     | NOT expr .

    $default  reduce using rule 68 (expr)


State 107

   37 statement: RETURN expr SEMICOLON .

    $default  reduce using rule 37 (statement)


State 108

   54 expr: expr OR . expr

    OPEN_PARANTHESIS  shift, and go to state 75
    CALLOUT           shift, and go to state 55
    FALSE             shift, and go to state 76
    TRUE              shift, and go to state 77
    IDENTIFIER        shift, and go to state 57
    CHAR_VALUE        shift, and go to state 78
    INT_VALUE         shift, and go to state 79
    MINUS             shift, and go to state 80
    NOT               shift, and go to state 81

    method_call  go to state 82
    location     go to state 83
    expr         go to state 135
    literal      go to state 85
    bool_value   go to state 86


State 109

   55 expr: expr AND . expr

    OPEN_PARANTHESIS  shift, and go to state 75
    CALLOUT           shift, and go to state 55
    FALSE             shift, and go to state 76
    TRUE              shift, and go to state 77
    IDENTIFIER        shift, and go to state 57
    CHAR_VALUE        shift, and go to state 78
    INT_VALUE         shift, and go to state 79
    MINUS             shift, and go to state 80
    NOT               shift, and go to state 81

    method_call  go to state 82
    location     go to state 83
    expr         go to state 136
    literal      go to state 85
    bool_value   go to state 86


State 110

   56 expr: expr EQUALEQUAL . expr

    OPEN_PARANTHESIS  shift, and go to state 75
    CALLOUT           shift, and go to state 55
    FALSE             shift, and go to state 76
    TRUE              shift, and go to state 77
    IDENTIFIER        shift, and go to state 57
    CHAR_VALUE        shift, and go to state 78
    INT_VALUE         shift, and go to state 79
    MINUS             shift, and go to state 80
    NOT               shift, and go to state 81

    method_call  go to state 82
    location     go to state 83
    expr         go to state 137
    literal      go to state 85
    bool_value   go to state 86


State 111

   57 expr: expr NOTEQUAL . expr

    OPEN_PARANTHESIS  shift, and go to state 75
    CALLOUT           shift, and go to state 55
    FALSE             shift, and go to state 76
    TRUE              shift, and go to state 77
    IDENTIFIER        shift, and go to state 57
    CHAR_VALUE        shift, and go to state 78
    INT_VALUE         shift, and go to state 79
    MINUS             shift, and go to state 80
    NOT               shift, and go to state 81

    method_call  go to state 82
    location     go to state 83
    expr         go to state 138
    literal      go to state 85
    bool_value   go to state 86


State 112

   59 expr: expr LESSEQUAL . expr

    OPEN_PARANTHESIS  shift, and go to state 75
    CALLOUT           shift, and go to state 55
    FALSE             shift, and go to state 76
    TRUE              shift, and go to state 77
    IDENTIFIER        shift, and go to state 57
    CHAR_VALUE        shift, and go to state 78
    INT_VALUE         shift, and go to state 79
    MINUS             shift, and go to state 80
    NOT               shift, and go to state 81

    method_call  go to state 82
    location     go to state 83
    expr         go to state 139
    literal      go to state 85
    bool_value   go to state 86


State 113

   58 expr: expr LESSTHAN . expr

    OPEN_PARANTHESIS  shift, and go to state 75
    CALLOUT           shift, and go to state 55
    FALSE             shift, and go to state 76
    TRUE              shift, and go to state 77
    IDENTIFIER        shift, and go to state 57
    CHAR_VALUE        shift, and go to state 78
    INT_VALUE         shift, and go to state 79
    MINUS             shift, and go to state 80
    NOT               shift, and go to state 81

    method_call  go to state 82
    location     go to state 83
    expr         go to state 140
    literal      go to state 85
    bool_value   go to state 86


State 114

   61 expr: expr GREATEREQUAL . expr

    OPEN_PARANTHESIS  shift, and go to state 75
    CALLOUT           shift, and go to state 55
    FALSE             shift, and go to state 76
    TRUE              shift, and go to state 77
    IDENTIFIER        shift, and go to state 57
    CHAR_VALUE        shift, and go to state 78
    INT_VALUE         shift, and go to state 79
    MINUS             shift, and go to state 80
    NOT               shift, and go to state 81

    method_call  go to state 82
    location     go to state 83
    expr         go to state 141
    literal      go to state 85
    bool_value   go to state 86


State 115

   60 expr: expr GREATERTHAN . expr

    OPEN_PARANTHESIS  shift, and go to state 75
    CALLOUT           shift, and go to state 55
    FALSE             shift, and go to state 76
    TRUE              shift, and go to state 77
    IDENTIFIER        shift, and go to state 57
    CHAR_VALUE        shift, and go to state 78
    INT_VALUE         shift, and go to state 79
    MINUS             shift, and go to state 80
    NOT               shift, and go to state 81

    method_call  go to state 82
    location     go to state 83
    expr         go to state 142
    literal      go to state 85
    bool_value   go to state 86


State 116

   62 expr: expr PLUS . expr

    OPEN_PARANTHESIS  shift, and go to state 75
    CALLOUT           shift, and go to state 55
    FALSE             shift, and go to state 76
    TRUE              shift, and go to state 77
    IDENTIFIER        shift, and go to state 57
    CHAR_VALUE        shift, and go to state 78
    INT_VALUE         shift, and go to state 79
    MINUS             shift, and go to state 80
    NOT               shift, and go to state 81

    method_call  go to state 82
    location     go to state 83
    expr         go to state 143
    literal      go to state 85
    bool_value   go to state 86


State 117

   63 expr: expr MINUS . expr

    OPEN_PARANTHESIS  shift, and go to state 75
    CALLOUT           shift, and go to state 55
    FALSE             shift, and go to state 76
    TRUE              shift, and go to state 77
    IDENTIFIER        shift, and go to state 57
    CHAR_VALUE        shift, and go to state 78
    INT_VALUE         shift, and go to state 79
    MINUS             shift, and go to state 80
    NOT               shift, and go to state 81

    method_call  go to state 82
    location     go to state 83
    expr         go to state 144
    literal      go to state 85
    bool_value   go to state 86


State 118

   64 expr: expr MULTIPLY . expr

    OPEN_PARANTHESIS  shift, and go to state 75
    CALLOUT           shift, and go to state 55
    FALSE             shift, and go to state 76
    TRUE              shift, and go to state 77
    IDENTIFIER        shift, and go to state 57
    CHAR_VALUE        shift, and go to state 78
    INT_VALUE         shift, and go to state 79
    MINUS             shift, and go to state 80
    NOT               shift, and go to state 81

    method_call  go to state 82
    location     go to state 83
    expr         go to state 145
    literal      go to state 85
    bool_value   go to state 86


State 119

   65 expr: expr DIVIDE . expr

    OPEN_PARANTHESIS  shift, and go to state 75
    CALLOUT           shift, and go to state 55
    FALSE             shift, and go to state 76
    TRUE              shift, and go to state 77
    IDENTIFIER        shift, and go to state 57
    CHAR_VALUE        shift, and go to state 78
    INT_VALUE         shift, and go to state 79
    MINUS             shift, and go to state 80
    NOT               shift, and go to state 81

    method_call  go to state 82
    location     go to state 83
    expr         go to state 146
    literal      go to state 85
    bool_value   go to state 86


State 120

   66 expr: expr MODULO . expr

    OPEN_PARANTHESIS  shift, and go to state 75
    CALLOUT           shift, and go to state 55
    FALSE             shift, and go to state 76
    TRUE              shift, and go to state 77
    IDENTIFIER        shift, and go to state 57
    CHAR_VALUE        shift, and go to state 78
    INT_VALUE         shift, and go to state 79
    MINUS             shift, and go to state 80
    NOT               shift, and go to state 81

    method_call  go to state 82
    location     go to state 83
    expr         go to state 147
    literal      go to state 85
    bool_value   go to state 86


State 121

   43 method_call: IDENTIFIER OPEN_PARANTHESIS CLOSE_PARANTHESIS .

    $default  reduce using rule 43 (method_call)


State 122

   44 method_call: IDENTIFIER OPEN_PARANTHESIS exprs . CLOSE_PARANTHESIS
   48 exprs: exprs . COMMA expr

    COMMA              shift, and go to state 148
    CLOSE_PARANTHESIS  shift, and go to state 149


State 123

   47 exprs: expr .
   54 expr: expr . OR expr
   55     | expr . AND expr
   56     | expr . EQUALEQUAL expr
   57     | expr . NOTEQUAL expr
   58     | expr . LESSTHAN expr
   59     | expr . LESSEQUAL expr
   60     | expr . GREATERTHAN expr
   61     | expr . GREATEREQUAL expr
   62     | expr . PLUS expr
   63     | expr . MINUS expr
   64     | expr . MULTIPLY expr
   65     | expr . DIVIDE expr
   66     | expr . MODULO expr

    OR            shift, and go to state 108
    AND           shift, and go to state 109
    EQUALEQUAL    shift, and go to state 110
    NOTEQUAL      shift, and go to state 111
    LESSEQUAL     shift, and go to state 112
    LESSTHAN      shift, and go to state 113
    GREATEREQUAL  shift, and go to state 114
    GREATERTHAN   shift, and go to state 115
    PLUS          shift, and go to state 116
    MINUS         shift, and go to state 117
    MULTIPLY      shift, and go to state 118
    DIVIDE        shift, and go to state 119
    MODULO        shift, and go to state 120

    $default  reduce using rule 47 (exprs)


State 124

   50 location: IDENTIFIER OPEN_SQUAREBRACKET expr . CLOSE_SQUAREBRACKET
   54 expr: expr . OR expr
   55     | expr . AND expr
   56     | expr . EQUALEQUAL expr
   57     | expr . NOTEQUAL expr
   58     | expr . LESSTHAN expr
   59     | expr . LESSEQUAL expr
   60     | expr . GREATERTHAN expr
   61     | expr . GREATEREQUAL expr
   62     | expr . PLUS expr
   63     | expr . MINUS expr
   64     | expr . MULTIPLY expr
   65     | expr . DIVIDE expr
   66     | expr . MODULO expr

    CLOSE_SQUAREBRACKET  shift, and go to state 150
    OR                   shift, and go to state 108
    AND                  shift, and go to state 109
    EQUALEQUAL           shift, and go to state 110
    NOTEQUAL             shift, and go to state 111
    LESSEQUAL            shift, and go to state 112
    LESSTHAN             shift, and go to state 113
    GREATEREQUAL         shift, and go to state 114
    GREATERTHAN          shift, and go to state 115
    PLUS                 shift, and go to state 116
    MINUS                shift, and go to state 117
    MULTIPLY             shift, and go to state 118
    DIVIDE               shift, and go to state 119
    MODULO               shift, and go to state 120


State 125

   21 block: OPEN_CURLYBRACE var_decls statements CLOSE_CURLYBRACE .

    $default  reduce using rule 21 (block)


State 126

   32 statement: location assign_op expr . SEMICOLON
   54 expr: expr . OR expr
   55     | expr . AND expr
   56     | expr . EQUALEQUAL expr
   57     | expr . NOTEQUAL expr
   58     | expr . LESSTHAN expr
   59     | expr . LESSEQUAL expr
   60     | expr . GREATERTHAN expr
   61     | expr . GREATEREQUAL expr
   62     | expr . PLUS expr
   63     | expr . MINUS expr
   64     | expr . MULTIPLY expr
   65     | expr . DIVIDE expr
   66     | expr . MODULO expr

    SEMICOLON     shift, and go to state 151
    OR            shift, and go to state 108
    AND           shift, and go to state 109
    EQUALEQUAL    shift, and go to state 110
    NOTEQUAL      shift, and go to state 111
    LESSEQUAL     shift, and go to state 112
    LESSTHAN      shift, and go to state 113
    GREATEREQUAL  shift, and go to state 114
    GREATERTHAN   shift, and go to state 115
    PLUS          shift, and go to state 116
    MINUS         shift, and go to state 117
    MULTIPLY      shift, and go to state 118
    DIVIDE        shift, and go to state 119
    MODULO        shift, and go to state 120


State 127

   27 var_decl: type identifiers SEMICOLON .

    $default  reduce using rule 27 (var_decl)


State 128

   29 identifiers: identifiers COMMA . IDENTIFIER

    IDENTIFIER  shift, and go to state 152


State 129

   34 statement: IF OPEN_PARANTHESIS expr CLOSE_PARANTHESIS . block ELSE block
   35          | IF OPEN_PARANTHESIS expr CLOSE_PARANTHESIS . block

    OPEN_CURLYBRACE  shift, and go to state 41

    block  go to state 153


State 130

   36 statement: FOR IDENTIFIER EQUAL expr . COMMA expr block
   54 expr: expr . OR expr
   55     | expr . AND expr
   56     | expr . EQUALEQUAL expr
   57     | expr . NOTEQUAL expr
   58     | expr . LESSTHAN expr
   59     | expr . LESSEQUAL expr
   60     | expr . GREATERTHAN expr
   61     | expr . GREATEREQUAL expr
   62     | expr . PLUS expr
   63     | expr . MINUS expr
   64     | expr . MULTIPLY expr
   65     | expr . DIVIDE expr
   66     | expr . MODULO expr

    COMMA         shift, and go to state 154
    OR            shift, and go to state 108
    AND           shift, and go to state 109
    EQUALEQUAL    shift, and go to state 110
    NOTEQUAL      shift, and go to state 111
    LESSEQUAL     shift, and go to state 112
    LESSTHAN      shift, and go to state 113
    GREATEREQUAL  shift, and go to state 114
    GREATERTHAN   shift, and go to state 115
    PLUS          shift, and go to state 116
    MINUS         shift, and go to state 117
    MULTIPLY      shift, and go to state 118
    DIVIDE        shift, and go to state 119
    MODULO        shift, and go to state 120


State 131

   70 callout_args: COMMA . callout_arg

    OPEN_PARANTHESIS  shift, and go to state 75
    CALLOUT           shift, and go to state 55
    FALSE             shift, and go to state 76
    TRUE              shift, and go to state 77
    IDENTIFIER        shift, and go to state 57
    STRING_VALUE      shift, and go to state 155
    CHAR_VALUE        shift, and go to state 78
    INT_VALUE         shift, and go to state 79
    MINUS             shift, and go to state 80
    NOT               shift, and go to state 81

    method_call  go to state 82
    location     go to state 83
    expr         go to state 156
    callout_arg  go to state 157
    literal      go to state 85
    bool_value   go to state 86


State 132

   45 method_call: CALLOUT OPEN_PARANTHESIS STRING_VALUE CLOSE_PARANTHESIS .

    $default  reduce using rule 45 (method_call)


State 133

   46 method_call: CALLOUT OPEN_PARANTHESIS STRING_VALUE callout_args . CLOSE_PARANTHESIS
   71 callout_args: callout_args . COMMA callout_arg

    COMMA              shift, and go to state 158
    CLOSE_PARANTHESIS  shift, and go to state 159


State 134

   69 expr: OPEN_PARANTHESIS expr CLOSE_PARANTHESIS .

    $default  reduce using rule 69 (expr)


State 135

   54 expr: expr . OR expr
   54     | expr OR expr .
   55     | expr . AND expr
   56     | expr . EQUALEQUAL expr
   57     | expr . NOTEQUAL expr
   58     | expr . LESSTHAN expr
   59     | expr . LESSEQUAL expr
   60     | expr . GREATERTHAN expr
   61     | expr . GREATEREQUAL expr
   62     | expr . PLUS expr
   63     | expr . MINUS expr
   64     | expr . MULTIPLY expr
   65     | expr . DIVIDE expr
   66     | expr . MODULO expr

    AND           shift, and go to state 109
    EQUALEQUAL    shift, and go to state 110
    NOTEQUAL      shift, and go to state 111
    LESSEQUAL     shift, and go to state 112
    LESSTHAN      shift, and go to state 113
    GREATEREQUAL  shift, and go to state 114
    GREATERTHAN   shift, and go to state 115
    PLUS          shift, and go to state 116
    MINUS         shift, and go to state 117
    MULTIPLY      shift, and go to state 118
    DIVIDE        shift, and go to state 119
    MODULO        shift, and go to state 120

    $default  reduce using rule 54 (expr)


State 136

   54 expr: expr . OR expr
   55     | expr . AND expr
   55     | expr AND expr .
   56     | expr . EQUALEQUAL expr
   57     | expr . NOTEQUAL expr
   58     | expr . LESSTHAN expr
   59     | expr . LESSEQUAL expr
   60     | expr . GREATERTHAN expr
   61     | expr . GREATEREQUAL expr
   62     | expr . PLUS expr
   63     | expr . MINUS expr
   64     | expr . MULTIPLY expr
   65     | expr . DIVIDE expr
   66     | expr . MODULO expr

    EQUALEQUAL    shift, and go to state 110
    NOTEQUAL      shift, and go to state 111
    LESSEQUAL     shift, and go to state 112
    LESSTHAN      shift, and go to state 113
    GREATEREQUAL  shift, and go to state 114
    GREATERTHAN   shift, and go to state 115
    PLUS          shift, and go to state 116
    MINUS         shift, and go to state 117
    MULTIPLY      shift, and go to state 118
    DIVIDE        shift, and go to state 119
    MODULO        shift, and go to state 120

    $default  reduce using rule 55 (expr)


State 137

   54 expr: expr . OR expr
   55     | expr . AND expr
   56     | expr . EQUALEQUAL expr
   56     | expr EQUALEQUAL expr .
   57     | expr . NOTEQUAL expr
   58     | expr . LESSTHAN expr
   59     | expr . LESSEQUAL expr
   60     | expr . GREATERTHAN expr
   61     | expr . GREATEREQUAL expr
   62     | expr . PLUS expr
   63     | expr . MINUS expr
   64     | expr . MULTIPLY expr
   65     | expr . DIVIDE expr
   66     | expr . MODULO expr

    LESSEQUAL     shift, and go to state 112
    LESSTHAN      shift, and go to state 113
    GREATEREQUAL  shift, and go to state 114
    GREATERTHAN   shift, and go to state 115
    PLUS          shift, and go to state 116
    MINUS         shift, and go to state 117
    MULTIPLY      shift, and go to state 118
    DIVIDE        shift, and go to state 119
    MODULO        shift, and go to state 120

    $default  reduce using rule 56 (expr)


State 138

   54 expr: expr . OR expr
   55     | expr . AND expr
   56     | expr . EQUALEQUAL expr
   57     | expr . NOTEQUAL expr
   57     | expr NOTEQUAL expr .
   58     | expr . LESSTHAN expr
   59     | expr . LESSEQUAL expr
   60     | expr . GREATERTHAN expr
   61     | expr . GREATEREQUAL expr
   62     | expr . PLUS expr
   63     | expr . MINUS expr
   64     | expr . MULTIPLY expr
   65     | expr . DIVIDE expr
   66     | expr . MODULO expr

    LESSEQUAL     shift, and go to state 112
    LESSTHAN      shift, and go to state 113
    GREATEREQUAL  shift, and go to state 114
    GREATERTHAN   shift, and go to state 115
    PLUS          shift, and go to state 116
    MINUS         shift, and go to state 117
    MULTIPLY      shift, and go to state 118
    DIVIDE        shift, and go to state 119
    MODULO        shift, and go to state 120

    $default  reduce using rule 57 (expr)


State 139

   54 expr: expr . OR expr
   55     | expr . AND expr
   56     | expr . EQUALEQUAL expr
   57     | expr . NOTEQUAL expr
   58     | expr . LESSTHAN expr
   59     | expr . LESSEQUAL expr
   59     | expr LESSEQUAL expr .
   60     | expr . GREATERTHAN expr
   61     | expr . GREATEREQUAL expr
   62     | expr . PLUS expr
   63     | expr . MINUS expr
   64     | expr . MULTIPLY expr
   65     | expr . DIVIDE expr
   66     | expr . MODULO expr

    PLUS      shift, and go to state 116
    MINUS     shift, and go to state 117
    MULTIPLY  shift, and go to state 118
    DIVIDE    shift, and go to state 119
    MODULO    shift, and go to state 120

    LESSEQUAL     error (nonassociative)
    LESSTHAN      error (nonassociative)
    GREATEREQUAL  error (nonassociative)
    GREATERTHAN   error (nonassociative)

    $default  reduce using rule 59 (expr)


State 140

   54 expr: expr . OR expr
   55     | expr . AND expr
   56     | expr . EQUALEQUAL expr
   57     | expr . NOTEQUAL expr
   58     | expr . LESSTHAN expr
   58     | expr LESSTHAN expr .
   59     | expr . LESSEQUAL expr
   60     | expr . GREATERTHAN expr
   61     | expr . GREATEREQUAL expr
   62     | expr . PLUS expr
   63     | expr . MINUS expr
   64     | expr . MULTIPLY expr
   65     | expr . DIVIDE expr
   66     | expr . MODULO expr

    PLUS      shift, and go to state 116
    MINUS     shift, and go to state 117
    MULTIPLY  shift, and go to state 118
    DIVIDE    shift, and go to state 119
    MODULO    shift, and go to state 120

    LESSEQUAL     error (nonassociative)
    LESSTHAN      error (nonassociative)
    GREATEREQUAL  error (nonassociative)
    GREATERTHAN   error (nonassociative)

    $default  reduce using rule 58 (expr)


State 141

   54 expr: expr . OR expr
   55     | expr . AND expr
   56     | expr . EQUALEQUAL expr
   57     | expr . NOTEQUAL expr
   58     | expr . LESSTHAN expr
   59     | expr . LESSEQUAL expr
   60     | expr . GREATERTHAN expr
   61     | expr . GREATEREQUAL expr
   61     | expr GREATEREQUAL expr .
   62     | expr . PLUS expr
   63     | expr . MINUS expr
   64     | expr . MULTIPLY expr
   65     | expr . DIVIDE expr
   66     | expr . MODULO expr

    PLUS      shift, and go to state 116
    MINUS     shift, and go to state 117
    MULTIPLY  shift, and go to state 118
    DIVIDE    shift, and go to state 119
    MODULO    shift, and go to state 120

    LESSEQUAL     error (nonassociative)
    LESSTHAN      error (nonassociative)
    GREATEREQUAL  error (nonassociative)
    GREATERTHAN   error (nonassociative)

    $default  reduce using rule 61 (expr)


State 142

   54 expr: expr . OR expr
   55     | expr . AND expr
   56     | expr . EQUALEQUAL expr
   57     | expr . NOTEQUAL expr
   58     | expr . LESSTHAN expr
   59     | expr . LESSEQUAL expr
   60     | expr . GREATERTHAN expr
   60     | expr GREATERTHAN expr .
   61     | expr . GREATEREQUAL expr
   62     | expr . PLUS expr
   63     | expr . MINUS expr
   64     | expr . MULTIPLY expr
   65     | expr . DIVIDE expr
   66     | expr . MODULO expr

    PLUS      shift, and go to state 116
    MINUS     shift, and go to state 117
    MULTIPLY  shift, and go to state 118
    DIVIDE    shift, and go to state 119
    MODULO    shift, and go to state 120

    LESSEQUAL     error (nonassociative)
    LESSTHAN      error (nonassociative)
    GREATEREQUAL  error (nonassociative)
    GREATERTHAN   error (nonassociative)

    $default  reduce using rule 60 (expr)


State 143

   54 expr: expr . OR expr
   55     | expr . AND expr
   56     | expr . EQUALEQUAL expr
   57     | expr . NOTEQUAL expr
   58     | expr . LESSTHAN expr
   59     | expr . LESSEQUAL expr
   60     | expr . GREATERTHAN expr
   61     | expr . GREATEREQUAL expr
   62     | expr . PLUS expr
   62     | expr PLUS expr .
   63     | expr . MINUS expr
   64     | expr . MULTIPLY expr
   65     | expr . DIVIDE expr
   66     | expr . MODULO expr

    MULTIPLY  shift, and go to state 118
    DIVIDE    shift, and go to state 119
    MODULO    shift, and go to state 120

    $default  reduce using rule 62 (expr)


State 144

   54 expr: expr . OR expr
   55     | expr . AND expr
   56     | expr . EQUALEQUAL expr
   57     | expr . NOTEQUAL expr
   58     | expr . LESSTHAN expr
   59     | expr . LESSEQUAL expr
   60     | expr . GREATERTHAN expr
   61     | expr . GREATEREQUAL expr
   62     | expr . PLUS expr
   63     | expr . MINUS expr
   63     | expr MINUS expr .
   64     | expr . MULTIPLY expr
   65     | expr . DIVIDE expr
   66     | expr . MODULO expr

    MULTIPLY  shift, and go to state 118
    DIVIDE    shift, and go to state 119
    MODULO    shift, and go to state 120

    $default  reduce using rule 63 (expr)


State 145

   54 expr: expr . OR expr
   55     | expr . AND expr
   56     | expr . EQUALEQUAL expr
   57     | expr . NOTEQUAL expr
   58     | expr . LESSTHAN expr
   59     | expr . LESSEQUAL expr
   60     | expr . GREATERTHAN expr
   61     | expr . GREATEREQUAL expr
   62     | expr . PLUS expr
   63     | expr . MINUS expr
   64     | expr . MULTIPLY expr
   64     | expr MULTIPLY expr .
   65     | expr . DIVIDE expr
   66     | expr . MODULO expr

    $default  reduce using rule 64 (expr)


State 146

   54 expr: expr . OR expr
   55     | expr . AND expr
   56     | expr . EQUALEQUAL expr
   57     | expr . NOTEQUAL expr
   58     | expr . LESSTHAN expr
   59     | expr . LESSEQUAL expr
   60     | expr . GREATERTHAN expr
   61     | expr . GREATEREQUAL expr
   62     | expr . PLUS expr
   63     | expr . MINUS expr
   64     | expr . MULTIPLY expr
   65     | expr . DIVIDE expr
   65     | expr DIVIDE expr .
   66     | expr . MODULO expr

    $default  reduce using rule 65 (expr)


State 147

   54 expr: expr . OR expr
   55     | expr . AND expr
   56     | expr . EQUALEQUAL expr
   57     | expr . NOTEQUAL expr
   58     | expr . LESSTHAN expr
   59     | expr . LESSEQUAL expr
   60     | expr . GREATERTHAN expr
   61     | expr . GREATEREQUAL expr
   62     | expr . PLUS expr
   63     | expr . MINUS expr
   64     | expr . MULTIPLY expr
   65     | expr . DIVIDE expr
   66     | expr . MODULO expr
   66     | expr MODULO expr .

    $default  reduce using rule 66 (expr)


State 148

   48 exprs: exprs COMMA . expr

    OPEN_PARANTHESIS  shift, and go to state 75
    CALLOUT           shift, and go to state 55
    FALSE             shift, and go to state 76
    TRUE              shift, and go to state 77
    IDENTIFIER        shift, and go to state 57
    CHAR_VALUE        shift, and go to state 78
    INT_VALUE         shift, and go to state 79
    MINUS             shift, and go to state 80
    NOT               shift, and go to state 81

    method_call  go to state 82
    location     go to state 83
    expr         go to state 160
    literal      go to state 85
    bool_value   go to state 86


State 149

   44 method_call: IDENTIFIER OPEN_PARANTHESIS exprs CLOSE_PARANTHESIS .

    $default  reduce using rule 44 (method_call)


State 150

   50 location: IDENTIFIER OPEN_SQUAREBRACKET expr CLOSE_SQUAREBRACKET .

    $default  reduce using rule 50 (location)


State 151

   32 statement: location assign_op expr SEMICOLON .

    $default  reduce using rule 32 (statement)


State 152

   29 identifiers: identifiers COMMA IDENTIFIER .

    $default  reduce using rule 29 (identifiers)


State 153

   34 statement: IF OPEN_PARANTHESIS expr CLOSE_PARANTHESIS block . ELSE block
   35          | IF OPEN_PARANTHESIS expr CLOSE_PARANTHESIS block .

    ELSE  shift, and go to state 161

    $default  reduce using rule 35 (statement)


State 154

   36 statement: FOR IDENTIFIER EQUAL expr COMMA . expr block

    OPEN_PARANTHESIS  shift, and go to state 75
    CALLOUT           shift, and go to state 55
    FALSE             shift, and go to state 76
    TRUE              shift, and go to state 77
    IDENTIFIER        shift, and go to state 57
    CHAR_VALUE        shift, and go to state 78
    INT_VALUE         shift, and go to state 79
    MINUS             shift, and go to state 80
    NOT               shift, and go to state 81

    method_call  go to state 82
    location     go to state 83
    expr         go to state 162
    literal      go to state 85
    bool_value   go to state 86


State 155

   73 callout_arg: STRING_VALUE .

    $default  reduce using rule 73 (callout_arg)


State 156

   54 expr: expr . OR expr
   55     | expr . AND expr
   56     | expr . EQUALEQUAL expr
   57     | expr . NOTEQUAL expr
   58     | expr . LESSTHAN expr
   59     | expr . LESSEQUAL expr
   60     | expr . GREATERTHAN expr
   61     | expr . GREATEREQUAL expr
   62     | expr . PLUS expr
   63     | expr . MINUS expr
   64     | expr . MULTIPLY expr
   65     | expr . DIVIDE expr
   66     | expr . MODULO expr
   72 callout_arg: expr .

    OR            shift, and go to state 108
    AND           shift, and go to state 109
    EQUALEQUAL    shift, and go to state 110
    NOTEQUAL      shift, and go to state 111
    LESSEQUAL     shift, and go to state 112
    LESSTHAN      shift, and go to state 113
    GREATEREQUAL  shift, and go to state 114
    GREATERTHAN   shift, and go to state 115
    PLUS          shift, and go to state 116
    MINUS         shift, and go to state 117
    MULTIPLY      shift, and go to state 118
    DIVIDE        shift, and go to state 119
    MODULO        shift, and go to state 120

    $default  reduce using rule 72 (callout_arg)


State 157

   70 callout_args: COMMA callout_arg .

    $default  reduce using rule 70 (callout_args)


State 158

   71 callout_args: callout_args COMMA . callout_arg

    OPEN_PARANTHESIS  shift, and go to state 75
    CALLOUT           shift, and go to state 55
    FALSE             shift, and go to state 76
    TRUE              shift, and go to state 77
    IDENTIFIER        shift, and go to state 57
    STRING_VALUE      shift, and go to state 155
    CHAR_VALUE        shift, and go to state 78
    INT_VALUE         shift, and go to state 79
    MINUS             shift, and go to state 80
    NOT               shift, and go to state 81

    method_call  go to state 82
    location     go to state 83
    expr         go to state 156
    callout_arg  go to state 163
    literal      go to state 85
    bool_value   go to state 86


State 159

   46 method_call: CALLOUT OPEN_PARANTHESIS STRING_VALUE callout_args CLOSE_PARANTHESIS .

    $default  reduce using rule 46 (method_call)


State 160

   48 exprs: exprs COMMA expr .
   54 expr: expr . OR expr
   55     | expr . AND expr
   56     | expr . EQUALEQUAL expr
   57     | expr . NOTEQUAL expr
   58     | expr . LESSTHAN expr
   59     | expr . LESSEQUAL expr
   60     | expr . GREATERTHAN expr
   61     | expr . GREATEREQUAL expr
   62     | expr . PLUS expr
   63     | expr . MINUS expr
   64     | expr . MULTIPLY expr
   65     | expr . DIVIDE expr
   66     | expr . MODULO expr

    OR            shift, and go to state 108
    AND           shift, and go to state 109
    EQUALEQUAL    shift, and go to state 110
    NOTEQUAL      shift, and go to state 111
    LESSEQUAL     shift, and go to state 112
    LESSTHAN      shift, and go to state 113
    GREATEREQUAL  shift, and go to state 114
    GREATERTHAN   shift, and go to state 115
    PLUS          shift, and go to state 116
    MINUS         shift, and go to state 117
    MULTIPLY      shift, and go to state 118
    DIVIDE        shift, and go to state 119
    MODULO        shift, and go to state 120

    $default  reduce using rule 48 (exprs)


State 161

   34 statement: IF OPEN_PARANTHESIS expr CLOSE_PARANTHESIS block ELSE . block

    OPEN_CURLYBRACE  shift, and go to state 41

    block  go to state 164


State 162

   36 statement: FOR IDENTIFIER EQUAL expr COMMA expr . block
   54 expr: expr . OR expr
   55     | expr . AND expr
   56     | expr . EQUALEQUAL expr
   57     | expr . NOTEQUAL expr
   58     | expr . LESSTHAN expr
   59     | expr . LESSEQUAL expr
   60     | expr . GREATERTHAN expr
   61     | expr . GREATEREQUAL expr
   62     | expr . PLUS expr
   63     | expr . MINUS expr
   64     | expr . MULTIPLY expr
   65     | expr . DIVIDE expr
   66     | expr . MODULO expr

    OPEN_CURLYBRACE  shift, and go to state 41
    OR               shift, and go to state 108
    AND              shift, and go to state 109
    EQUALEQUAL       shift, and go to state 110
    NOTEQUAL         shift, and go to state 111
    LESSEQUAL        shift, and go to state 112
    LESSTHAN         shift, and go to state 113
    GREATEREQUAL     shift, and go to state 114
    GREATERTHAN      shift, and go to state 115
    PLUS             shift, and go to state 116
    MINUS            shift, and go to state 117
    MULTIPLY         shift, and go to state 118
    DIVIDE           shift, and go to state 119
    MODULO           shift, and go to state 120

    block  go to state 165


State 163

   71 callout_args: callout_args COMMA callout_arg .

    $default  reduce using rule 71 (callout_args)


State 164

   34 statement: IF OPEN_PARANTHESIS expr CLOSE_PARANTHESIS block ELSE block .

    $default  reduce using rule 34 (statement)


State 165

   36 statement: FOR IDENTIFIER EQUAL expr COMMA expr block .

    $default  reduce using rule 36 (statement)
