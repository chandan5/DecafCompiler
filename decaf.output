Grammar

    0 $accept: program $end

    1 program: CLASS IDENTIFIER OPEN_PARANTHESIS CLOSE_PARANTHESIS OPEN_CURLYBRACE field_decl method_decls CLOSE_CURLYBRACE

    2 field_decl: type identifiers_opt_arrs SEMICOLON

    3 identifiers_opt_arrs: identifiers_opt_arr
    4                     | identifiers_opt_arrs COMMA identifiers_opt_arr

    5 identifiers_opt_arr: IDENTIFIER
    6                    | IDENTIFIER OPEN_SQUAREBRACKET INT_VALUE CLOSE_SQUAREBRACKET

    7 method_decls: method_decl
    8             | method_decl method_decls

    9 method_decl: method_type IDENTIFIER OPEN_PARANTHESIS params CLOSE_PARANTHESIS block

   10 method_type: type
   11            | VOID

   12 params: param
   13       | params COMMA param

   14 param: type IDENTIFIER

   15 block: OPEN_CURLYBRACE var_decls statements CLOSE_CURLYBRACE

   16 var_decls: var_decl
   17          | var_decl var_decls

   18 var_decl: type identifiers SEMICOLON

   19 identifiers: IDENTIFIER
   20            | identifiers COMMA IDENTIFIER

   21 statements: statement
   22           | statement statements

   23 statement: location assign_op expr SEMICOLON
   24          | method_call SEMICOLON
   25          | IF OPEN_PARANTHESIS expr CLOSE_PARANTHESIS block ELSE block
   26          | IF OPEN_PARANTHESIS expr CLOSE_PARANTHESIS block
   27          | FOR IDENTIFIER EQUAL expr COMMA expr block
   28          | RETURN expr SEMICOLON
   29          | RETURN SEMICOLON
   30          | BREAK SEMICOLON
   31          | CONTINUE SEMICOLON
   32          | block

   33 method_call: method_name OPEN_PARANTHESIS exprs CLOSE_PARANTHESIS
   34            | CALLOUT OPEN_PARANTHESIS STRING_VALUE CLOSE_PARANTHESIS
   35            | CALLOUT OPEN_PARANTHESIS STRING_VALUE callout_args CLOSE_PARANTHESIS

   36 exprs: expr
   37      | exprs COMMA expr

   38 method_name: IDENTIFIER

   39 location: IDENTIFIER
   40         | IDENTIFIER OPEN_SQUAREBRACKET expr CLOSE_SQUAREBRACKET

   41 expr: location
   42     | method_call
   43     | literal
   44     | expr OR expr
   45     | expr AND expr
   46     | expr EQUALEQUAL expr
   47     | expr NOTEQUAL expr
   48     | expr LESSTHAN expr
   49     | expr LESSEQUAL expr
   50     | expr GREATERTHAN expr
   51     | expr GREATEREQUAL expr
   52     | expr PLUS expr
   53     | expr MINUS expr
   54     | expr MULTIPLY expr
   55     | expr DIVIDE expr
   56     | expr MODULO expr
   57     | MINUS expr
   58     | NOT expr
   59     | OPEN_PARANTHESIS expr CLOSE_PARANTHESIS

   60 callout_args: COMMA callout_arg
   61             | callout_args COMMA callout_arg

   62 callout_arg: expr
   63            | STRING_VALUE

   64 assign_op: EQUAL
   65          | PLUSEQUAL
   66          | MINUSEQUAL

   67 literal: INT_VALUE
   68        | bool_value
   69        | CHAR_VALUE

   70 bool_value: TRUE
   71           | FALSE

   72 type: INT
   73     | BOOLEAN


Terminals, with rules where they appear

$end (0) 0
error (256)
SEMICOLON (258) 2 18 23 24 28 29 30 31
COMMA (259) 4 13 20 27 37 60 61
OPEN_PARANTHESIS (260) 1 9 25 26 33 34 35 59
CLOSE_PARANTHESIS (261) 1 9 25 26 33 34 35 59
OPEN_SQUAREBRACKET (262) 6 40
CLOSE_SQUAREBRACKET (263) 6 40
OPEN_CURLYBRACE (264) 1 15
CLOSE_CURLYBRACE (265) 1 15
CLASS (266) 1
IF (267) 25 26
ELSE (268) 25
FOR (269) 27
CONTINUE (270) 31
BREAK (271) 30
CALLOUT (272) 34 35
RETURN (273) 28 29
VOID (274) 11
FALSE (275) 71
INT (276) 72
BOOLEAN (277) 73
TRUE (278) 70
IDENTIFIER (279) 1 5 6 9 14 19 20 27 38 39 40
STRING_VALUE (280) 34 35 63
CHAR_VALUE (281) 69
INT_VALUE (282) 6 67
OR (283) 44
AND (284) 45
EQUAL (285) 27 64
PLUSEQUAL (286) 65
MINUSEQUAL (287) 66
EQUALEQUAL (288) 46
NOTEQUAL (289) 47
LESSEQUAL (290) 49
LESSTHAN (291) 48
GREATEREQUAL (292) 51
GREATERTHAN (293) 50
PLUS (294) 52
MINUS (295) 53 57
MULTIPLY (296) 54
DIVIDE (297) 55
MODULO (298) 56
NOT (299) 58


Nonterminals, with rules where they appear

$accept (45)
    on left: 0
program (46)
    on left: 1, on right: 0
field_decl (47)
    on left: 2, on right: 1
identifiers_opt_arrs (48)
    on left: 3 4, on right: 2 4
identifiers_opt_arr (49)
    on left: 5 6, on right: 3 4
method_decls (50)
    on left: 7 8, on right: 1 8
method_decl (51)
    on left: 9, on right: 7 8
method_type (52)
    on left: 10 11, on right: 9
params (53)
    on left: 12 13, on right: 9 13
param (54)
    on left: 14, on right: 12 13
block (55)
    on left: 15, on right: 9 25 26 27 32
var_decls (56)
    on left: 16 17, on right: 15 17
var_decl (57)
    on left: 18, on right: 16 17
identifiers (58)
    on left: 19 20, on right: 18 20
statements (59)
    on left: 21 22, on right: 15 22
statement (60)
    on left: 23 24 25 26 27 28 29 30 31 32, on right: 21 22
method_call (61)
    on left: 33 34 35, on right: 24 42
exprs (62)
    on left: 36 37, on right: 33 37
method_name (63)
    on left: 38, on right: 33
location (64)
    on left: 39 40, on right: 23 41
expr (65)
    on left: 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58
    59, on right: 23 25 26 27 28 36 37 40 44 45 46 47 48 49 50 51 52
    53 54 55 56 57 58 59 62
callout_args (66)
    on left: 60 61, on right: 35 61
callout_arg (67)
    on left: 62 63, on right: 60 61
assign_op (68)
    on left: 64 65 66, on right: 23
literal (69)
    on left: 67 68 69, on right: 43
bool_value (70)
    on left: 70 71, on right: 68
type (71)
    on left: 72 73, on right: 2 10 14 18


State 0

    0 $accept: . program $end

    CLASS  shift, and go to state 1

    program  go to state 2


State 1

    1 program: CLASS . IDENTIFIER OPEN_PARANTHESIS CLOSE_PARANTHESIS OPEN_CURLYBRACE field_decl method_decls CLOSE_CURLYBRACE

    IDENTIFIER  shift, and go to state 3


State 2

    0 $accept: program . $end

    $end  shift, and go to state 4


State 3

    1 program: CLASS IDENTIFIER . OPEN_PARANTHESIS CLOSE_PARANTHESIS OPEN_CURLYBRACE field_decl method_decls CLOSE_CURLYBRACE

    OPEN_PARANTHESIS  shift, and go to state 5


State 4

    0 $accept: program $end .

    $default  accept


State 5

    1 program: CLASS IDENTIFIER OPEN_PARANTHESIS . CLOSE_PARANTHESIS OPEN_CURLYBRACE field_decl method_decls CLOSE_CURLYBRACE

    CLOSE_PARANTHESIS  shift, and go to state 6


State 6

    1 program: CLASS IDENTIFIER OPEN_PARANTHESIS CLOSE_PARANTHESIS . OPEN_CURLYBRACE field_decl method_decls CLOSE_CURLYBRACE

    OPEN_CURLYBRACE  shift, and go to state 7


State 7

    1 program: CLASS IDENTIFIER OPEN_PARANTHESIS CLOSE_PARANTHESIS OPEN_CURLYBRACE . field_decl method_decls CLOSE_CURLYBRACE

    INT      shift, and go to state 8
    BOOLEAN  shift, and go to state 9

    field_decl  go to state 10
    type        go to state 11


State 8

   72 type: INT .

    $default  reduce using rule 72 (type)


State 9

   73 type: BOOLEAN .

    $default  reduce using rule 73 (type)


State 10

    1 program: CLASS IDENTIFIER OPEN_PARANTHESIS CLOSE_PARANTHESIS OPEN_CURLYBRACE field_decl . method_decls CLOSE_CURLYBRACE

    VOID     shift, and go to state 12
    INT      shift, and go to state 8
    BOOLEAN  shift, and go to state 9

    method_decls  go to state 13
    method_decl   go to state 14
    method_type   go to state 15
    type          go to state 16


State 11

    2 field_decl: type . identifiers_opt_arrs SEMICOLON

    IDENTIFIER  shift, and go to state 17

    identifiers_opt_arrs  go to state 18
    identifiers_opt_arr   go to state 19


State 12

   11 method_type: VOID .

    $default  reduce using rule 11 (method_type)


State 13

    1 program: CLASS IDENTIFIER OPEN_PARANTHESIS CLOSE_PARANTHESIS OPEN_CURLYBRACE field_decl method_decls . CLOSE_CURLYBRACE

    CLOSE_CURLYBRACE  shift, and go to state 20


State 14

    7 method_decls: method_decl .
    8             | method_decl . method_decls

    VOID     shift, and go to state 12
    INT      shift, and go to state 8
    BOOLEAN  shift, and go to state 9

    $default  reduce using rule 7 (method_decls)

    method_decls  go to state 21
    method_decl   go to state 14
    method_type   go to state 15
    type          go to state 16


State 15

    9 method_decl: method_type . IDENTIFIER OPEN_PARANTHESIS params CLOSE_PARANTHESIS block

    IDENTIFIER  shift, and go to state 22


State 16

   10 method_type: type .

    $default  reduce using rule 10 (method_type)


State 17

    5 identifiers_opt_arr: IDENTIFIER .
    6                    | IDENTIFIER . OPEN_SQUAREBRACKET INT_VALUE CLOSE_SQUAREBRACKET

    OPEN_SQUAREBRACKET  shift, and go to state 23

    $default  reduce using rule 5 (identifiers_opt_arr)


State 18

    2 field_decl: type identifiers_opt_arrs . SEMICOLON
    4 identifiers_opt_arrs: identifiers_opt_arrs . COMMA identifiers_opt_arr

    SEMICOLON  shift, and go to state 24
    COMMA      shift, and go to state 25


State 19

    3 identifiers_opt_arrs: identifiers_opt_arr .

    $default  reduce using rule 3 (identifiers_opt_arrs)


State 20

    1 program: CLASS IDENTIFIER OPEN_PARANTHESIS CLOSE_PARANTHESIS OPEN_CURLYBRACE field_decl method_decls CLOSE_CURLYBRACE .

    $default  reduce using rule 1 (program)


State 21

    8 method_decls: method_decl method_decls .

    $default  reduce using rule 8 (method_decls)


State 22

    9 method_decl: method_type IDENTIFIER . OPEN_PARANTHESIS params CLOSE_PARANTHESIS block

    OPEN_PARANTHESIS  shift, and go to state 26


State 23

    6 identifiers_opt_arr: IDENTIFIER OPEN_SQUAREBRACKET . INT_VALUE CLOSE_SQUAREBRACKET

    INT_VALUE  shift, and go to state 27


State 24

    2 field_decl: type identifiers_opt_arrs SEMICOLON .

    $default  reduce using rule 2 (field_decl)


State 25

    4 identifiers_opt_arrs: identifiers_opt_arrs COMMA . identifiers_opt_arr

    IDENTIFIER  shift, and go to state 17

    identifiers_opt_arr  go to state 28


State 26

    9 method_decl: method_type IDENTIFIER OPEN_PARANTHESIS . params CLOSE_PARANTHESIS block

    INT      shift, and go to state 8
    BOOLEAN  shift, and go to state 9

    params  go to state 29
    param   go to state 30
    type    go to state 31


State 27

    6 identifiers_opt_arr: IDENTIFIER OPEN_SQUAREBRACKET INT_VALUE . CLOSE_SQUAREBRACKET

    CLOSE_SQUAREBRACKET  shift, and go to state 32


State 28

    4 identifiers_opt_arrs: identifiers_opt_arrs COMMA identifiers_opt_arr .

    $default  reduce using rule 4 (identifiers_opt_arrs)


State 29

    9 method_decl: method_type IDENTIFIER OPEN_PARANTHESIS params . CLOSE_PARANTHESIS block
   13 params: params . COMMA param

    COMMA              shift, and go to state 33
    CLOSE_PARANTHESIS  shift, and go to state 34


State 30

   12 params: param .

    $default  reduce using rule 12 (params)


State 31

   14 param: type . IDENTIFIER

    IDENTIFIER  shift, and go to state 35


State 32

    6 identifiers_opt_arr: IDENTIFIER OPEN_SQUAREBRACKET INT_VALUE CLOSE_SQUAREBRACKET .

    $default  reduce using rule 6 (identifiers_opt_arr)


State 33

   13 params: params COMMA . param

    INT      shift, and go to state 8
    BOOLEAN  shift, and go to state 9

    param  go to state 36
    type   go to state 31


State 34

    9 method_decl: method_type IDENTIFIER OPEN_PARANTHESIS params CLOSE_PARANTHESIS . block

    OPEN_CURLYBRACE  shift, and go to state 37

    block  go to state 38


State 35

   14 param: type IDENTIFIER .

    $default  reduce using rule 14 (param)


State 36

   13 params: params COMMA param .

    $default  reduce using rule 13 (params)


State 37

   15 block: OPEN_CURLYBRACE . var_decls statements CLOSE_CURLYBRACE

    INT      shift, and go to state 8
    BOOLEAN  shift, and go to state 9

    var_decls  go to state 39
    var_decl   go to state 40
    type       go to state 41


State 38

    9 method_decl: method_type IDENTIFIER OPEN_PARANTHESIS params CLOSE_PARANTHESIS block .

    $default  reduce using rule 9 (method_decl)


State 39

   15 block: OPEN_CURLYBRACE var_decls . statements CLOSE_CURLYBRACE

    OPEN_CURLYBRACE  shift, and go to state 37
    IF               shift, and go to state 42
    FOR              shift, and go to state 43
    CONTINUE         shift, and go to state 44
    BREAK            shift, and go to state 45
    CALLOUT          shift, and go to state 46
    RETURN           shift, and go to state 47
    IDENTIFIER       shift, and go to state 48

    block        go to state 49
    statements   go to state 50
    statement    go to state 51
    method_call  go to state 52
    method_name  go to state 53
    location     go to state 54


State 40

   16 var_decls: var_decl .
   17          | var_decl . var_decls

    INT      shift, and go to state 8
    BOOLEAN  shift, and go to state 9

    $default  reduce using rule 16 (var_decls)

    var_decls  go to state 55
    var_decl   go to state 40
    type       go to state 41


State 41

   18 var_decl: type . identifiers SEMICOLON

    IDENTIFIER  shift, and go to state 56

    identifiers  go to state 57


State 42

   25 statement: IF . OPEN_PARANTHESIS expr CLOSE_PARANTHESIS block ELSE block
   26          | IF . OPEN_PARANTHESIS expr CLOSE_PARANTHESIS block

    OPEN_PARANTHESIS  shift, and go to state 58


State 43

   27 statement: FOR . IDENTIFIER EQUAL expr COMMA expr block

    IDENTIFIER  shift, and go to state 59


State 44

   31 statement: CONTINUE . SEMICOLON

    SEMICOLON  shift, and go to state 60


State 45

   30 statement: BREAK . SEMICOLON

    SEMICOLON  shift, and go to state 61


State 46

   34 method_call: CALLOUT . OPEN_PARANTHESIS STRING_VALUE CLOSE_PARANTHESIS
   35            | CALLOUT . OPEN_PARANTHESIS STRING_VALUE callout_args CLOSE_PARANTHESIS

    OPEN_PARANTHESIS  shift, and go to state 62


State 47

   28 statement: RETURN . expr SEMICOLON
   29          | RETURN . SEMICOLON

    SEMICOLON         shift, and go to state 63
    OPEN_PARANTHESIS  shift, and go to state 64
    CALLOUT           shift, and go to state 46
    FALSE             shift, and go to state 65
    TRUE              shift, and go to state 66
    IDENTIFIER        shift, and go to state 48
    CHAR_VALUE        shift, and go to state 67
    INT_VALUE         shift, and go to state 68
    MINUS             shift, and go to state 69
    NOT               shift, and go to state 70

    method_call  go to state 71
    method_name  go to state 53
    location     go to state 72
    expr         go to state 73
    literal      go to state 74
    bool_value   go to state 75


State 48

   38 method_name: IDENTIFIER .
   39 location: IDENTIFIER .
   40         | IDENTIFIER . OPEN_SQUAREBRACKET expr CLOSE_SQUAREBRACKET

    OPEN_SQUAREBRACKET  shift, and go to state 76

    OPEN_PARANTHESIS  reduce using rule 38 (method_name)
    $default          reduce using rule 39 (location)


State 49

   32 statement: block .

    $default  reduce using rule 32 (statement)


State 50

   15 block: OPEN_CURLYBRACE var_decls statements . CLOSE_CURLYBRACE

    CLOSE_CURLYBRACE  shift, and go to state 77


State 51

   21 statements: statement .
   22           | statement . statements

    OPEN_CURLYBRACE  shift, and go to state 37
    IF               shift, and go to state 42
    FOR              shift, and go to state 43
    CONTINUE         shift, and go to state 44
    BREAK            shift, and go to state 45
    CALLOUT          shift, and go to state 46
    RETURN           shift, and go to state 47
    IDENTIFIER       shift, and go to state 48

    $default  reduce using rule 21 (statements)

    block        go to state 49
    statements   go to state 78
    statement    go to state 51
    method_call  go to state 52
    method_name  go to state 53
    location     go to state 54


State 52

   24 statement: method_call . SEMICOLON

    SEMICOLON  shift, and go to state 79


State 53

   33 method_call: method_name . OPEN_PARANTHESIS exprs CLOSE_PARANTHESIS

    OPEN_PARANTHESIS  shift, and go to state 80


State 54

   23 statement: location . assign_op expr SEMICOLON

    EQUAL       shift, and go to state 81
    PLUSEQUAL   shift, and go to state 82
    MINUSEQUAL  shift, and go to state 83

    assign_op  go to state 84


State 55

   17 var_decls: var_decl var_decls .

    $default  reduce using rule 17 (var_decls)


State 56

   19 identifiers: IDENTIFIER .

    $default  reduce using rule 19 (identifiers)


State 57

   18 var_decl: type identifiers . SEMICOLON
   20 identifiers: identifiers . COMMA IDENTIFIER

    SEMICOLON  shift, and go to state 85
    COMMA      shift, and go to state 86


State 58

   25 statement: IF OPEN_PARANTHESIS . expr CLOSE_PARANTHESIS block ELSE block
   26          | IF OPEN_PARANTHESIS . expr CLOSE_PARANTHESIS block

    OPEN_PARANTHESIS  shift, and go to state 64
    CALLOUT           shift, and go to state 46
    FALSE             shift, and go to state 65
    TRUE              shift, and go to state 66
    IDENTIFIER        shift, and go to state 48
    CHAR_VALUE        shift, and go to state 67
    INT_VALUE         shift, and go to state 68
    MINUS             shift, and go to state 69
    NOT               shift, and go to state 70

    method_call  go to state 71
    method_name  go to state 53
    location     go to state 72
    expr         go to state 87
    literal      go to state 74
    bool_value   go to state 75


State 59

   27 statement: FOR IDENTIFIER . EQUAL expr COMMA expr block

    EQUAL  shift, and go to state 88


State 60

   31 statement: CONTINUE SEMICOLON .

    $default  reduce using rule 31 (statement)


State 61

   30 statement: BREAK SEMICOLON .

    $default  reduce using rule 30 (statement)


State 62

   34 method_call: CALLOUT OPEN_PARANTHESIS . STRING_VALUE CLOSE_PARANTHESIS
   35            | CALLOUT OPEN_PARANTHESIS . STRING_VALUE callout_args CLOSE_PARANTHESIS

    STRING_VALUE  shift, and go to state 89


State 63

   29 statement: RETURN SEMICOLON .

    $default  reduce using rule 29 (statement)


State 64

   59 expr: OPEN_PARANTHESIS . expr CLOSE_PARANTHESIS

    OPEN_PARANTHESIS  shift, and go to state 64
    CALLOUT           shift, and go to state 46
    FALSE             shift, and go to state 65
    TRUE              shift, and go to state 66
    IDENTIFIER        shift, and go to state 48
    CHAR_VALUE        shift, and go to state 67
    INT_VALUE         shift, and go to state 68
    MINUS             shift, and go to state 69
    NOT               shift, and go to state 70

    method_call  go to state 71
    method_name  go to state 53
    location     go to state 72
    expr         go to state 90
    literal      go to state 74
    bool_value   go to state 75


State 65

   71 bool_value: FALSE .

    $default  reduce using rule 71 (bool_value)


State 66

   70 bool_value: TRUE .

    $default  reduce using rule 70 (bool_value)


State 67

   69 literal: CHAR_VALUE .

    $default  reduce using rule 69 (literal)


State 68

   67 literal: INT_VALUE .

    $default  reduce using rule 67 (literal)


State 69

   57 expr: MINUS . expr

    OPEN_PARANTHESIS  shift, and go to state 64
    CALLOUT           shift, and go to state 46
    FALSE             shift, and go to state 65
    TRUE              shift, and go to state 66
    IDENTIFIER        shift, and go to state 48
    CHAR_VALUE        shift, and go to state 67
    INT_VALUE         shift, and go to state 68
    MINUS             shift, and go to state 69
    NOT               shift, and go to state 70

    method_call  go to state 71
    method_name  go to state 53
    location     go to state 72
    expr         go to state 91
    literal      go to state 74
    bool_value   go to state 75


State 70

   58 expr: NOT . expr

    OPEN_PARANTHESIS  shift, and go to state 64
    CALLOUT           shift, and go to state 46
    FALSE             shift, and go to state 65
    TRUE              shift, and go to state 66
    IDENTIFIER        shift, and go to state 48
    CHAR_VALUE        shift, and go to state 67
    INT_VALUE         shift, and go to state 68
    MINUS             shift, and go to state 69
    NOT               shift, and go to state 70

    method_call  go to state 71
    method_name  go to state 53
    location     go to state 72
    expr         go to state 92
    literal      go to state 74
    bool_value   go to state 75


State 71

   42 expr: method_call .

    $default  reduce using rule 42 (expr)


State 72

   41 expr: location .

    $default  reduce using rule 41 (expr)


State 73

   28 statement: RETURN expr . SEMICOLON
   44 expr: expr . OR expr
   45     | expr . AND expr
   46     | expr . EQUALEQUAL expr
   47     | expr . NOTEQUAL expr
   48     | expr . LESSTHAN expr
   49     | expr . LESSEQUAL expr
   50     | expr . GREATERTHAN expr
   51     | expr . GREATEREQUAL expr
   52     | expr . PLUS expr
   53     | expr . MINUS expr
   54     | expr . MULTIPLY expr
   55     | expr . DIVIDE expr
   56     | expr . MODULO expr

    SEMICOLON     shift, and go to state 93
    OR            shift, and go to state 94
    AND           shift, and go to state 95
    EQUALEQUAL    shift, and go to state 96
    NOTEQUAL      shift, and go to state 97
    LESSEQUAL     shift, and go to state 98
    LESSTHAN      shift, and go to state 99
    GREATEREQUAL  shift, and go to state 100
    GREATERTHAN   shift, and go to state 101
    PLUS          shift, and go to state 102
    MINUS         shift, and go to state 103
    MULTIPLY      shift, and go to state 104
    DIVIDE        shift, and go to state 105
    MODULO        shift, and go to state 106


State 74

   43 expr: literal .

    $default  reduce using rule 43 (expr)


State 75

   68 literal: bool_value .

    $default  reduce using rule 68 (literal)


State 76

   40 location: IDENTIFIER OPEN_SQUAREBRACKET . expr CLOSE_SQUAREBRACKET

    OPEN_PARANTHESIS  shift, and go to state 64
    CALLOUT           shift, and go to state 46
    FALSE             shift, and go to state 65
    TRUE              shift, and go to state 66
    IDENTIFIER        shift, and go to state 48
    CHAR_VALUE        shift, and go to state 67
    INT_VALUE         shift, and go to state 68
    MINUS             shift, and go to state 69
    NOT               shift, and go to state 70

    method_call  go to state 71
    method_name  go to state 53
    location     go to state 72
    expr         go to state 107
    literal      go to state 74
    bool_value   go to state 75


State 77

   15 block: OPEN_CURLYBRACE var_decls statements CLOSE_CURLYBRACE .

    $default  reduce using rule 15 (block)


State 78

   22 statements: statement statements .

    $default  reduce using rule 22 (statements)


State 79

   24 statement: method_call SEMICOLON .

    $default  reduce using rule 24 (statement)


State 80

   33 method_call: method_name OPEN_PARANTHESIS . exprs CLOSE_PARANTHESIS

    OPEN_PARANTHESIS  shift, and go to state 64
    CALLOUT           shift, and go to state 46
    FALSE             shift, and go to state 65
    TRUE              shift, and go to state 66
    IDENTIFIER        shift, and go to state 48
    CHAR_VALUE        shift, and go to state 67
    INT_VALUE         shift, and go to state 68
    MINUS             shift, and go to state 69
    NOT               shift, and go to state 70

    method_call  go to state 71
    exprs        go to state 108
    method_name  go to state 53
    location     go to state 72
    expr         go to state 109
    literal      go to state 74
    bool_value   go to state 75


State 81

   64 assign_op: EQUAL .

    $default  reduce using rule 64 (assign_op)


State 82

   65 assign_op: PLUSEQUAL .

    $default  reduce using rule 65 (assign_op)


State 83

   66 assign_op: MINUSEQUAL .

    $default  reduce using rule 66 (assign_op)


State 84

   23 statement: location assign_op . expr SEMICOLON

    OPEN_PARANTHESIS  shift, and go to state 64
    CALLOUT           shift, and go to state 46
    FALSE             shift, and go to state 65
    TRUE              shift, and go to state 66
    IDENTIFIER        shift, and go to state 48
    CHAR_VALUE        shift, and go to state 67
    INT_VALUE         shift, and go to state 68
    MINUS             shift, and go to state 69
    NOT               shift, and go to state 70

    method_call  go to state 71
    method_name  go to state 53
    location     go to state 72
    expr         go to state 110
    literal      go to state 74
    bool_value   go to state 75


State 85

   18 var_decl: type identifiers SEMICOLON .

    $default  reduce using rule 18 (var_decl)


State 86

   20 identifiers: identifiers COMMA . IDENTIFIER

    IDENTIFIER  shift, and go to state 111


State 87

   25 statement: IF OPEN_PARANTHESIS expr . CLOSE_PARANTHESIS block ELSE block
   26          | IF OPEN_PARANTHESIS expr . CLOSE_PARANTHESIS block
   44 expr: expr . OR expr
   45     | expr . AND expr
   46     | expr . EQUALEQUAL expr
   47     | expr . NOTEQUAL expr
   48     | expr . LESSTHAN expr
   49     | expr . LESSEQUAL expr
   50     | expr . GREATERTHAN expr
   51     | expr . GREATEREQUAL expr
   52     | expr . PLUS expr
   53     | expr . MINUS expr
   54     | expr . MULTIPLY expr
   55     | expr . DIVIDE expr
   56     | expr . MODULO expr

    CLOSE_PARANTHESIS  shift, and go to state 112
    OR                 shift, and go to state 94
    AND                shift, and go to state 95
    EQUALEQUAL         shift, and go to state 96
    NOTEQUAL           shift, and go to state 97
    LESSEQUAL          shift, and go to state 98
    LESSTHAN           shift, and go to state 99
    GREATEREQUAL       shift, and go to state 100
    GREATERTHAN        shift, and go to state 101
    PLUS               shift, and go to state 102
    MINUS              shift, and go to state 103
    MULTIPLY           shift, and go to state 104
    DIVIDE             shift, and go to state 105
    MODULO             shift, and go to state 106


State 88

   27 statement: FOR IDENTIFIER EQUAL . expr COMMA expr block

    OPEN_PARANTHESIS  shift, and go to state 64
    CALLOUT           shift, and go to state 46
    FALSE             shift, and go to state 65
    TRUE              shift, and go to state 66
    IDENTIFIER        shift, and go to state 48
    CHAR_VALUE        shift, and go to state 67
    INT_VALUE         shift, and go to state 68
    MINUS             shift, and go to state 69
    NOT               shift, and go to state 70

    method_call  go to state 71
    method_name  go to state 53
    location     go to state 72
    expr         go to state 113
    literal      go to state 74
    bool_value   go to state 75


State 89

   34 method_call: CALLOUT OPEN_PARANTHESIS STRING_VALUE . CLOSE_PARANTHESIS
   35            | CALLOUT OPEN_PARANTHESIS STRING_VALUE . callout_args CLOSE_PARANTHESIS

    COMMA              shift, and go to state 114
    CLOSE_PARANTHESIS  shift, and go to state 115

    callout_args  go to state 116


State 90

   44 expr: expr . OR expr
   45     | expr . AND expr
   46     | expr . EQUALEQUAL expr
   47     | expr . NOTEQUAL expr
   48     | expr . LESSTHAN expr
   49     | expr . LESSEQUAL expr
   50     | expr . GREATERTHAN expr
   51     | expr . GREATEREQUAL expr
   52     | expr . PLUS expr
   53     | expr . MINUS expr
   54     | expr . MULTIPLY expr
   55     | expr . DIVIDE expr
   56     | expr . MODULO expr
   59     | OPEN_PARANTHESIS expr . CLOSE_PARANTHESIS

    CLOSE_PARANTHESIS  shift, and go to state 117
    OR                 shift, and go to state 94
    AND                shift, and go to state 95
    EQUALEQUAL         shift, and go to state 96
    NOTEQUAL           shift, and go to state 97
    LESSEQUAL          shift, and go to state 98
    LESSTHAN           shift, and go to state 99
    GREATEREQUAL       shift, and go to state 100
    GREATERTHAN        shift, and go to state 101
    PLUS               shift, and go to state 102
    MINUS              shift, and go to state 103
    MULTIPLY           shift, and go to state 104
    DIVIDE             shift, and go to state 105
    MODULO             shift, and go to state 106


State 91

   44 expr: expr . OR expr
   45     | expr . AND expr
   46     | expr . EQUALEQUAL expr
   47     | expr . NOTEQUAL expr
   48     | expr . LESSTHAN expr
   49     | expr . LESSEQUAL expr
   50     | expr . GREATERTHAN expr
   51     | expr . GREATEREQUAL expr
   52     | expr . PLUS expr
   53     | expr . MINUS expr
   54     | expr . MULTIPLY expr
   55     | expr . DIVIDE expr
   56     | expr . MODULO expr
   57     | MINUS expr .

    MULTIPLY  shift, and go to state 104
    DIVIDE    shift, and go to state 105
    MODULO    shift, and go to state 106

    $default  reduce using rule 57 (expr)


State 92

   44 expr: expr . OR expr
   45     | expr . AND expr
   46     | expr . EQUALEQUAL expr
   47     | expr . NOTEQUAL expr
   48     | expr . LESSTHAN expr
   49     | expr . LESSEQUAL expr
   50     | expr . GREATERTHAN expr
   51     | expr . GREATEREQUAL expr
   52     | expr . PLUS expr
   53     | expr . MINUS expr
   54     | expr . MULTIPLY expr
   55     | expr . DIVIDE expr
   56     | expr . MODULO expr
   58     | NOT expr .

    $default  reduce using rule 58 (expr)


State 93

   28 statement: RETURN expr SEMICOLON .

    $default  reduce using rule 28 (statement)


State 94

   44 expr: expr OR . expr

    OPEN_PARANTHESIS  shift, and go to state 64
    CALLOUT           shift, and go to state 46
    FALSE             shift, and go to state 65
    TRUE              shift, and go to state 66
    IDENTIFIER        shift, and go to state 48
    CHAR_VALUE        shift, and go to state 67
    INT_VALUE         shift, and go to state 68
    MINUS             shift, and go to state 69
    NOT               shift, and go to state 70

    method_call  go to state 71
    method_name  go to state 53
    location     go to state 72
    expr         go to state 118
    literal      go to state 74
    bool_value   go to state 75


State 95

   45 expr: expr AND . expr

    OPEN_PARANTHESIS  shift, and go to state 64
    CALLOUT           shift, and go to state 46
    FALSE             shift, and go to state 65
    TRUE              shift, and go to state 66
    IDENTIFIER        shift, and go to state 48
    CHAR_VALUE        shift, and go to state 67
    INT_VALUE         shift, and go to state 68
    MINUS             shift, and go to state 69
    NOT               shift, and go to state 70

    method_call  go to state 71
    method_name  go to state 53
    location     go to state 72
    expr         go to state 119
    literal      go to state 74
    bool_value   go to state 75


State 96

   46 expr: expr EQUALEQUAL . expr

    OPEN_PARANTHESIS  shift, and go to state 64
    CALLOUT           shift, and go to state 46
    FALSE             shift, and go to state 65
    TRUE              shift, and go to state 66
    IDENTIFIER        shift, and go to state 48
    CHAR_VALUE        shift, and go to state 67
    INT_VALUE         shift, and go to state 68
    MINUS             shift, and go to state 69
    NOT               shift, and go to state 70

    method_call  go to state 71
    method_name  go to state 53
    location     go to state 72
    expr         go to state 120
    literal      go to state 74
    bool_value   go to state 75


State 97

   47 expr: expr NOTEQUAL . expr

    OPEN_PARANTHESIS  shift, and go to state 64
    CALLOUT           shift, and go to state 46
    FALSE             shift, and go to state 65
    TRUE              shift, and go to state 66
    IDENTIFIER        shift, and go to state 48
    CHAR_VALUE        shift, and go to state 67
    INT_VALUE         shift, and go to state 68
    MINUS             shift, and go to state 69
    NOT               shift, and go to state 70

    method_call  go to state 71
    method_name  go to state 53
    location     go to state 72
    expr         go to state 121
    literal      go to state 74
    bool_value   go to state 75


State 98

   49 expr: expr LESSEQUAL . expr

    OPEN_PARANTHESIS  shift, and go to state 64
    CALLOUT           shift, and go to state 46
    FALSE             shift, and go to state 65
    TRUE              shift, and go to state 66
    IDENTIFIER        shift, and go to state 48
    CHAR_VALUE        shift, and go to state 67
    INT_VALUE         shift, and go to state 68
    MINUS             shift, and go to state 69
    NOT               shift, and go to state 70

    method_call  go to state 71
    method_name  go to state 53
    location     go to state 72
    expr         go to state 122
    literal      go to state 74
    bool_value   go to state 75


State 99

   48 expr: expr LESSTHAN . expr

    OPEN_PARANTHESIS  shift, and go to state 64
    CALLOUT           shift, and go to state 46
    FALSE             shift, and go to state 65
    TRUE              shift, and go to state 66
    IDENTIFIER        shift, and go to state 48
    CHAR_VALUE        shift, and go to state 67
    INT_VALUE         shift, and go to state 68
    MINUS             shift, and go to state 69
    NOT               shift, and go to state 70

    method_call  go to state 71
    method_name  go to state 53
    location     go to state 72
    expr         go to state 123
    literal      go to state 74
    bool_value   go to state 75


State 100

   51 expr: expr GREATEREQUAL . expr

    OPEN_PARANTHESIS  shift, and go to state 64
    CALLOUT           shift, and go to state 46
    FALSE             shift, and go to state 65
    TRUE              shift, and go to state 66
    IDENTIFIER        shift, and go to state 48
    CHAR_VALUE        shift, and go to state 67
    INT_VALUE         shift, and go to state 68
    MINUS             shift, and go to state 69
    NOT               shift, and go to state 70

    method_call  go to state 71
    method_name  go to state 53
    location     go to state 72
    expr         go to state 124
    literal      go to state 74
    bool_value   go to state 75


State 101

   50 expr: expr GREATERTHAN . expr

    OPEN_PARANTHESIS  shift, and go to state 64
    CALLOUT           shift, and go to state 46
    FALSE             shift, and go to state 65
    TRUE              shift, and go to state 66
    IDENTIFIER        shift, and go to state 48
    CHAR_VALUE        shift, and go to state 67
    INT_VALUE         shift, and go to state 68
    MINUS             shift, and go to state 69
    NOT               shift, and go to state 70

    method_call  go to state 71
    method_name  go to state 53
    location     go to state 72
    expr         go to state 125
    literal      go to state 74
    bool_value   go to state 75


State 102

   52 expr: expr PLUS . expr

    OPEN_PARANTHESIS  shift, and go to state 64
    CALLOUT           shift, and go to state 46
    FALSE             shift, and go to state 65
    TRUE              shift, and go to state 66
    IDENTIFIER        shift, and go to state 48
    CHAR_VALUE        shift, and go to state 67
    INT_VALUE         shift, and go to state 68
    MINUS             shift, and go to state 69
    NOT               shift, and go to state 70

    method_call  go to state 71
    method_name  go to state 53
    location     go to state 72
    expr         go to state 126
    literal      go to state 74
    bool_value   go to state 75


State 103

   53 expr: expr MINUS . expr

    OPEN_PARANTHESIS  shift, and go to state 64
    CALLOUT           shift, and go to state 46
    FALSE             shift, and go to state 65
    TRUE              shift, and go to state 66
    IDENTIFIER        shift, and go to state 48
    CHAR_VALUE        shift, and go to state 67
    INT_VALUE         shift, and go to state 68
    MINUS             shift, and go to state 69
    NOT               shift, and go to state 70

    method_call  go to state 71
    method_name  go to state 53
    location     go to state 72
    expr         go to state 127
    literal      go to state 74
    bool_value   go to state 75


State 104

   54 expr: expr MULTIPLY . expr

    OPEN_PARANTHESIS  shift, and go to state 64
    CALLOUT           shift, and go to state 46
    FALSE             shift, and go to state 65
    TRUE              shift, and go to state 66
    IDENTIFIER        shift, and go to state 48
    CHAR_VALUE        shift, and go to state 67
    INT_VALUE         shift, and go to state 68
    MINUS             shift, and go to state 69
    NOT               shift, and go to state 70

    method_call  go to state 71
    method_name  go to state 53
    location     go to state 72
    expr         go to state 128
    literal      go to state 74
    bool_value   go to state 75


State 105

   55 expr: expr DIVIDE . expr

    OPEN_PARANTHESIS  shift, and go to state 64
    CALLOUT           shift, and go to state 46
    FALSE             shift, and go to state 65
    TRUE              shift, and go to state 66
    IDENTIFIER        shift, and go to state 48
    CHAR_VALUE        shift, and go to state 67
    INT_VALUE         shift, and go to state 68
    MINUS             shift, and go to state 69
    NOT               shift, and go to state 70

    method_call  go to state 71
    method_name  go to state 53
    location     go to state 72
    expr         go to state 129
    literal      go to state 74
    bool_value   go to state 75


State 106

   56 expr: expr MODULO . expr

    OPEN_PARANTHESIS  shift, and go to state 64
    CALLOUT           shift, and go to state 46
    FALSE             shift, and go to state 65
    TRUE              shift, and go to state 66
    IDENTIFIER        shift, and go to state 48
    CHAR_VALUE        shift, and go to state 67
    INT_VALUE         shift, and go to state 68
    MINUS             shift, and go to state 69
    NOT               shift, and go to state 70

    method_call  go to state 71
    method_name  go to state 53
    location     go to state 72
    expr         go to state 130
    literal      go to state 74
    bool_value   go to state 75


State 107

   40 location: IDENTIFIER OPEN_SQUAREBRACKET expr . CLOSE_SQUAREBRACKET
   44 expr: expr . OR expr
   45     | expr . AND expr
   46     | expr . EQUALEQUAL expr
   47     | expr . NOTEQUAL expr
   48     | expr . LESSTHAN expr
   49     | expr . LESSEQUAL expr
   50     | expr . GREATERTHAN expr
   51     | expr . GREATEREQUAL expr
   52     | expr . PLUS expr
   53     | expr . MINUS expr
   54     | expr . MULTIPLY expr
   55     | expr . DIVIDE expr
   56     | expr . MODULO expr

    CLOSE_SQUAREBRACKET  shift, and go to state 131
    OR                   shift, and go to state 94
    AND                  shift, and go to state 95
    EQUALEQUAL           shift, and go to state 96
    NOTEQUAL             shift, and go to state 97
    LESSEQUAL            shift, and go to state 98
    LESSTHAN             shift, and go to state 99
    GREATEREQUAL         shift, and go to state 100
    GREATERTHAN          shift, and go to state 101
    PLUS                 shift, and go to state 102
    MINUS                shift, and go to state 103
    MULTIPLY             shift, and go to state 104
    DIVIDE               shift, and go to state 105
    MODULO               shift, and go to state 106


State 108

   33 method_call: method_name OPEN_PARANTHESIS exprs . CLOSE_PARANTHESIS
   37 exprs: exprs . COMMA expr

    COMMA              shift, and go to state 132
    CLOSE_PARANTHESIS  shift, and go to state 133


State 109

   36 exprs: expr .
   44 expr: expr . OR expr
   45     | expr . AND expr
   46     | expr . EQUALEQUAL expr
   47     | expr . NOTEQUAL expr
   48     | expr . LESSTHAN expr
   49     | expr . LESSEQUAL expr
   50     | expr . GREATERTHAN expr
   51     | expr . GREATEREQUAL expr
   52     | expr . PLUS expr
   53     | expr . MINUS expr
   54     | expr . MULTIPLY expr
   55     | expr . DIVIDE expr
   56     | expr . MODULO expr

    OR            shift, and go to state 94
    AND           shift, and go to state 95
    EQUALEQUAL    shift, and go to state 96
    NOTEQUAL      shift, and go to state 97
    LESSEQUAL     shift, and go to state 98
    LESSTHAN      shift, and go to state 99
    GREATEREQUAL  shift, and go to state 100
    GREATERTHAN   shift, and go to state 101
    PLUS          shift, and go to state 102
    MINUS         shift, and go to state 103
    MULTIPLY      shift, and go to state 104
    DIVIDE        shift, and go to state 105
    MODULO        shift, and go to state 106

    $default  reduce using rule 36 (exprs)


State 110

   23 statement: location assign_op expr . SEMICOLON
   44 expr: expr . OR expr
   45     | expr . AND expr
   46     | expr . EQUALEQUAL expr
   47     | expr . NOTEQUAL expr
   48     | expr . LESSTHAN expr
   49     | expr . LESSEQUAL expr
   50     | expr . GREATERTHAN expr
   51     | expr . GREATEREQUAL expr
   52     | expr . PLUS expr
   53     | expr . MINUS expr
   54     | expr . MULTIPLY expr
   55     | expr . DIVIDE expr
   56     | expr . MODULO expr

    SEMICOLON     shift, and go to state 134
    OR            shift, and go to state 94
    AND           shift, and go to state 95
    EQUALEQUAL    shift, and go to state 96
    NOTEQUAL      shift, and go to state 97
    LESSEQUAL     shift, and go to state 98
    LESSTHAN      shift, and go to state 99
    GREATEREQUAL  shift, and go to state 100
    GREATERTHAN   shift, and go to state 101
    PLUS          shift, and go to state 102
    MINUS         shift, and go to state 103
    MULTIPLY      shift, and go to state 104
    DIVIDE        shift, and go to state 105
    MODULO        shift, and go to state 106


State 111

   20 identifiers: identifiers COMMA IDENTIFIER .

    $default  reduce using rule 20 (identifiers)


State 112

   25 statement: IF OPEN_PARANTHESIS expr CLOSE_PARANTHESIS . block ELSE block
   26          | IF OPEN_PARANTHESIS expr CLOSE_PARANTHESIS . block

    OPEN_CURLYBRACE  shift, and go to state 37

    block  go to state 135


State 113

   27 statement: FOR IDENTIFIER EQUAL expr . COMMA expr block
   44 expr: expr . OR expr
   45     | expr . AND expr
   46     | expr . EQUALEQUAL expr
   47     | expr . NOTEQUAL expr
   48     | expr . LESSTHAN expr
   49     | expr . LESSEQUAL expr
   50     | expr . GREATERTHAN expr
   51     | expr . GREATEREQUAL expr
   52     | expr . PLUS expr
   53     | expr . MINUS expr
   54     | expr . MULTIPLY expr
   55     | expr . DIVIDE expr
   56     | expr . MODULO expr

    COMMA         shift, and go to state 136
    OR            shift, and go to state 94
    AND           shift, and go to state 95
    EQUALEQUAL    shift, and go to state 96
    NOTEQUAL      shift, and go to state 97
    LESSEQUAL     shift, and go to state 98
    LESSTHAN      shift, and go to state 99
    GREATEREQUAL  shift, and go to state 100
    GREATERTHAN   shift, and go to state 101
    PLUS          shift, and go to state 102
    MINUS         shift, and go to state 103
    MULTIPLY      shift, and go to state 104
    DIVIDE        shift, and go to state 105
    MODULO        shift, and go to state 106


State 114

   60 callout_args: COMMA . callout_arg

    OPEN_PARANTHESIS  shift, and go to state 64
    CALLOUT           shift, and go to state 46
    FALSE             shift, and go to state 65
    TRUE              shift, and go to state 66
    IDENTIFIER        shift, and go to state 48
    STRING_VALUE      shift, and go to state 137
    CHAR_VALUE        shift, and go to state 67
    INT_VALUE         shift, and go to state 68
    MINUS             shift, and go to state 69
    NOT               shift, and go to state 70

    method_call  go to state 71
    method_name  go to state 53
    location     go to state 72
    expr         go to state 138
    callout_arg  go to state 139
    literal      go to state 74
    bool_value   go to state 75


State 115

   34 method_call: CALLOUT OPEN_PARANTHESIS STRING_VALUE CLOSE_PARANTHESIS .

    $default  reduce using rule 34 (method_call)


State 116

   35 method_call: CALLOUT OPEN_PARANTHESIS STRING_VALUE callout_args . CLOSE_PARANTHESIS
   61 callout_args: callout_args . COMMA callout_arg

    COMMA              shift, and go to state 140
    CLOSE_PARANTHESIS  shift, and go to state 141


State 117

   59 expr: OPEN_PARANTHESIS expr CLOSE_PARANTHESIS .

    $default  reduce using rule 59 (expr)


State 118

   44 expr: expr . OR expr
   44     | expr OR expr .
   45     | expr . AND expr
   46     | expr . EQUALEQUAL expr
   47     | expr . NOTEQUAL expr
   48     | expr . LESSTHAN expr
   49     | expr . LESSEQUAL expr
   50     | expr . GREATERTHAN expr
   51     | expr . GREATEREQUAL expr
   52     | expr . PLUS expr
   53     | expr . MINUS expr
   54     | expr . MULTIPLY expr
   55     | expr . DIVIDE expr
   56     | expr . MODULO expr

    AND           shift, and go to state 95
    EQUALEQUAL    shift, and go to state 96
    NOTEQUAL      shift, and go to state 97
    LESSEQUAL     shift, and go to state 98
    LESSTHAN      shift, and go to state 99
    GREATEREQUAL  shift, and go to state 100
    GREATERTHAN   shift, and go to state 101
    PLUS          shift, and go to state 102
    MINUS         shift, and go to state 103
    MULTIPLY      shift, and go to state 104
    DIVIDE        shift, and go to state 105
    MODULO        shift, and go to state 106

    $default  reduce using rule 44 (expr)


State 119

   44 expr: expr . OR expr
   45     | expr . AND expr
   45     | expr AND expr .
   46     | expr . EQUALEQUAL expr
   47     | expr . NOTEQUAL expr
   48     | expr . LESSTHAN expr
   49     | expr . LESSEQUAL expr
   50     | expr . GREATERTHAN expr
   51     | expr . GREATEREQUAL expr
   52     | expr . PLUS expr
   53     | expr . MINUS expr
   54     | expr . MULTIPLY expr
   55     | expr . DIVIDE expr
   56     | expr . MODULO expr

    EQUALEQUAL    shift, and go to state 96
    NOTEQUAL      shift, and go to state 97
    LESSEQUAL     shift, and go to state 98
    LESSTHAN      shift, and go to state 99
    GREATEREQUAL  shift, and go to state 100
    GREATERTHAN   shift, and go to state 101
    PLUS          shift, and go to state 102
    MINUS         shift, and go to state 103
    MULTIPLY      shift, and go to state 104
    DIVIDE        shift, and go to state 105
    MODULO        shift, and go to state 106

    $default  reduce using rule 45 (expr)


State 120

   44 expr: expr . OR expr
   45     | expr . AND expr
   46     | expr . EQUALEQUAL expr
   46     | expr EQUALEQUAL expr .
   47     | expr . NOTEQUAL expr
   48     | expr . LESSTHAN expr
   49     | expr . LESSEQUAL expr
   50     | expr . GREATERTHAN expr
   51     | expr . GREATEREQUAL expr
   52     | expr . PLUS expr
   53     | expr . MINUS expr
   54     | expr . MULTIPLY expr
   55     | expr . DIVIDE expr
   56     | expr . MODULO expr

    LESSEQUAL     shift, and go to state 98
    LESSTHAN      shift, and go to state 99
    GREATEREQUAL  shift, and go to state 100
    GREATERTHAN   shift, and go to state 101
    PLUS          shift, and go to state 102
    MINUS         shift, and go to state 103
    MULTIPLY      shift, and go to state 104
    DIVIDE        shift, and go to state 105
    MODULO        shift, and go to state 106

    $default  reduce using rule 46 (expr)


State 121

   44 expr: expr . OR expr
   45     | expr . AND expr
   46     | expr . EQUALEQUAL expr
   47     | expr . NOTEQUAL expr
   47     | expr NOTEQUAL expr .
   48     | expr . LESSTHAN expr
   49     | expr . LESSEQUAL expr
   50     | expr . GREATERTHAN expr
   51     | expr . GREATEREQUAL expr
   52     | expr . PLUS expr
   53     | expr . MINUS expr
   54     | expr . MULTIPLY expr
   55     | expr . DIVIDE expr
   56     | expr . MODULO expr

    LESSEQUAL     shift, and go to state 98
    LESSTHAN      shift, and go to state 99
    GREATEREQUAL  shift, and go to state 100
    GREATERTHAN   shift, and go to state 101
    PLUS          shift, and go to state 102
    MINUS         shift, and go to state 103
    MULTIPLY      shift, and go to state 104
    DIVIDE        shift, and go to state 105
    MODULO        shift, and go to state 106

    $default  reduce using rule 47 (expr)


State 122

   44 expr: expr . OR expr
   45     | expr . AND expr
   46     | expr . EQUALEQUAL expr
   47     | expr . NOTEQUAL expr
   48     | expr . LESSTHAN expr
   49     | expr . LESSEQUAL expr
   49     | expr LESSEQUAL expr .
   50     | expr . GREATERTHAN expr
   51     | expr . GREATEREQUAL expr
   52     | expr . PLUS expr
   53     | expr . MINUS expr
   54     | expr . MULTIPLY expr
   55     | expr . DIVIDE expr
   56     | expr . MODULO expr

    PLUS      shift, and go to state 102
    MINUS     shift, and go to state 103
    MULTIPLY  shift, and go to state 104
    DIVIDE    shift, and go to state 105
    MODULO    shift, and go to state 106

    LESSEQUAL     error (nonassociative)
    LESSTHAN      error (nonassociative)
    GREATEREQUAL  error (nonassociative)
    GREATERTHAN   error (nonassociative)

    $default  reduce using rule 49 (expr)


State 123

   44 expr: expr . OR expr
   45     | expr . AND expr
   46     | expr . EQUALEQUAL expr
   47     | expr . NOTEQUAL expr
   48     | expr . LESSTHAN expr
   48     | expr LESSTHAN expr .
   49     | expr . LESSEQUAL expr
   50     | expr . GREATERTHAN expr
   51     | expr . GREATEREQUAL expr
   52     | expr . PLUS expr
   53     | expr . MINUS expr
   54     | expr . MULTIPLY expr
   55     | expr . DIVIDE expr
   56     | expr . MODULO expr

    PLUS      shift, and go to state 102
    MINUS     shift, and go to state 103
    MULTIPLY  shift, and go to state 104
    DIVIDE    shift, and go to state 105
    MODULO    shift, and go to state 106

    LESSEQUAL     error (nonassociative)
    LESSTHAN      error (nonassociative)
    GREATEREQUAL  error (nonassociative)
    GREATERTHAN   error (nonassociative)

    $default  reduce using rule 48 (expr)


State 124

   44 expr: expr . OR expr
   45     | expr . AND expr
   46     | expr . EQUALEQUAL expr
   47     | expr . NOTEQUAL expr
   48     | expr . LESSTHAN expr
   49     | expr . LESSEQUAL expr
   50     | expr . GREATERTHAN expr
   51     | expr . GREATEREQUAL expr
   51     | expr GREATEREQUAL expr .
   52     | expr . PLUS expr
   53     | expr . MINUS expr
   54     | expr . MULTIPLY expr
   55     | expr . DIVIDE expr
   56     | expr . MODULO expr

    PLUS      shift, and go to state 102
    MINUS     shift, and go to state 103
    MULTIPLY  shift, and go to state 104
    DIVIDE    shift, and go to state 105
    MODULO    shift, and go to state 106

    LESSEQUAL     error (nonassociative)
    LESSTHAN      error (nonassociative)
    GREATEREQUAL  error (nonassociative)
    GREATERTHAN   error (nonassociative)

    $default  reduce using rule 51 (expr)


State 125

   44 expr: expr . OR expr
   45     | expr . AND expr
   46     | expr . EQUALEQUAL expr
   47     | expr . NOTEQUAL expr
   48     | expr . LESSTHAN expr
   49     | expr . LESSEQUAL expr
   50     | expr . GREATERTHAN expr
   50     | expr GREATERTHAN expr .
   51     | expr . GREATEREQUAL expr
   52     | expr . PLUS expr
   53     | expr . MINUS expr
   54     | expr . MULTIPLY expr
   55     | expr . DIVIDE expr
   56     | expr . MODULO expr

    PLUS      shift, and go to state 102
    MINUS     shift, and go to state 103
    MULTIPLY  shift, and go to state 104
    DIVIDE    shift, and go to state 105
    MODULO    shift, and go to state 106

    LESSEQUAL     error (nonassociative)
    LESSTHAN      error (nonassociative)
    GREATEREQUAL  error (nonassociative)
    GREATERTHAN   error (nonassociative)

    $default  reduce using rule 50 (expr)


State 126

   44 expr: expr . OR expr
   45     | expr . AND expr
   46     | expr . EQUALEQUAL expr
   47     | expr . NOTEQUAL expr
   48     | expr . LESSTHAN expr
   49     | expr . LESSEQUAL expr
   50     | expr . GREATERTHAN expr
   51     | expr . GREATEREQUAL expr
   52     | expr . PLUS expr
   52     | expr PLUS expr .
   53     | expr . MINUS expr
   54     | expr . MULTIPLY expr
   55     | expr . DIVIDE expr
   56     | expr . MODULO expr

    MULTIPLY  shift, and go to state 104
    DIVIDE    shift, and go to state 105
    MODULO    shift, and go to state 106

    $default  reduce using rule 52 (expr)


State 127

   44 expr: expr . OR expr
   45     | expr . AND expr
   46     | expr . EQUALEQUAL expr
   47     | expr . NOTEQUAL expr
   48     | expr . LESSTHAN expr
   49     | expr . LESSEQUAL expr
   50     | expr . GREATERTHAN expr
   51     | expr . GREATEREQUAL expr
   52     | expr . PLUS expr
   53     | expr . MINUS expr
   53     | expr MINUS expr .
   54     | expr . MULTIPLY expr
   55     | expr . DIVIDE expr
   56     | expr . MODULO expr

    MULTIPLY  shift, and go to state 104
    DIVIDE    shift, and go to state 105
    MODULO    shift, and go to state 106

    $default  reduce using rule 53 (expr)


State 128

   44 expr: expr . OR expr
   45     | expr . AND expr
   46     | expr . EQUALEQUAL expr
   47     | expr . NOTEQUAL expr
   48     | expr . LESSTHAN expr
   49     | expr . LESSEQUAL expr
   50     | expr . GREATERTHAN expr
   51     | expr . GREATEREQUAL expr
   52     | expr . PLUS expr
   53     | expr . MINUS expr
   54     | expr . MULTIPLY expr
   54     | expr MULTIPLY expr .
   55     | expr . DIVIDE expr
   56     | expr . MODULO expr

    $default  reduce using rule 54 (expr)


State 129

   44 expr: expr . OR expr
   45     | expr . AND expr
   46     | expr . EQUALEQUAL expr
   47     | expr . NOTEQUAL expr
   48     | expr . LESSTHAN expr
   49     | expr . LESSEQUAL expr
   50     | expr . GREATERTHAN expr
   51     | expr . GREATEREQUAL expr
   52     | expr . PLUS expr
   53     | expr . MINUS expr
   54     | expr . MULTIPLY expr
   55     | expr . DIVIDE expr
   55     | expr DIVIDE expr .
   56     | expr . MODULO expr

    $default  reduce using rule 55 (expr)


State 130

   44 expr: expr . OR expr
   45     | expr . AND expr
   46     | expr . EQUALEQUAL expr
   47     | expr . NOTEQUAL expr
   48     | expr . LESSTHAN expr
   49     | expr . LESSEQUAL expr
   50     | expr . GREATERTHAN expr
   51     | expr . GREATEREQUAL expr
   52     | expr . PLUS expr
   53     | expr . MINUS expr
   54     | expr . MULTIPLY expr
   55     | expr . DIVIDE expr
   56     | expr . MODULO expr
   56     | expr MODULO expr .

    $default  reduce using rule 56 (expr)


State 131

   40 location: IDENTIFIER OPEN_SQUAREBRACKET expr CLOSE_SQUAREBRACKET .

    $default  reduce using rule 40 (location)


State 132

   37 exprs: exprs COMMA . expr

    OPEN_PARANTHESIS  shift, and go to state 64
    CALLOUT           shift, and go to state 46
    FALSE             shift, and go to state 65
    TRUE              shift, and go to state 66
    IDENTIFIER        shift, and go to state 48
    CHAR_VALUE        shift, and go to state 67
    INT_VALUE         shift, and go to state 68
    MINUS             shift, and go to state 69
    NOT               shift, and go to state 70

    method_call  go to state 71
    method_name  go to state 53
    location     go to state 72
    expr         go to state 142
    literal      go to state 74
    bool_value   go to state 75


State 133

   33 method_call: method_name OPEN_PARANTHESIS exprs CLOSE_PARANTHESIS .

    $default  reduce using rule 33 (method_call)


State 134

   23 statement: location assign_op expr SEMICOLON .

    $default  reduce using rule 23 (statement)


State 135

   25 statement: IF OPEN_PARANTHESIS expr CLOSE_PARANTHESIS block . ELSE block
   26          | IF OPEN_PARANTHESIS expr CLOSE_PARANTHESIS block .

    ELSE  shift, and go to state 143

    $default  reduce using rule 26 (statement)


State 136

   27 statement: FOR IDENTIFIER EQUAL expr COMMA . expr block

    OPEN_PARANTHESIS  shift, and go to state 64
    CALLOUT           shift, and go to state 46
    FALSE             shift, and go to state 65
    TRUE              shift, and go to state 66
    IDENTIFIER        shift, and go to state 48
    CHAR_VALUE        shift, and go to state 67
    INT_VALUE         shift, and go to state 68
    MINUS             shift, and go to state 69
    NOT               shift, and go to state 70

    method_call  go to state 71
    method_name  go to state 53
    location     go to state 72
    expr         go to state 144
    literal      go to state 74
    bool_value   go to state 75


State 137

   63 callout_arg: STRING_VALUE .

    $default  reduce using rule 63 (callout_arg)


State 138

   44 expr: expr . OR expr
   45     | expr . AND expr
   46     | expr . EQUALEQUAL expr
   47     | expr . NOTEQUAL expr
   48     | expr . LESSTHAN expr
   49     | expr . LESSEQUAL expr
   50     | expr . GREATERTHAN expr
   51     | expr . GREATEREQUAL expr
   52     | expr . PLUS expr
   53     | expr . MINUS expr
   54     | expr . MULTIPLY expr
   55     | expr . DIVIDE expr
   56     | expr . MODULO expr
   62 callout_arg: expr .

    OR            shift, and go to state 94
    AND           shift, and go to state 95
    EQUALEQUAL    shift, and go to state 96
    NOTEQUAL      shift, and go to state 97
    LESSEQUAL     shift, and go to state 98
    LESSTHAN      shift, and go to state 99
    GREATEREQUAL  shift, and go to state 100
    GREATERTHAN   shift, and go to state 101
    PLUS          shift, and go to state 102
    MINUS         shift, and go to state 103
    MULTIPLY      shift, and go to state 104
    DIVIDE        shift, and go to state 105
    MODULO        shift, and go to state 106

    $default  reduce using rule 62 (callout_arg)


State 139

   60 callout_args: COMMA callout_arg .

    $default  reduce using rule 60 (callout_args)


State 140

   61 callout_args: callout_args COMMA . callout_arg

    OPEN_PARANTHESIS  shift, and go to state 64
    CALLOUT           shift, and go to state 46
    FALSE             shift, and go to state 65
    TRUE              shift, and go to state 66
    IDENTIFIER        shift, and go to state 48
    STRING_VALUE      shift, and go to state 137
    CHAR_VALUE        shift, and go to state 67
    INT_VALUE         shift, and go to state 68
    MINUS             shift, and go to state 69
    NOT               shift, and go to state 70

    method_call  go to state 71
    method_name  go to state 53
    location     go to state 72
    expr         go to state 138
    callout_arg  go to state 145
    literal      go to state 74
    bool_value   go to state 75


State 141

   35 method_call: CALLOUT OPEN_PARANTHESIS STRING_VALUE callout_args CLOSE_PARANTHESIS .

    $default  reduce using rule 35 (method_call)


State 142

   37 exprs: exprs COMMA expr .
   44 expr: expr . OR expr
   45     | expr . AND expr
   46     | expr . EQUALEQUAL expr
   47     | expr . NOTEQUAL expr
   48     | expr . LESSTHAN expr
   49     | expr . LESSEQUAL expr
   50     | expr . GREATERTHAN expr
   51     | expr . GREATEREQUAL expr
   52     | expr . PLUS expr
   53     | expr . MINUS expr
   54     | expr . MULTIPLY expr
   55     | expr . DIVIDE expr
   56     | expr . MODULO expr

    OR            shift, and go to state 94
    AND           shift, and go to state 95
    EQUALEQUAL    shift, and go to state 96
    NOTEQUAL      shift, and go to state 97
    LESSEQUAL     shift, and go to state 98
    LESSTHAN      shift, and go to state 99
    GREATEREQUAL  shift, and go to state 100
    GREATERTHAN   shift, and go to state 101
    PLUS          shift, and go to state 102
    MINUS         shift, and go to state 103
    MULTIPLY      shift, and go to state 104
    DIVIDE        shift, and go to state 105
    MODULO        shift, and go to state 106

    $default  reduce using rule 37 (exprs)


State 143

   25 statement: IF OPEN_PARANTHESIS expr CLOSE_PARANTHESIS block ELSE . block

    OPEN_CURLYBRACE  shift, and go to state 37

    block  go to state 146


State 144

   27 statement: FOR IDENTIFIER EQUAL expr COMMA expr . block
   44 expr: expr . OR expr
   45     | expr . AND expr
   46     | expr . EQUALEQUAL expr
   47     | expr . NOTEQUAL expr
   48     | expr . LESSTHAN expr
   49     | expr . LESSEQUAL expr
   50     | expr . GREATERTHAN expr
   51     | expr . GREATEREQUAL expr
   52     | expr . PLUS expr
   53     | expr . MINUS expr
   54     | expr . MULTIPLY expr
   55     | expr . DIVIDE expr
   56     | expr . MODULO expr

    OPEN_CURLYBRACE  shift, and go to state 37
    OR               shift, and go to state 94
    AND              shift, and go to state 95
    EQUALEQUAL       shift, and go to state 96
    NOTEQUAL         shift, and go to state 97
    LESSEQUAL        shift, and go to state 98
    LESSTHAN         shift, and go to state 99
    GREATEREQUAL     shift, and go to state 100
    GREATERTHAN      shift, and go to state 101
    PLUS             shift, and go to state 102
    MINUS            shift, and go to state 103
    MULTIPLY         shift, and go to state 104
    DIVIDE           shift, and go to state 105
    MODULO           shift, and go to state 106

    block  go to state 147


State 145

   61 callout_args: callout_args COMMA callout_arg .

    $default  reduce using rule 61 (callout_args)


State 146

   25 statement: IF OPEN_PARANTHESIS expr CLOSE_PARANTHESIS block ELSE block .

    $default  reduce using rule 25 (statement)


State 147

   27 statement: FOR IDENTIFIER EQUAL expr COMMA expr block .

    $default  reduce using rule 27 (statement)
