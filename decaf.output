State 11 conflicts: 2 shift/reduce


Grammar

    0 $accept: program $end

    1 program: CLASS IDENTIFIER OPEN_PARANTHESIS CLOSE_PARANTHESIS OPEN_CURLYBRACE field_decls method_decls CLOSE_CURLYBRACE

    2 field_decls: field_decl
    3            | field_decl field_decls

    4 field_decl: type identifiers_arrs SEMICOLON
    5           | type identifiers SEMICOLON

    6 identifiers_arrs: identifiers_arr
    7                 | identifiers_arrs COMMA identifiers_arr

    8 identifiers_arr: IDENTIFIER OPEN_SQUAREBRACKET INT_VALUE CLOSE_SQUAREBRACKET

    9 method_decls: method_decl
   10             | method_decl method_decls

   11 method_decl: method_type IDENTIFIER OPEN_PARANTHESIS params CLOSE_PARANTHESIS block

   12 method_type: type
   13            | VOID

   14 params: param
   15       | params COMMA param

   16 param: type IDENTIFIER

   17 block: OPEN_CURLYBRACE var_decls statements CLOSE_CURLYBRACE

   18 var_decls: var_decl
   19          | var_decl var_decls

   20 var_decl: type identifiers SEMICOLON

   21 identifiers: IDENTIFIER
   22            | identifiers COMMA IDENTIFIER

   23 statements: statement
   24           | statement statements

   25 statement: location assign_op expr SEMICOLON
   26          | method_call SEMICOLON
   27          | IF OPEN_PARANTHESIS expr CLOSE_PARANTHESIS block ELSE block
   28          | IF OPEN_PARANTHESIS expr CLOSE_PARANTHESIS block
   29          | FOR IDENTIFIER EQUAL expr COMMA expr block
   30          | RETURN expr SEMICOLON
   31          | RETURN SEMICOLON
   32          | BREAK SEMICOLON
   33          | CONTINUE SEMICOLON
   34          | block

   35 method_call: method_name OPEN_PARANTHESIS exprs CLOSE_PARANTHESIS
   36            | CALLOUT OPEN_PARANTHESIS STRING_VALUE CLOSE_PARANTHESIS
   37            | CALLOUT OPEN_PARANTHESIS STRING_VALUE callout_args CLOSE_PARANTHESIS

   38 exprs: expr
   39      | exprs COMMA expr

   40 method_name: IDENTIFIER

   41 location: IDENTIFIER
   42         | IDENTIFIER OPEN_SQUAREBRACKET expr CLOSE_SQUAREBRACKET

   43 expr: location
   44     | method_call
   45     | literal
   46     | expr OR expr
   47     | expr AND expr
   48     | expr EQUALEQUAL expr
   49     | expr NOTEQUAL expr
   50     | expr LESSTHAN expr
   51     | expr LESSEQUAL expr
   52     | expr GREATERTHAN expr
   53     | expr GREATEREQUAL expr
   54     | expr PLUS expr
   55     | expr MINUS expr
   56     | expr MULTIPLY expr
   57     | expr DIVIDE expr
   58     | expr MODULO expr
   59     | MINUS expr
   60     | NOT expr
   61     | OPEN_PARANTHESIS expr CLOSE_PARANTHESIS

   62 callout_args: COMMA callout_arg
   63             | callout_args COMMA callout_arg

   64 callout_arg: expr
   65            | STRING_VALUE

   66 assign_op: EQUAL
   67          | PLUSEQUAL
   68          | MINUSEQUAL

   69 literal: INT_VALUE
   70        | bool_value
   71        | CHAR_VALUE

   72 bool_value: TRUE
   73           | FALSE

   74 type: INT
   75     | BOOLEAN


Terminals, with rules where they appear

$end (0) 0
error (256)
SEMICOLON (258) 4 5 20 25 26 30 31 32 33
COMMA (259) 7 15 22 29 39 62 63
OPEN_PARANTHESIS (260) 1 11 27 28 35 36 37 61
CLOSE_PARANTHESIS (261) 1 11 27 28 35 36 37 61
OPEN_SQUAREBRACKET (262) 8 42
CLOSE_SQUAREBRACKET (263) 8 42
OPEN_CURLYBRACE (264) 1 17
CLOSE_CURLYBRACE (265) 1 17
CLASS (266) 1
IF (267) 27 28
ELSE (268) 27
FOR (269) 29
CONTINUE (270) 33
BREAK (271) 32
CALLOUT (272) 36 37
RETURN (273) 30 31
VOID (274) 13
FALSE (275) 73
INT (276) 74
BOOLEAN (277) 75
TRUE (278) 72
IDENTIFIER (279) 1 8 11 16 21 22 29 40 41 42
STRING_VALUE (280) 36 37 65
CHAR_VALUE (281) 71
INT_VALUE (282) 8 69
OR (283) 46
AND (284) 47
EQUAL (285) 29 66
PLUSEQUAL (286) 67
MINUSEQUAL (287) 68
EQUALEQUAL (288) 48
NOTEQUAL (289) 49
LESSEQUAL (290) 51
LESSTHAN (291) 50
GREATEREQUAL (292) 53
GREATERTHAN (293) 52
PLUS (294) 54
MINUS (295) 55 59
MULTIPLY (296) 56
DIVIDE (297) 57
MODULO (298) 58
NOT (299) 60


Nonterminals, with rules where they appear

$accept (45)
    on left: 0
program (46)
    on left: 1, on right: 0
field_decls (47)
    on left: 2 3, on right: 1 3
field_decl (48)
    on left: 4 5, on right: 2 3
identifiers_arrs (49)
    on left: 6 7, on right: 4 7
identifiers_arr (50)
    on left: 8, on right: 6 7
method_decls (51)
    on left: 9 10, on right: 1 10
method_decl (52)
    on left: 11, on right: 9 10
method_type (53)
    on left: 12 13, on right: 11
params (54)
    on left: 14 15, on right: 11 15
param (55)
    on left: 16, on right: 14 15
block (56)
    on left: 17, on right: 11 27 28 29 34
var_decls (57)
    on left: 18 19, on right: 17 19
var_decl (58)
    on left: 20, on right: 18 19
identifiers (59)
    on left: 21 22, on right: 5 20 22
statements (60)
    on left: 23 24, on right: 17 24
statement (61)
    on left: 25 26 27 28 29 30 31 32 33 34, on right: 23 24
method_call (62)
    on left: 35 36 37, on right: 26 44
exprs (63)
    on left: 38 39, on right: 35 39
method_name (64)
    on left: 40, on right: 35
location (65)
    on left: 41 42, on right: 25 43
expr (66)
    on left: 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60
    61, on right: 25 27 28 29 30 38 39 42 46 47 48 49 50 51 52 53 54
    55 56 57 58 59 60 61 64
callout_args (67)
    on left: 62 63, on right: 37 63
callout_arg (68)
    on left: 64 65, on right: 62 63
assign_op (69)
    on left: 66 67 68, on right: 25
literal (70)
    on left: 69 70 71, on right: 45
bool_value (71)
    on left: 72 73, on right: 70
type (72)
    on left: 74 75, on right: 4 5 12 16 20


State 0

    0 $accept: . program $end

    CLASS  shift, and go to state 1

    program  go to state 2


State 1

    1 program: CLASS . IDENTIFIER OPEN_PARANTHESIS CLOSE_PARANTHESIS OPEN_CURLYBRACE field_decls method_decls CLOSE_CURLYBRACE

    IDENTIFIER  shift, and go to state 3


State 2

    0 $accept: program . $end

    $end  shift, and go to state 4


State 3

    1 program: CLASS IDENTIFIER . OPEN_PARANTHESIS CLOSE_PARANTHESIS OPEN_CURLYBRACE field_decls method_decls CLOSE_CURLYBRACE

    OPEN_PARANTHESIS  shift, and go to state 5


State 4

    0 $accept: program $end .

    $default  accept


State 5

    1 program: CLASS IDENTIFIER OPEN_PARANTHESIS . CLOSE_PARANTHESIS OPEN_CURLYBRACE field_decls method_decls CLOSE_CURLYBRACE

    CLOSE_PARANTHESIS  shift, and go to state 6


State 6

    1 program: CLASS IDENTIFIER OPEN_PARANTHESIS CLOSE_PARANTHESIS . OPEN_CURLYBRACE field_decls method_decls CLOSE_CURLYBRACE

    OPEN_CURLYBRACE  shift, and go to state 7


State 7

    1 program: CLASS IDENTIFIER OPEN_PARANTHESIS CLOSE_PARANTHESIS OPEN_CURLYBRACE . field_decls method_decls CLOSE_CURLYBRACE

    INT      shift, and go to state 8
    BOOLEAN  shift, and go to state 9

    field_decls  go to state 10
    field_decl   go to state 11
    type         go to state 12


State 8

   74 type: INT .

    $default  reduce using rule 74 (type)


State 9

   75 type: BOOLEAN .

    $default  reduce using rule 75 (type)


State 10

    1 program: CLASS IDENTIFIER OPEN_PARANTHESIS CLOSE_PARANTHESIS OPEN_CURLYBRACE field_decls . method_decls CLOSE_CURLYBRACE

    VOID     shift, and go to state 13
    INT      shift, and go to state 8
    BOOLEAN  shift, and go to state 9

    method_decls  go to state 14
    method_decl   go to state 15
    method_type   go to state 16
    type          go to state 17


State 11

    2 field_decls: field_decl .
    3            | field_decl . field_decls

    INT      shift, and go to state 8
    BOOLEAN  shift, and go to state 9

    INT       [reduce using rule 2 (field_decls)]
    BOOLEAN   [reduce using rule 2 (field_decls)]
    $default  reduce using rule 2 (field_decls)

    field_decls  go to state 18
    field_decl   go to state 11
    type         go to state 12


State 12

    4 field_decl: type . identifiers_arrs SEMICOLON
    5           | type . identifiers SEMICOLON

    IDENTIFIER  shift, and go to state 19

    identifiers_arrs  go to state 20
    identifiers_arr   go to state 21
    identifiers       go to state 22


State 13

   13 method_type: VOID .

    $default  reduce using rule 13 (method_type)


State 14

    1 program: CLASS IDENTIFIER OPEN_PARANTHESIS CLOSE_PARANTHESIS OPEN_CURLYBRACE field_decls method_decls . CLOSE_CURLYBRACE

    CLOSE_CURLYBRACE  shift, and go to state 23


State 15

    9 method_decls: method_decl .
   10             | method_decl . method_decls

    VOID     shift, and go to state 13
    INT      shift, and go to state 8
    BOOLEAN  shift, and go to state 9

    $default  reduce using rule 9 (method_decls)

    method_decls  go to state 24
    method_decl   go to state 15
    method_type   go to state 16
    type          go to state 17


State 16

   11 method_decl: method_type . IDENTIFIER OPEN_PARANTHESIS params CLOSE_PARANTHESIS block

    IDENTIFIER  shift, and go to state 25


State 17

   12 method_type: type .

    $default  reduce using rule 12 (method_type)


State 18

    3 field_decls: field_decl field_decls .

    $default  reduce using rule 3 (field_decls)


State 19

    8 identifiers_arr: IDENTIFIER . OPEN_SQUAREBRACKET INT_VALUE CLOSE_SQUAREBRACKET
   21 identifiers: IDENTIFIER .

    OPEN_SQUAREBRACKET  shift, and go to state 26

    $default  reduce using rule 21 (identifiers)


State 20

    4 field_decl: type identifiers_arrs . SEMICOLON
    7 identifiers_arrs: identifiers_arrs . COMMA identifiers_arr

    SEMICOLON  shift, and go to state 27
    COMMA      shift, and go to state 28


State 21

    6 identifiers_arrs: identifiers_arr .

    $default  reduce using rule 6 (identifiers_arrs)


State 22

    5 field_decl: type identifiers . SEMICOLON
   22 identifiers: identifiers . COMMA IDENTIFIER

    SEMICOLON  shift, and go to state 29
    COMMA      shift, and go to state 30


State 23

    1 program: CLASS IDENTIFIER OPEN_PARANTHESIS CLOSE_PARANTHESIS OPEN_CURLYBRACE field_decls method_decls CLOSE_CURLYBRACE .

    $default  reduce using rule 1 (program)


State 24

   10 method_decls: method_decl method_decls .

    $default  reduce using rule 10 (method_decls)


State 25

   11 method_decl: method_type IDENTIFIER . OPEN_PARANTHESIS params CLOSE_PARANTHESIS block

    OPEN_PARANTHESIS  shift, and go to state 31


State 26

    8 identifiers_arr: IDENTIFIER OPEN_SQUAREBRACKET . INT_VALUE CLOSE_SQUAREBRACKET

    INT_VALUE  shift, and go to state 32


State 27

    4 field_decl: type identifiers_arrs SEMICOLON .

    $default  reduce using rule 4 (field_decl)


State 28

    7 identifiers_arrs: identifiers_arrs COMMA . identifiers_arr

    IDENTIFIER  shift, and go to state 33

    identifiers_arr  go to state 34


State 29

    5 field_decl: type identifiers SEMICOLON .

    $default  reduce using rule 5 (field_decl)


State 30

   22 identifiers: identifiers COMMA . IDENTIFIER

    IDENTIFIER  shift, and go to state 35


State 31

   11 method_decl: method_type IDENTIFIER OPEN_PARANTHESIS . params CLOSE_PARANTHESIS block

    INT      shift, and go to state 8
    BOOLEAN  shift, and go to state 9

    params  go to state 36
    param   go to state 37
    type    go to state 38


State 32

    8 identifiers_arr: IDENTIFIER OPEN_SQUAREBRACKET INT_VALUE . CLOSE_SQUAREBRACKET

    CLOSE_SQUAREBRACKET  shift, and go to state 39


State 33

    8 identifiers_arr: IDENTIFIER . OPEN_SQUAREBRACKET INT_VALUE CLOSE_SQUAREBRACKET

    OPEN_SQUAREBRACKET  shift, and go to state 26


State 34

    7 identifiers_arrs: identifiers_arrs COMMA identifiers_arr .

    $default  reduce using rule 7 (identifiers_arrs)


State 35

   22 identifiers: identifiers COMMA IDENTIFIER .

    $default  reduce using rule 22 (identifiers)


State 36

   11 method_decl: method_type IDENTIFIER OPEN_PARANTHESIS params . CLOSE_PARANTHESIS block
   15 params: params . COMMA param

    COMMA              shift, and go to state 40
    CLOSE_PARANTHESIS  shift, and go to state 41


State 37

   14 params: param .

    $default  reduce using rule 14 (params)


State 38

   16 param: type . IDENTIFIER

    IDENTIFIER  shift, and go to state 42


State 39

    8 identifiers_arr: IDENTIFIER OPEN_SQUAREBRACKET INT_VALUE CLOSE_SQUAREBRACKET .

    $default  reduce using rule 8 (identifiers_arr)


State 40

   15 params: params COMMA . param

    INT      shift, and go to state 8
    BOOLEAN  shift, and go to state 9

    param  go to state 43
    type   go to state 38


State 41

   11 method_decl: method_type IDENTIFIER OPEN_PARANTHESIS params CLOSE_PARANTHESIS . block

    OPEN_CURLYBRACE  shift, and go to state 44

    block  go to state 45


State 42

   16 param: type IDENTIFIER .

    $default  reduce using rule 16 (param)


State 43

   15 params: params COMMA param .

    $default  reduce using rule 15 (params)


State 44

   17 block: OPEN_CURLYBRACE . var_decls statements CLOSE_CURLYBRACE

    INT      shift, and go to state 8
    BOOLEAN  shift, and go to state 9

    var_decls  go to state 46
    var_decl   go to state 47
    type       go to state 48


State 45

   11 method_decl: method_type IDENTIFIER OPEN_PARANTHESIS params CLOSE_PARANTHESIS block .

    $default  reduce using rule 11 (method_decl)


State 46

   17 block: OPEN_CURLYBRACE var_decls . statements CLOSE_CURLYBRACE

    OPEN_CURLYBRACE  shift, and go to state 44
    IF               shift, and go to state 49
    FOR              shift, and go to state 50
    CONTINUE         shift, and go to state 51
    BREAK            shift, and go to state 52
    CALLOUT          shift, and go to state 53
    RETURN           shift, and go to state 54
    IDENTIFIER       shift, and go to state 55

    block        go to state 56
    statements   go to state 57
    statement    go to state 58
    method_call  go to state 59
    method_name  go to state 60
    location     go to state 61


State 47

   18 var_decls: var_decl .
   19          | var_decl . var_decls

    INT      shift, and go to state 8
    BOOLEAN  shift, and go to state 9

    $default  reduce using rule 18 (var_decls)

    var_decls  go to state 62
    var_decl   go to state 47
    type       go to state 48


State 48

   20 var_decl: type . identifiers SEMICOLON

    IDENTIFIER  shift, and go to state 63

    identifiers  go to state 64


State 49

   27 statement: IF . OPEN_PARANTHESIS expr CLOSE_PARANTHESIS block ELSE block
   28          | IF . OPEN_PARANTHESIS expr CLOSE_PARANTHESIS block

    OPEN_PARANTHESIS  shift, and go to state 65


State 50

   29 statement: FOR . IDENTIFIER EQUAL expr COMMA expr block

    IDENTIFIER  shift, and go to state 66


State 51

   33 statement: CONTINUE . SEMICOLON

    SEMICOLON  shift, and go to state 67


State 52

   32 statement: BREAK . SEMICOLON

    SEMICOLON  shift, and go to state 68


State 53

   36 method_call: CALLOUT . OPEN_PARANTHESIS STRING_VALUE CLOSE_PARANTHESIS
   37            | CALLOUT . OPEN_PARANTHESIS STRING_VALUE callout_args CLOSE_PARANTHESIS

    OPEN_PARANTHESIS  shift, and go to state 69


State 54

   30 statement: RETURN . expr SEMICOLON
   31          | RETURN . SEMICOLON

    SEMICOLON         shift, and go to state 70
    OPEN_PARANTHESIS  shift, and go to state 71
    CALLOUT           shift, and go to state 53
    FALSE             shift, and go to state 72
    TRUE              shift, and go to state 73
    IDENTIFIER        shift, and go to state 55
    CHAR_VALUE        shift, and go to state 74
    INT_VALUE         shift, and go to state 75
    MINUS             shift, and go to state 76
    NOT               shift, and go to state 77

    method_call  go to state 78
    method_name  go to state 60
    location     go to state 79
    expr         go to state 80
    literal      go to state 81
    bool_value   go to state 82


State 55

   40 method_name: IDENTIFIER .
   41 location: IDENTIFIER .
   42         | IDENTIFIER . OPEN_SQUAREBRACKET expr CLOSE_SQUAREBRACKET

    OPEN_SQUAREBRACKET  shift, and go to state 83

    OPEN_PARANTHESIS  reduce using rule 40 (method_name)
    $default          reduce using rule 41 (location)


State 56

   34 statement: block .

    $default  reduce using rule 34 (statement)


State 57

   17 block: OPEN_CURLYBRACE var_decls statements . CLOSE_CURLYBRACE

    CLOSE_CURLYBRACE  shift, and go to state 84


State 58

   23 statements: statement .
   24           | statement . statements

    OPEN_CURLYBRACE  shift, and go to state 44
    IF               shift, and go to state 49
    FOR              shift, and go to state 50
    CONTINUE         shift, and go to state 51
    BREAK            shift, and go to state 52
    CALLOUT          shift, and go to state 53
    RETURN           shift, and go to state 54
    IDENTIFIER       shift, and go to state 55

    $default  reduce using rule 23 (statements)

    block        go to state 56
    statements   go to state 85
    statement    go to state 58
    method_call  go to state 59
    method_name  go to state 60
    location     go to state 61


State 59

   26 statement: method_call . SEMICOLON

    SEMICOLON  shift, and go to state 86


State 60

   35 method_call: method_name . OPEN_PARANTHESIS exprs CLOSE_PARANTHESIS

    OPEN_PARANTHESIS  shift, and go to state 87


State 61

   25 statement: location . assign_op expr SEMICOLON

    EQUAL       shift, and go to state 88
    PLUSEQUAL   shift, and go to state 89
    MINUSEQUAL  shift, and go to state 90

    assign_op  go to state 91


State 62

   19 var_decls: var_decl var_decls .

    $default  reduce using rule 19 (var_decls)


State 63

   21 identifiers: IDENTIFIER .

    $default  reduce using rule 21 (identifiers)


State 64

   20 var_decl: type identifiers . SEMICOLON
   22 identifiers: identifiers . COMMA IDENTIFIER

    SEMICOLON  shift, and go to state 92
    COMMA      shift, and go to state 30


State 65

   27 statement: IF OPEN_PARANTHESIS . expr CLOSE_PARANTHESIS block ELSE block
   28          | IF OPEN_PARANTHESIS . expr CLOSE_PARANTHESIS block

    OPEN_PARANTHESIS  shift, and go to state 71
    CALLOUT           shift, and go to state 53
    FALSE             shift, and go to state 72
    TRUE              shift, and go to state 73
    IDENTIFIER        shift, and go to state 55
    CHAR_VALUE        shift, and go to state 74
    INT_VALUE         shift, and go to state 75
    MINUS             shift, and go to state 76
    NOT               shift, and go to state 77

    method_call  go to state 78
    method_name  go to state 60
    location     go to state 79
    expr         go to state 93
    literal      go to state 81
    bool_value   go to state 82


State 66

   29 statement: FOR IDENTIFIER . EQUAL expr COMMA expr block

    EQUAL  shift, and go to state 94


State 67

   33 statement: CONTINUE SEMICOLON .

    $default  reduce using rule 33 (statement)


State 68

   32 statement: BREAK SEMICOLON .

    $default  reduce using rule 32 (statement)


State 69

   36 method_call: CALLOUT OPEN_PARANTHESIS . STRING_VALUE CLOSE_PARANTHESIS
   37            | CALLOUT OPEN_PARANTHESIS . STRING_VALUE callout_args CLOSE_PARANTHESIS

    STRING_VALUE  shift, and go to state 95


State 70

   31 statement: RETURN SEMICOLON .

    $default  reduce using rule 31 (statement)


State 71

   61 expr: OPEN_PARANTHESIS . expr CLOSE_PARANTHESIS

    OPEN_PARANTHESIS  shift, and go to state 71
    CALLOUT           shift, and go to state 53
    FALSE             shift, and go to state 72
    TRUE              shift, and go to state 73
    IDENTIFIER        shift, and go to state 55
    CHAR_VALUE        shift, and go to state 74
    INT_VALUE         shift, and go to state 75
    MINUS             shift, and go to state 76
    NOT               shift, and go to state 77

    method_call  go to state 78
    method_name  go to state 60
    location     go to state 79
    expr         go to state 96
    literal      go to state 81
    bool_value   go to state 82


State 72

   73 bool_value: FALSE .

    $default  reduce using rule 73 (bool_value)


State 73

   72 bool_value: TRUE .

    $default  reduce using rule 72 (bool_value)


State 74

   71 literal: CHAR_VALUE .

    $default  reduce using rule 71 (literal)


State 75

   69 literal: INT_VALUE .

    $default  reduce using rule 69 (literal)


State 76

   59 expr: MINUS . expr

    OPEN_PARANTHESIS  shift, and go to state 71
    CALLOUT           shift, and go to state 53
    FALSE             shift, and go to state 72
    TRUE              shift, and go to state 73
    IDENTIFIER        shift, and go to state 55
    CHAR_VALUE        shift, and go to state 74
    INT_VALUE         shift, and go to state 75
    MINUS             shift, and go to state 76
    NOT               shift, and go to state 77

    method_call  go to state 78
    method_name  go to state 60
    location     go to state 79
    expr         go to state 97
    literal      go to state 81
    bool_value   go to state 82


State 77

   60 expr: NOT . expr

    OPEN_PARANTHESIS  shift, and go to state 71
    CALLOUT           shift, and go to state 53
    FALSE             shift, and go to state 72
    TRUE              shift, and go to state 73
    IDENTIFIER        shift, and go to state 55
    CHAR_VALUE        shift, and go to state 74
    INT_VALUE         shift, and go to state 75
    MINUS             shift, and go to state 76
    NOT               shift, and go to state 77

    method_call  go to state 78
    method_name  go to state 60
    location     go to state 79
    expr         go to state 98
    literal      go to state 81
    bool_value   go to state 82


State 78

   44 expr: method_call .

    $default  reduce using rule 44 (expr)


State 79

   43 expr: location .

    $default  reduce using rule 43 (expr)


State 80

   30 statement: RETURN expr . SEMICOLON
   46 expr: expr . OR expr
   47     | expr . AND expr
   48     | expr . EQUALEQUAL expr
   49     | expr . NOTEQUAL expr
   50     | expr . LESSTHAN expr
   51     | expr . LESSEQUAL expr
   52     | expr . GREATERTHAN expr
   53     | expr . GREATEREQUAL expr
   54     | expr . PLUS expr
   55     | expr . MINUS expr
   56     | expr . MULTIPLY expr
   57     | expr . DIVIDE expr
   58     | expr . MODULO expr

    SEMICOLON     shift, and go to state 99
    OR            shift, and go to state 100
    AND           shift, and go to state 101
    EQUALEQUAL    shift, and go to state 102
    NOTEQUAL      shift, and go to state 103
    LESSEQUAL     shift, and go to state 104
    LESSTHAN      shift, and go to state 105
    GREATEREQUAL  shift, and go to state 106
    GREATERTHAN   shift, and go to state 107
    PLUS          shift, and go to state 108
    MINUS         shift, and go to state 109
    MULTIPLY      shift, and go to state 110
    DIVIDE        shift, and go to state 111
    MODULO        shift, and go to state 112


State 81

   45 expr: literal .

    $default  reduce using rule 45 (expr)


State 82

   70 literal: bool_value .

    $default  reduce using rule 70 (literal)


State 83

   42 location: IDENTIFIER OPEN_SQUAREBRACKET . expr CLOSE_SQUAREBRACKET

    OPEN_PARANTHESIS  shift, and go to state 71
    CALLOUT           shift, and go to state 53
    FALSE             shift, and go to state 72
    TRUE              shift, and go to state 73
    IDENTIFIER        shift, and go to state 55
    CHAR_VALUE        shift, and go to state 74
    INT_VALUE         shift, and go to state 75
    MINUS             shift, and go to state 76
    NOT               shift, and go to state 77

    method_call  go to state 78
    method_name  go to state 60
    location     go to state 79
    expr         go to state 113
    literal      go to state 81
    bool_value   go to state 82


State 84

   17 block: OPEN_CURLYBRACE var_decls statements CLOSE_CURLYBRACE .

    $default  reduce using rule 17 (block)


State 85

   24 statements: statement statements .

    $default  reduce using rule 24 (statements)


State 86

   26 statement: method_call SEMICOLON .

    $default  reduce using rule 26 (statement)


State 87

   35 method_call: method_name OPEN_PARANTHESIS . exprs CLOSE_PARANTHESIS

    OPEN_PARANTHESIS  shift, and go to state 71
    CALLOUT           shift, and go to state 53
    FALSE             shift, and go to state 72
    TRUE              shift, and go to state 73
    IDENTIFIER        shift, and go to state 55
    CHAR_VALUE        shift, and go to state 74
    INT_VALUE         shift, and go to state 75
    MINUS             shift, and go to state 76
    NOT               shift, and go to state 77

    method_call  go to state 78
    exprs        go to state 114
    method_name  go to state 60
    location     go to state 79
    expr         go to state 115
    literal      go to state 81
    bool_value   go to state 82


State 88

   66 assign_op: EQUAL .

    $default  reduce using rule 66 (assign_op)


State 89

   67 assign_op: PLUSEQUAL .

    $default  reduce using rule 67 (assign_op)


State 90

   68 assign_op: MINUSEQUAL .

    $default  reduce using rule 68 (assign_op)


State 91

   25 statement: location assign_op . expr SEMICOLON

    OPEN_PARANTHESIS  shift, and go to state 71
    CALLOUT           shift, and go to state 53
    FALSE             shift, and go to state 72
    TRUE              shift, and go to state 73
    IDENTIFIER        shift, and go to state 55
    CHAR_VALUE        shift, and go to state 74
    INT_VALUE         shift, and go to state 75
    MINUS             shift, and go to state 76
    NOT               shift, and go to state 77

    method_call  go to state 78
    method_name  go to state 60
    location     go to state 79
    expr         go to state 116
    literal      go to state 81
    bool_value   go to state 82


State 92

   20 var_decl: type identifiers SEMICOLON .

    $default  reduce using rule 20 (var_decl)


State 93

   27 statement: IF OPEN_PARANTHESIS expr . CLOSE_PARANTHESIS block ELSE block
   28          | IF OPEN_PARANTHESIS expr . CLOSE_PARANTHESIS block
   46 expr: expr . OR expr
   47     | expr . AND expr
   48     | expr . EQUALEQUAL expr
   49     | expr . NOTEQUAL expr
   50     | expr . LESSTHAN expr
   51     | expr . LESSEQUAL expr
   52     | expr . GREATERTHAN expr
   53     | expr . GREATEREQUAL expr
   54     | expr . PLUS expr
   55     | expr . MINUS expr
   56     | expr . MULTIPLY expr
   57     | expr . DIVIDE expr
   58     | expr . MODULO expr

    CLOSE_PARANTHESIS  shift, and go to state 117
    OR                 shift, and go to state 100
    AND                shift, and go to state 101
    EQUALEQUAL         shift, and go to state 102
    NOTEQUAL           shift, and go to state 103
    LESSEQUAL          shift, and go to state 104
    LESSTHAN           shift, and go to state 105
    GREATEREQUAL       shift, and go to state 106
    GREATERTHAN        shift, and go to state 107
    PLUS               shift, and go to state 108
    MINUS              shift, and go to state 109
    MULTIPLY           shift, and go to state 110
    DIVIDE             shift, and go to state 111
    MODULO             shift, and go to state 112


State 94

   29 statement: FOR IDENTIFIER EQUAL . expr COMMA expr block

    OPEN_PARANTHESIS  shift, and go to state 71
    CALLOUT           shift, and go to state 53
    FALSE             shift, and go to state 72
    TRUE              shift, and go to state 73
    IDENTIFIER        shift, and go to state 55
    CHAR_VALUE        shift, and go to state 74
    INT_VALUE         shift, and go to state 75
    MINUS             shift, and go to state 76
    NOT               shift, and go to state 77

    method_call  go to state 78
    method_name  go to state 60
    location     go to state 79
    expr         go to state 118
    literal      go to state 81
    bool_value   go to state 82


State 95

   36 method_call: CALLOUT OPEN_PARANTHESIS STRING_VALUE . CLOSE_PARANTHESIS
   37            | CALLOUT OPEN_PARANTHESIS STRING_VALUE . callout_args CLOSE_PARANTHESIS

    COMMA              shift, and go to state 119
    CLOSE_PARANTHESIS  shift, and go to state 120

    callout_args  go to state 121


State 96

   46 expr: expr . OR expr
   47     | expr . AND expr
   48     | expr . EQUALEQUAL expr
   49     | expr . NOTEQUAL expr
   50     | expr . LESSTHAN expr
   51     | expr . LESSEQUAL expr
   52     | expr . GREATERTHAN expr
   53     | expr . GREATEREQUAL expr
   54     | expr . PLUS expr
   55     | expr . MINUS expr
   56     | expr . MULTIPLY expr
   57     | expr . DIVIDE expr
   58     | expr . MODULO expr
   61     | OPEN_PARANTHESIS expr . CLOSE_PARANTHESIS

    CLOSE_PARANTHESIS  shift, and go to state 122
    OR                 shift, and go to state 100
    AND                shift, and go to state 101
    EQUALEQUAL         shift, and go to state 102
    NOTEQUAL           shift, and go to state 103
    LESSEQUAL          shift, and go to state 104
    LESSTHAN           shift, and go to state 105
    GREATEREQUAL       shift, and go to state 106
    GREATERTHAN        shift, and go to state 107
    PLUS               shift, and go to state 108
    MINUS              shift, and go to state 109
    MULTIPLY           shift, and go to state 110
    DIVIDE             shift, and go to state 111
    MODULO             shift, and go to state 112


State 97

   46 expr: expr . OR expr
   47     | expr . AND expr
   48     | expr . EQUALEQUAL expr
   49     | expr . NOTEQUAL expr
   50     | expr . LESSTHAN expr
   51     | expr . LESSEQUAL expr
   52     | expr . GREATERTHAN expr
   53     | expr . GREATEREQUAL expr
   54     | expr . PLUS expr
   55     | expr . MINUS expr
   56     | expr . MULTIPLY expr
   57     | expr . DIVIDE expr
   58     | expr . MODULO expr
   59     | MINUS expr .

    MULTIPLY  shift, and go to state 110
    DIVIDE    shift, and go to state 111
    MODULO    shift, and go to state 112

    $default  reduce using rule 59 (expr)


State 98

   46 expr: expr . OR expr
   47     | expr . AND expr
   48     | expr . EQUALEQUAL expr
   49     | expr . NOTEQUAL expr
   50     | expr . LESSTHAN expr
   51     | expr . LESSEQUAL expr
   52     | expr . GREATERTHAN expr
   53     | expr . GREATEREQUAL expr
   54     | expr . PLUS expr
   55     | expr . MINUS expr
   56     | expr . MULTIPLY expr
   57     | expr . DIVIDE expr
   58     | expr . MODULO expr
   60     | NOT expr .

    $default  reduce using rule 60 (expr)


State 99

   30 statement: RETURN expr SEMICOLON .

    $default  reduce using rule 30 (statement)


State 100

   46 expr: expr OR . expr

    OPEN_PARANTHESIS  shift, and go to state 71
    CALLOUT           shift, and go to state 53
    FALSE             shift, and go to state 72
    TRUE              shift, and go to state 73
    IDENTIFIER        shift, and go to state 55
    CHAR_VALUE        shift, and go to state 74
    INT_VALUE         shift, and go to state 75
    MINUS             shift, and go to state 76
    NOT               shift, and go to state 77

    method_call  go to state 78
    method_name  go to state 60
    location     go to state 79
    expr         go to state 123
    literal      go to state 81
    bool_value   go to state 82


State 101

   47 expr: expr AND . expr

    OPEN_PARANTHESIS  shift, and go to state 71
    CALLOUT           shift, and go to state 53
    FALSE             shift, and go to state 72
    TRUE              shift, and go to state 73
    IDENTIFIER        shift, and go to state 55
    CHAR_VALUE        shift, and go to state 74
    INT_VALUE         shift, and go to state 75
    MINUS             shift, and go to state 76
    NOT               shift, and go to state 77

    method_call  go to state 78
    method_name  go to state 60
    location     go to state 79
    expr         go to state 124
    literal      go to state 81
    bool_value   go to state 82


State 102

   48 expr: expr EQUALEQUAL . expr

    OPEN_PARANTHESIS  shift, and go to state 71
    CALLOUT           shift, and go to state 53
    FALSE             shift, and go to state 72
    TRUE              shift, and go to state 73
    IDENTIFIER        shift, and go to state 55
    CHAR_VALUE        shift, and go to state 74
    INT_VALUE         shift, and go to state 75
    MINUS             shift, and go to state 76
    NOT               shift, and go to state 77

    method_call  go to state 78
    method_name  go to state 60
    location     go to state 79
    expr         go to state 125
    literal      go to state 81
    bool_value   go to state 82


State 103

   49 expr: expr NOTEQUAL . expr

    OPEN_PARANTHESIS  shift, and go to state 71
    CALLOUT           shift, and go to state 53
    FALSE             shift, and go to state 72
    TRUE              shift, and go to state 73
    IDENTIFIER        shift, and go to state 55
    CHAR_VALUE        shift, and go to state 74
    INT_VALUE         shift, and go to state 75
    MINUS             shift, and go to state 76
    NOT               shift, and go to state 77

    method_call  go to state 78
    method_name  go to state 60
    location     go to state 79
    expr         go to state 126
    literal      go to state 81
    bool_value   go to state 82


State 104

   51 expr: expr LESSEQUAL . expr

    OPEN_PARANTHESIS  shift, and go to state 71
    CALLOUT           shift, and go to state 53
    FALSE             shift, and go to state 72
    TRUE              shift, and go to state 73
    IDENTIFIER        shift, and go to state 55
    CHAR_VALUE        shift, and go to state 74
    INT_VALUE         shift, and go to state 75
    MINUS             shift, and go to state 76
    NOT               shift, and go to state 77

    method_call  go to state 78
    method_name  go to state 60
    location     go to state 79
    expr         go to state 127
    literal      go to state 81
    bool_value   go to state 82


State 105

   50 expr: expr LESSTHAN . expr

    OPEN_PARANTHESIS  shift, and go to state 71
    CALLOUT           shift, and go to state 53
    FALSE             shift, and go to state 72
    TRUE              shift, and go to state 73
    IDENTIFIER        shift, and go to state 55
    CHAR_VALUE        shift, and go to state 74
    INT_VALUE         shift, and go to state 75
    MINUS             shift, and go to state 76
    NOT               shift, and go to state 77

    method_call  go to state 78
    method_name  go to state 60
    location     go to state 79
    expr         go to state 128
    literal      go to state 81
    bool_value   go to state 82


State 106

   53 expr: expr GREATEREQUAL . expr

    OPEN_PARANTHESIS  shift, and go to state 71
    CALLOUT           shift, and go to state 53
    FALSE             shift, and go to state 72
    TRUE              shift, and go to state 73
    IDENTIFIER        shift, and go to state 55
    CHAR_VALUE        shift, and go to state 74
    INT_VALUE         shift, and go to state 75
    MINUS             shift, and go to state 76
    NOT               shift, and go to state 77

    method_call  go to state 78
    method_name  go to state 60
    location     go to state 79
    expr         go to state 129
    literal      go to state 81
    bool_value   go to state 82


State 107

   52 expr: expr GREATERTHAN . expr

    OPEN_PARANTHESIS  shift, and go to state 71
    CALLOUT           shift, and go to state 53
    FALSE             shift, and go to state 72
    TRUE              shift, and go to state 73
    IDENTIFIER        shift, and go to state 55
    CHAR_VALUE        shift, and go to state 74
    INT_VALUE         shift, and go to state 75
    MINUS             shift, and go to state 76
    NOT               shift, and go to state 77

    method_call  go to state 78
    method_name  go to state 60
    location     go to state 79
    expr         go to state 130
    literal      go to state 81
    bool_value   go to state 82


State 108

   54 expr: expr PLUS . expr

    OPEN_PARANTHESIS  shift, and go to state 71
    CALLOUT           shift, and go to state 53
    FALSE             shift, and go to state 72
    TRUE              shift, and go to state 73
    IDENTIFIER        shift, and go to state 55
    CHAR_VALUE        shift, and go to state 74
    INT_VALUE         shift, and go to state 75
    MINUS             shift, and go to state 76
    NOT               shift, and go to state 77

    method_call  go to state 78
    method_name  go to state 60
    location     go to state 79
    expr         go to state 131
    literal      go to state 81
    bool_value   go to state 82


State 109

   55 expr: expr MINUS . expr

    OPEN_PARANTHESIS  shift, and go to state 71
    CALLOUT           shift, and go to state 53
    FALSE             shift, and go to state 72
    TRUE              shift, and go to state 73
    IDENTIFIER        shift, and go to state 55
    CHAR_VALUE        shift, and go to state 74
    INT_VALUE         shift, and go to state 75
    MINUS             shift, and go to state 76
    NOT               shift, and go to state 77

    method_call  go to state 78
    method_name  go to state 60
    location     go to state 79
    expr         go to state 132
    literal      go to state 81
    bool_value   go to state 82


State 110

   56 expr: expr MULTIPLY . expr

    OPEN_PARANTHESIS  shift, and go to state 71
    CALLOUT           shift, and go to state 53
    FALSE             shift, and go to state 72
    TRUE              shift, and go to state 73
    IDENTIFIER        shift, and go to state 55
    CHAR_VALUE        shift, and go to state 74
    INT_VALUE         shift, and go to state 75
    MINUS             shift, and go to state 76
    NOT               shift, and go to state 77

    method_call  go to state 78
    method_name  go to state 60
    location     go to state 79
    expr         go to state 133
    literal      go to state 81
    bool_value   go to state 82


State 111

   57 expr: expr DIVIDE . expr

    OPEN_PARANTHESIS  shift, and go to state 71
    CALLOUT           shift, and go to state 53
    FALSE             shift, and go to state 72
    TRUE              shift, and go to state 73
    IDENTIFIER        shift, and go to state 55
    CHAR_VALUE        shift, and go to state 74
    INT_VALUE         shift, and go to state 75
    MINUS             shift, and go to state 76
    NOT               shift, and go to state 77

    method_call  go to state 78
    method_name  go to state 60
    location     go to state 79
    expr         go to state 134
    literal      go to state 81
    bool_value   go to state 82


State 112

   58 expr: expr MODULO . expr

    OPEN_PARANTHESIS  shift, and go to state 71
    CALLOUT           shift, and go to state 53
    FALSE             shift, and go to state 72
    TRUE              shift, and go to state 73
    IDENTIFIER        shift, and go to state 55
    CHAR_VALUE        shift, and go to state 74
    INT_VALUE         shift, and go to state 75
    MINUS             shift, and go to state 76
    NOT               shift, and go to state 77

    method_call  go to state 78
    method_name  go to state 60
    location     go to state 79
    expr         go to state 135
    literal      go to state 81
    bool_value   go to state 82


State 113

   42 location: IDENTIFIER OPEN_SQUAREBRACKET expr . CLOSE_SQUAREBRACKET
   46 expr: expr . OR expr
   47     | expr . AND expr
   48     | expr . EQUALEQUAL expr
   49     | expr . NOTEQUAL expr
   50     | expr . LESSTHAN expr
   51     | expr . LESSEQUAL expr
   52     | expr . GREATERTHAN expr
   53     | expr . GREATEREQUAL expr
   54     | expr . PLUS expr
   55     | expr . MINUS expr
   56     | expr . MULTIPLY expr
   57     | expr . DIVIDE expr
   58     | expr . MODULO expr

    CLOSE_SQUAREBRACKET  shift, and go to state 136
    OR                   shift, and go to state 100
    AND                  shift, and go to state 101
    EQUALEQUAL           shift, and go to state 102
    NOTEQUAL             shift, and go to state 103
    LESSEQUAL            shift, and go to state 104
    LESSTHAN             shift, and go to state 105
    GREATEREQUAL         shift, and go to state 106
    GREATERTHAN          shift, and go to state 107
    PLUS                 shift, and go to state 108
    MINUS                shift, and go to state 109
    MULTIPLY             shift, and go to state 110
    DIVIDE               shift, and go to state 111
    MODULO               shift, and go to state 112


State 114

   35 method_call: method_name OPEN_PARANTHESIS exprs . CLOSE_PARANTHESIS
   39 exprs: exprs . COMMA expr

    COMMA              shift, and go to state 137
    CLOSE_PARANTHESIS  shift, and go to state 138


State 115

   38 exprs: expr .
   46 expr: expr . OR expr
   47     | expr . AND expr
   48     | expr . EQUALEQUAL expr
   49     | expr . NOTEQUAL expr
   50     | expr . LESSTHAN expr
   51     | expr . LESSEQUAL expr
   52     | expr . GREATERTHAN expr
   53     | expr . GREATEREQUAL expr
   54     | expr . PLUS expr
   55     | expr . MINUS expr
   56     | expr . MULTIPLY expr
   57     | expr . DIVIDE expr
   58     | expr . MODULO expr

    OR            shift, and go to state 100
    AND           shift, and go to state 101
    EQUALEQUAL    shift, and go to state 102
    NOTEQUAL      shift, and go to state 103
    LESSEQUAL     shift, and go to state 104
    LESSTHAN      shift, and go to state 105
    GREATEREQUAL  shift, and go to state 106
    GREATERTHAN   shift, and go to state 107
    PLUS          shift, and go to state 108
    MINUS         shift, and go to state 109
    MULTIPLY      shift, and go to state 110
    DIVIDE        shift, and go to state 111
    MODULO        shift, and go to state 112

    $default  reduce using rule 38 (exprs)


State 116

   25 statement: location assign_op expr . SEMICOLON
   46 expr: expr . OR expr
   47     | expr . AND expr
   48     | expr . EQUALEQUAL expr
   49     | expr . NOTEQUAL expr
   50     | expr . LESSTHAN expr
   51     | expr . LESSEQUAL expr
   52     | expr . GREATERTHAN expr
   53     | expr . GREATEREQUAL expr
   54     | expr . PLUS expr
   55     | expr . MINUS expr
   56     | expr . MULTIPLY expr
   57     | expr . DIVIDE expr
   58     | expr . MODULO expr

    SEMICOLON     shift, and go to state 139
    OR            shift, and go to state 100
    AND           shift, and go to state 101
    EQUALEQUAL    shift, and go to state 102
    NOTEQUAL      shift, and go to state 103
    LESSEQUAL     shift, and go to state 104
    LESSTHAN      shift, and go to state 105
    GREATEREQUAL  shift, and go to state 106
    GREATERTHAN   shift, and go to state 107
    PLUS          shift, and go to state 108
    MINUS         shift, and go to state 109
    MULTIPLY      shift, and go to state 110
    DIVIDE        shift, and go to state 111
    MODULO        shift, and go to state 112


State 117

   27 statement: IF OPEN_PARANTHESIS expr CLOSE_PARANTHESIS . block ELSE block
   28          | IF OPEN_PARANTHESIS expr CLOSE_PARANTHESIS . block

    OPEN_CURLYBRACE  shift, and go to state 44

    block  go to state 140


State 118

   29 statement: FOR IDENTIFIER EQUAL expr . COMMA expr block
   46 expr: expr . OR expr
   47     | expr . AND expr
   48     | expr . EQUALEQUAL expr
   49     | expr . NOTEQUAL expr
   50     | expr . LESSTHAN expr
   51     | expr . LESSEQUAL expr
   52     | expr . GREATERTHAN expr
   53     | expr . GREATEREQUAL expr
   54     | expr . PLUS expr
   55     | expr . MINUS expr
   56     | expr . MULTIPLY expr
   57     | expr . DIVIDE expr
   58     | expr . MODULO expr

    COMMA         shift, and go to state 141
    OR            shift, and go to state 100
    AND           shift, and go to state 101
    EQUALEQUAL    shift, and go to state 102
    NOTEQUAL      shift, and go to state 103
    LESSEQUAL     shift, and go to state 104
    LESSTHAN      shift, and go to state 105
    GREATEREQUAL  shift, and go to state 106
    GREATERTHAN   shift, and go to state 107
    PLUS          shift, and go to state 108
    MINUS         shift, and go to state 109
    MULTIPLY      shift, and go to state 110
    DIVIDE        shift, and go to state 111
    MODULO        shift, and go to state 112


State 119

   62 callout_args: COMMA . callout_arg

    OPEN_PARANTHESIS  shift, and go to state 71
    CALLOUT           shift, and go to state 53
    FALSE             shift, and go to state 72
    TRUE              shift, and go to state 73
    IDENTIFIER        shift, and go to state 55
    STRING_VALUE      shift, and go to state 142
    CHAR_VALUE        shift, and go to state 74
    INT_VALUE         shift, and go to state 75
    MINUS             shift, and go to state 76
    NOT               shift, and go to state 77

    method_call  go to state 78
    method_name  go to state 60
    location     go to state 79
    expr         go to state 143
    callout_arg  go to state 144
    literal      go to state 81
    bool_value   go to state 82


State 120

   36 method_call: CALLOUT OPEN_PARANTHESIS STRING_VALUE CLOSE_PARANTHESIS .

    $default  reduce using rule 36 (method_call)


State 121

   37 method_call: CALLOUT OPEN_PARANTHESIS STRING_VALUE callout_args . CLOSE_PARANTHESIS
   63 callout_args: callout_args . COMMA callout_arg

    COMMA              shift, and go to state 145
    CLOSE_PARANTHESIS  shift, and go to state 146


State 122

   61 expr: OPEN_PARANTHESIS expr CLOSE_PARANTHESIS .

    $default  reduce using rule 61 (expr)


State 123

   46 expr: expr . OR expr
   46     | expr OR expr .
   47     | expr . AND expr
   48     | expr . EQUALEQUAL expr
   49     | expr . NOTEQUAL expr
   50     | expr . LESSTHAN expr
   51     | expr . LESSEQUAL expr
   52     | expr . GREATERTHAN expr
   53     | expr . GREATEREQUAL expr
   54     | expr . PLUS expr
   55     | expr . MINUS expr
   56     | expr . MULTIPLY expr
   57     | expr . DIVIDE expr
   58     | expr . MODULO expr

    AND           shift, and go to state 101
    EQUALEQUAL    shift, and go to state 102
    NOTEQUAL      shift, and go to state 103
    LESSEQUAL     shift, and go to state 104
    LESSTHAN      shift, and go to state 105
    GREATEREQUAL  shift, and go to state 106
    GREATERTHAN   shift, and go to state 107
    PLUS          shift, and go to state 108
    MINUS         shift, and go to state 109
    MULTIPLY      shift, and go to state 110
    DIVIDE        shift, and go to state 111
    MODULO        shift, and go to state 112

    $default  reduce using rule 46 (expr)


State 124

   46 expr: expr . OR expr
   47     | expr . AND expr
   47     | expr AND expr .
   48     | expr . EQUALEQUAL expr
   49     | expr . NOTEQUAL expr
   50     | expr . LESSTHAN expr
   51     | expr . LESSEQUAL expr
   52     | expr . GREATERTHAN expr
   53     | expr . GREATEREQUAL expr
   54     | expr . PLUS expr
   55     | expr . MINUS expr
   56     | expr . MULTIPLY expr
   57     | expr . DIVIDE expr
   58     | expr . MODULO expr

    EQUALEQUAL    shift, and go to state 102
    NOTEQUAL      shift, and go to state 103
    LESSEQUAL     shift, and go to state 104
    LESSTHAN      shift, and go to state 105
    GREATEREQUAL  shift, and go to state 106
    GREATERTHAN   shift, and go to state 107
    PLUS          shift, and go to state 108
    MINUS         shift, and go to state 109
    MULTIPLY      shift, and go to state 110
    DIVIDE        shift, and go to state 111
    MODULO        shift, and go to state 112

    $default  reduce using rule 47 (expr)


State 125

   46 expr: expr . OR expr
   47     | expr . AND expr
   48     | expr . EQUALEQUAL expr
   48     | expr EQUALEQUAL expr .
   49     | expr . NOTEQUAL expr
   50     | expr . LESSTHAN expr
   51     | expr . LESSEQUAL expr
   52     | expr . GREATERTHAN expr
   53     | expr . GREATEREQUAL expr
   54     | expr . PLUS expr
   55     | expr . MINUS expr
   56     | expr . MULTIPLY expr
   57     | expr . DIVIDE expr
   58     | expr . MODULO expr

    LESSEQUAL     shift, and go to state 104
    LESSTHAN      shift, and go to state 105
    GREATEREQUAL  shift, and go to state 106
    GREATERTHAN   shift, and go to state 107
    PLUS          shift, and go to state 108
    MINUS         shift, and go to state 109
    MULTIPLY      shift, and go to state 110
    DIVIDE        shift, and go to state 111
    MODULO        shift, and go to state 112

    $default  reduce using rule 48 (expr)


State 126

   46 expr: expr . OR expr
   47     | expr . AND expr
   48     | expr . EQUALEQUAL expr
   49     | expr . NOTEQUAL expr
   49     | expr NOTEQUAL expr .
   50     | expr . LESSTHAN expr
   51     | expr . LESSEQUAL expr
   52     | expr . GREATERTHAN expr
   53     | expr . GREATEREQUAL expr
   54     | expr . PLUS expr
   55     | expr . MINUS expr
   56     | expr . MULTIPLY expr
   57     | expr . DIVIDE expr
   58     | expr . MODULO expr

    LESSEQUAL     shift, and go to state 104
    LESSTHAN      shift, and go to state 105
    GREATEREQUAL  shift, and go to state 106
    GREATERTHAN   shift, and go to state 107
    PLUS          shift, and go to state 108
    MINUS         shift, and go to state 109
    MULTIPLY      shift, and go to state 110
    DIVIDE        shift, and go to state 111
    MODULO        shift, and go to state 112

    $default  reduce using rule 49 (expr)


State 127

   46 expr: expr . OR expr
   47     | expr . AND expr
   48     | expr . EQUALEQUAL expr
   49     | expr . NOTEQUAL expr
   50     | expr . LESSTHAN expr
   51     | expr . LESSEQUAL expr
   51     | expr LESSEQUAL expr .
   52     | expr . GREATERTHAN expr
   53     | expr . GREATEREQUAL expr
   54     | expr . PLUS expr
   55     | expr . MINUS expr
   56     | expr . MULTIPLY expr
   57     | expr . DIVIDE expr
   58     | expr . MODULO expr

    PLUS      shift, and go to state 108
    MINUS     shift, and go to state 109
    MULTIPLY  shift, and go to state 110
    DIVIDE    shift, and go to state 111
    MODULO    shift, and go to state 112

    LESSEQUAL     error (nonassociative)
    LESSTHAN      error (nonassociative)
    GREATEREQUAL  error (nonassociative)
    GREATERTHAN   error (nonassociative)

    $default  reduce using rule 51 (expr)


State 128

   46 expr: expr . OR expr
   47     | expr . AND expr
   48     | expr . EQUALEQUAL expr
   49     | expr . NOTEQUAL expr
   50     | expr . LESSTHAN expr
   50     | expr LESSTHAN expr .
   51     | expr . LESSEQUAL expr
   52     | expr . GREATERTHAN expr
   53     | expr . GREATEREQUAL expr
   54     | expr . PLUS expr
   55     | expr . MINUS expr
   56     | expr . MULTIPLY expr
   57     | expr . DIVIDE expr
   58     | expr . MODULO expr

    PLUS      shift, and go to state 108
    MINUS     shift, and go to state 109
    MULTIPLY  shift, and go to state 110
    DIVIDE    shift, and go to state 111
    MODULO    shift, and go to state 112

    LESSEQUAL     error (nonassociative)
    LESSTHAN      error (nonassociative)
    GREATEREQUAL  error (nonassociative)
    GREATERTHAN   error (nonassociative)

    $default  reduce using rule 50 (expr)


State 129

   46 expr: expr . OR expr
   47     | expr . AND expr
   48     | expr . EQUALEQUAL expr
   49     | expr . NOTEQUAL expr
   50     | expr . LESSTHAN expr
   51     | expr . LESSEQUAL expr
   52     | expr . GREATERTHAN expr
   53     | expr . GREATEREQUAL expr
   53     | expr GREATEREQUAL expr .
   54     | expr . PLUS expr
   55     | expr . MINUS expr
   56     | expr . MULTIPLY expr
   57     | expr . DIVIDE expr
   58     | expr . MODULO expr

    PLUS      shift, and go to state 108
    MINUS     shift, and go to state 109
    MULTIPLY  shift, and go to state 110
    DIVIDE    shift, and go to state 111
    MODULO    shift, and go to state 112

    LESSEQUAL     error (nonassociative)
    LESSTHAN      error (nonassociative)
    GREATEREQUAL  error (nonassociative)
    GREATERTHAN   error (nonassociative)

    $default  reduce using rule 53 (expr)


State 130

   46 expr: expr . OR expr
   47     | expr . AND expr
   48     | expr . EQUALEQUAL expr
   49     | expr . NOTEQUAL expr
   50     | expr . LESSTHAN expr
   51     | expr . LESSEQUAL expr
   52     | expr . GREATERTHAN expr
   52     | expr GREATERTHAN expr .
   53     | expr . GREATEREQUAL expr
   54     | expr . PLUS expr
   55     | expr . MINUS expr
   56     | expr . MULTIPLY expr
   57     | expr . DIVIDE expr
   58     | expr . MODULO expr

    PLUS      shift, and go to state 108
    MINUS     shift, and go to state 109
    MULTIPLY  shift, and go to state 110
    DIVIDE    shift, and go to state 111
    MODULO    shift, and go to state 112

    LESSEQUAL     error (nonassociative)
    LESSTHAN      error (nonassociative)
    GREATEREQUAL  error (nonassociative)
    GREATERTHAN   error (nonassociative)

    $default  reduce using rule 52 (expr)


State 131

   46 expr: expr . OR expr
   47     | expr . AND expr
   48     | expr . EQUALEQUAL expr
   49     | expr . NOTEQUAL expr
   50     | expr . LESSTHAN expr
   51     | expr . LESSEQUAL expr
   52     | expr . GREATERTHAN expr
   53     | expr . GREATEREQUAL expr
   54     | expr . PLUS expr
   54     | expr PLUS expr .
   55     | expr . MINUS expr
   56     | expr . MULTIPLY expr
   57     | expr . DIVIDE expr
   58     | expr . MODULO expr

    MULTIPLY  shift, and go to state 110
    DIVIDE    shift, and go to state 111
    MODULO    shift, and go to state 112

    $default  reduce using rule 54 (expr)


State 132

   46 expr: expr . OR expr
   47     | expr . AND expr
   48     | expr . EQUALEQUAL expr
   49     | expr . NOTEQUAL expr
   50     | expr . LESSTHAN expr
   51     | expr . LESSEQUAL expr
   52     | expr . GREATERTHAN expr
   53     | expr . GREATEREQUAL expr
   54     | expr . PLUS expr
   55     | expr . MINUS expr
   55     | expr MINUS expr .
   56     | expr . MULTIPLY expr
   57     | expr . DIVIDE expr
   58     | expr . MODULO expr

    MULTIPLY  shift, and go to state 110
    DIVIDE    shift, and go to state 111
    MODULO    shift, and go to state 112

    $default  reduce using rule 55 (expr)


State 133

   46 expr: expr . OR expr
   47     | expr . AND expr
   48     | expr . EQUALEQUAL expr
   49     | expr . NOTEQUAL expr
   50     | expr . LESSTHAN expr
   51     | expr . LESSEQUAL expr
   52     | expr . GREATERTHAN expr
   53     | expr . GREATEREQUAL expr
   54     | expr . PLUS expr
   55     | expr . MINUS expr
   56     | expr . MULTIPLY expr
   56     | expr MULTIPLY expr .
   57     | expr . DIVIDE expr
   58     | expr . MODULO expr

    $default  reduce using rule 56 (expr)


State 134

   46 expr: expr . OR expr
   47     | expr . AND expr
   48     | expr . EQUALEQUAL expr
   49     | expr . NOTEQUAL expr
   50     | expr . LESSTHAN expr
   51     | expr . LESSEQUAL expr
   52     | expr . GREATERTHAN expr
   53     | expr . GREATEREQUAL expr
   54     | expr . PLUS expr
   55     | expr . MINUS expr
   56     | expr . MULTIPLY expr
   57     | expr . DIVIDE expr
   57     | expr DIVIDE expr .
   58     | expr . MODULO expr

    $default  reduce using rule 57 (expr)


State 135

   46 expr: expr . OR expr
   47     | expr . AND expr
   48     | expr . EQUALEQUAL expr
   49     | expr . NOTEQUAL expr
   50     | expr . LESSTHAN expr
   51     | expr . LESSEQUAL expr
   52     | expr . GREATERTHAN expr
   53     | expr . GREATEREQUAL expr
   54     | expr . PLUS expr
   55     | expr . MINUS expr
   56     | expr . MULTIPLY expr
   57     | expr . DIVIDE expr
   58     | expr . MODULO expr
   58     | expr MODULO expr .

    $default  reduce using rule 58 (expr)


State 136

   42 location: IDENTIFIER OPEN_SQUAREBRACKET expr CLOSE_SQUAREBRACKET .

    $default  reduce using rule 42 (location)


State 137

   39 exprs: exprs COMMA . expr

    OPEN_PARANTHESIS  shift, and go to state 71
    CALLOUT           shift, and go to state 53
    FALSE             shift, and go to state 72
    TRUE              shift, and go to state 73
    IDENTIFIER        shift, and go to state 55
    CHAR_VALUE        shift, and go to state 74
    INT_VALUE         shift, and go to state 75
    MINUS             shift, and go to state 76
    NOT               shift, and go to state 77

    method_call  go to state 78
    method_name  go to state 60
    location     go to state 79
    expr         go to state 147
    literal      go to state 81
    bool_value   go to state 82


State 138

   35 method_call: method_name OPEN_PARANTHESIS exprs CLOSE_PARANTHESIS .

    $default  reduce using rule 35 (method_call)


State 139

   25 statement: location assign_op expr SEMICOLON .

    $default  reduce using rule 25 (statement)


State 140

   27 statement: IF OPEN_PARANTHESIS expr CLOSE_PARANTHESIS block . ELSE block
   28          | IF OPEN_PARANTHESIS expr CLOSE_PARANTHESIS block .

    ELSE  shift, and go to state 148

    $default  reduce using rule 28 (statement)


State 141

   29 statement: FOR IDENTIFIER EQUAL expr COMMA . expr block

    OPEN_PARANTHESIS  shift, and go to state 71
    CALLOUT           shift, and go to state 53
    FALSE             shift, and go to state 72
    TRUE              shift, and go to state 73
    IDENTIFIER        shift, and go to state 55
    CHAR_VALUE        shift, and go to state 74
    INT_VALUE         shift, and go to state 75
    MINUS             shift, and go to state 76
    NOT               shift, and go to state 77

    method_call  go to state 78
    method_name  go to state 60
    location     go to state 79
    expr         go to state 149
    literal      go to state 81
    bool_value   go to state 82


State 142

   65 callout_arg: STRING_VALUE .

    $default  reduce using rule 65 (callout_arg)


State 143

   46 expr: expr . OR expr
   47     | expr . AND expr
   48     | expr . EQUALEQUAL expr
   49     | expr . NOTEQUAL expr
   50     | expr . LESSTHAN expr
   51     | expr . LESSEQUAL expr
   52     | expr . GREATERTHAN expr
   53     | expr . GREATEREQUAL expr
   54     | expr . PLUS expr
   55     | expr . MINUS expr
   56     | expr . MULTIPLY expr
   57     | expr . DIVIDE expr
   58     | expr . MODULO expr
   64 callout_arg: expr .

    OR            shift, and go to state 100
    AND           shift, and go to state 101
    EQUALEQUAL    shift, and go to state 102
    NOTEQUAL      shift, and go to state 103
    LESSEQUAL     shift, and go to state 104
    LESSTHAN      shift, and go to state 105
    GREATEREQUAL  shift, and go to state 106
    GREATERTHAN   shift, and go to state 107
    PLUS          shift, and go to state 108
    MINUS         shift, and go to state 109
    MULTIPLY      shift, and go to state 110
    DIVIDE        shift, and go to state 111
    MODULO        shift, and go to state 112

    $default  reduce using rule 64 (callout_arg)


State 144

   62 callout_args: COMMA callout_arg .

    $default  reduce using rule 62 (callout_args)


State 145

   63 callout_args: callout_args COMMA . callout_arg

    OPEN_PARANTHESIS  shift, and go to state 71
    CALLOUT           shift, and go to state 53
    FALSE             shift, and go to state 72
    TRUE              shift, and go to state 73
    IDENTIFIER        shift, and go to state 55
    STRING_VALUE      shift, and go to state 142
    CHAR_VALUE        shift, and go to state 74
    INT_VALUE         shift, and go to state 75
    MINUS             shift, and go to state 76
    NOT               shift, and go to state 77

    method_call  go to state 78
    method_name  go to state 60
    location     go to state 79
    expr         go to state 143
    callout_arg  go to state 150
    literal      go to state 81
    bool_value   go to state 82


State 146

   37 method_call: CALLOUT OPEN_PARANTHESIS STRING_VALUE callout_args CLOSE_PARANTHESIS .

    $default  reduce using rule 37 (method_call)


State 147

   39 exprs: exprs COMMA expr .
   46 expr: expr . OR expr
   47     | expr . AND expr
   48     | expr . EQUALEQUAL expr
   49     | expr . NOTEQUAL expr
   50     | expr . LESSTHAN expr
   51     | expr . LESSEQUAL expr
   52     | expr . GREATERTHAN expr
   53     | expr . GREATEREQUAL expr
   54     | expr . PLUS expr
   55     | expr . MINUS expr
   56     | expr . MULTIPLY expr
   57     | expr . DIVIDE expr
   58     | expr . MODULO expr

    OR            shift, and go to state 100
    AND           shift, and go to state 101
    EQUALEQUAL    shift, and go to state 102
    NOTEQUAL      shift, and go to state 103
    LESSEQUAL     shift, and go to state 104
    LESSTHAN      shift, and go to state 105
    GREATEREQUAL  shift, and go to state 106
    GREATERTHAN   shift, and go to state 107
    PLUS          shift, and go to state 108
    MINUS         shift, and go to state 109
    MULTIPLY      shift, and go to state 110
    DIVIDE        shift, and go to state 111
    MODULO        shift, and go to state 112

    $default  reduce using rule 39 (exprs)


State 148

   27 statement: IF OPEN_PARANTHESIS expr CLOSE_PARANTHESIS block ELSE . block

    OPEN_CURLYBRACE  shift, and go to state 44

    block  go to state 151


State 149

   29 statement: FOR IDENTIFIER EQUAL expr COMMA expr . block
   46 expr: expr . OR expr
   47     | expr . AND expr
   48     | expr . EQUALEQUAL expr
   49     | expr . NOTEQUAL expr
   50     | expr . LESSTHAN expr
   51     | expr . LESSEQUAL expr
   52     | expr . GREATERTHAN expr
   53     | expr . GREATEREQUAL expr
   54     | expr . PLUS expr
   55     | expr . MINUS expr
   56     | expr . MULTIPLY expr
   57     | expr . DIVIDE expr
   58     | expr . MODULO expr

    OPEN_CURLYBRACE  shift, and go to state 44
    OR               shift, and go to state 100
    AND              shift, and go to state 101
    EQUALEQUAL       shift, and go to state 102
    NOTEQUAL         shift, and go to state 103
    LESSEQUAL        shift, and go to state 104
    LESSTHAN         shift, and go to state 105
    GREATEREQUAL     shift, and go to state 106
    GREATERTHAN      shift, and go to state 107
    PLUS             shift, and go to state 108
    MINUS            shift, and go to state 109
    MULTIPLY         shift, and go to state 110
    DIVIDE           shift, and go to state 111
    MODULO           shift, and go to state 112

    block  go to state 152


State 150

   63 callout_args: callout_args COMMA callout_arg .

    $default  reduce using rule 63 (callout_args)


State 151

   27 statement: IF OPEN_PARANTHESIS expr CLOSE_PARANTHESIS block ELSE block .

    $default  reduce using rule 27 (statement)


State 152

   29 statement: FOR IDENTIFIER EQUAL expr COMMA expr block .

    $default  reduce using rule 29 (statement)
