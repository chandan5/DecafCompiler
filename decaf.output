Grammar

    0 $accept: program $end

    1 program: INT MAIN OPEN_PARANTHESIS CLOSE_PARANTHESIS OPEN_CURLYBRACE declarations statements CLOSE_CURLYBRACE

    2 declarations: declaration
    3             | declaration declarations

    4 statements: statement
    5           | statement statements

    6 declaration: type IDENTIFIER SEMICOLON
    7            | type IDENTIFIER OPEN_SQUAREBRACKET INT_VALUE CLOSE_SQUAREBRACKET SEMICOLON

    8 statement: SEMICOLON
    9          | IDENTIFIER EQUAL expression SEMICOLON
   10          | IDENTIFIER OPEN_SQUAREBRACKET expression CLOSE_SQUAREBRACKET EQUAL expression SEMICOLON

   11 expression: term
   12           | term PLUS term
   13           | term MINUS term

   14 term: factor
   15     | factor MULTIPLY factor
   16     | factor DIVIDE factor
   17     | factor MODULO factor

   18 factor: IDENTIFIER
   19       | IDENTIFIER OPEN_SQUAREBRACKET expression CLOSE_SQUAREBRACKET
   20       | literal
   21       | OPEN_PARANTHESIS expression CLOSE_PARANTHESIS

   22 literal: INT_VALUE
   23        | bool_value

   24 bool_value: TRUE
   25           | FALSE

   26 type: INT
   27     | BOOLEAN


Terminals, with rules where they appear

$end (0) 0
error (256)
SEMICOLON (258) 6 7 8 9 10
OPEN_PARANTHESIS (259) 1 21
CLOSE_PARANTHESIS (260) 1 21
OPEN_SQUAREBRACKET (261) 7 10 19
CLOSE_SQUAREBRACKET (262) 7 10 19
OPEN_CURLYBRACE (263) 1
CLOSE_CURLYBRACE (264) 1
MAIN (265) 1
FALSE (266) 25
INT (267) 1 26
BOOLEAN (268) 27
TRUE (269) 24
EQUAL (270) 9 10
PLUS (271) 12
MINUS (272) 13
MULTIPLY (273) 15
DIVIDE (274) 16
MODULO (275) 17
IDENTIFIER (276) 6 7 9 10 18 19
INT_VALUE (277) 7 22


Nonterminals, with rules where they appear

$accept (23)
    on left: 0
program (24)
    on left: 1, on right: 0
declarations (25)
    on left: 2 3, on right: 1 3
statements (26)
    on left: 4 5, on right: 1 5
declaration (27)
    on left: 6 7, on right: 2 3
statement (28)
    on left: 8 9 10, on right: 4 5
expression (29)
    on left: 11 12 13, on right: 9 10 19 21
term (30)
    on left: 14 15 16 17, on right: 11 12 13
factor (31)
    on left: 18 19 20 21, on right: 14 15 16 17
literal (32)
    on left: 22 23, on right: 20
bool_value (33)
    on left: 24 25, on right: 23
type (34)
    on left: 26 27, on right: 6 7


state 0

    0 $accept: . program $end

    INT  shift, and go to state 1

    program  go to state 2


state 1

    1 program: INT . MAIN OPEN_PARANTHESIS CLOSE_PARANTHESIS OPEN_CURLYBRACE declarations statements CLOSE_CURLYBRACE

    MAIN  shift, and go to state 3


state 2

    0 $accept: program . $end

    $end  shift, and go to state 4


state 3

    1 program: INT MAIN . OPEN_PARANTHESIS CLOSE_PARANTHESIS OPEN_CURLYBRACE declarations statements CLOSE_CURLYBRACE

    OPEN_PARANTHESIS  shift, and go to state 5


state 4

    0 $accept: program $end .

    $default  accept


state 5

    1 program: INT MAIN OPEN_PARANTHESIS . CLOSE_PARANTHESIS OPEN_CURLYBRACE declarations statements CLOSE_CURLYBRACE

    CLOSE_PARANTHESIS  shift, and go to state 6


state 6

    1 program: INT MAIN OPEN_PARANTHESIS CLOSE_PARANTHESIS . OPEN_CURLYBRACE declarations statements CLOSE_CURLYBRACE

    OPEN_CURLYBRACE  shift, and go to state 7


state 7

    1 program: INT MAIN OPEN_PARANTHESIS CLOSE_PARANTHESIS OPEN_CURLYBRACE . declarations statements CLOSE_CURLYBRACE

    INT      shift, and go to state 8
    BOOLEAN  shift, and go to state 9

    declarations  go to state 10
    declaration   go to state 11
    type          go to state 12


state 8

   26 type: INT .

    $default  reduce using rule 26 (type)


state 9

   27 type: BOOLEAN .

    $default  reduce using rule 27 (type)


state 10

    1 program: INT MAIN OPEN_PARANTHESIS CLOSE_PARANTHESIS OPEN_CURLYBRACE declarations . statements CLOSE_CURLYBRACE

    SEMICOLON   shift, and go to state 13
    IDENTIFIER  shift, and go to state 14

    statements  go to state 15
    statement   go to state 16


state 11

    2 declarations: declaration .
    3             | declaration . declarations

    INT      shift, and go to state 8
    BOOLEAN  shift, and go to state 9

    $default  reduce using rule 2 (declarations)

    declarations  go to state 17
    declaration   go to state 11
    type          go to state 12


state 12

    6 declaration: type . IDENTIFIER SEMICOLON
    7            | type . IDENTIFIER OPEN_SQUAREBRACKET INT_VALUE CLOSE_SQUAREBRACKET SEMICOLON

    IDENTIFIER  shift, and go to state 18


state 13

    8 statement: SEMICOLON .

    $default  reduce using rule 8 (statement)


state 14

    9 statement: IDENTIFIER . EQUAL expression SEMICOLON
   10          | IDENTIFIER . OPEN_SQUAREBRACKET expression CLOSE_SQUAREBRACKET EQUAL expression SEMICOLON

    OPEN_SQUAREBRACKET  shift, and go to state 19
    EQUAL               shift, and go to state 20


state 15

    1 program: INT MAIN OPEN_PARANTHESIS CLOSE_PARANTHESIS OPEN_CURLYBRACE declarations statements . CLOSE_CURLYBRACE

    CLOSE_CURLYBRACE  shift, and go to state 21


state 16

    4 statements: statement .
    5           | statement . statements

    SEMICOLON   shift, and go to state 13
    IDENTIFIER  shift, and go to state 14

    $default  reduce using rule 4 (statements)

    statements  go to state 22
    statement   go to state 16


state 17

    3 declarations: declaration declarations .

    $default  reduce using rule 3 (declarations)


state 18

    6 declaration: type IDENTIFIER . SEMICOLON
    7            | type IDENTIFIER . OPEN_SQUAREBRACKET INT_VALUE CLOSE_SQUAREBRACKET SEMICOLON

    SEMICOLON           shift, and go to state 23
    OPEN_SQUAREBRACKET  shift, and go to state 24


state 19

   10 statement: IDENTIFIER OPEN_SQUAREBRACKET . expression CLOSE_SQUAREBRACKET EQUAL expression SEMICOLON

    OPEN_PARANTHESIS  shift, and go to state 25
    FALSE             shift, and go to state 26
    TRUE              shift, and go to state 27
    IDENTIFIER        shift, and go to state 28
    INT_VALUE         shift, and go to state 29

    expression  go to state 30
    term        go to state 31
    factor      go to state 32
    literal     go to state 33
    bool_value  go to state 34


state 20

    9 statement: IDENTIFIER EQUAL . expression SEMICOLON

    OPEN_PARANTHESIS  shift, and go to state 25
    FALSE             shift, and go to state 26
    TRUE              shift, and go to state 27
    IDENTIFIER        shift, and go to state 28
    INT_VALUE         shift, and go to state 29

    expression  go to state 35
    term        go to state 31
    factor      go to state 32
    literal     go to state 33
    bool_value  go to state 34


state 21

    1 program: INT MAIN OPEN_PARANTHESIS CLOSE_PARANTHESIS OPEN_CURLYBRACE declarations statements CLOSE_CURLYBRACE .

    $default  reduce using rule 1 (program)


state 22

    5 statements: statement statements .

    $default  reduce using rule 5 (statements)


state 23

    6 declaration: type IDENTIFIER SEMICOLON .

    $default  reduce using rule 6 (declaration)


state 24

    7 declaration: type IDENTIFIER OPEN_SQUAREBRACKET . INT_VALUE CLOSE_SQUAREBRACKET SEMICOLON

    INT_VALUE  shift, and go to state 36


state 25

   21 factor: OPEN_PARANTHESIS . expression CLOSE_PARANTHESIS

    OPEN_PARANTHESIS  shift, and go to state 25
    FALSE             shift, and go to state 26
    TRUE              shift, and go to state 27
    IDENTIFIER        shift, and go to state 28
    INT_VALUE         shift, and go to state 29

    expression  go to state 37
    term        go to state 31
    factor      go to state 32
    literal     go to state 33
    bool_value  go to state 34


state 26

   25 bool_value: FALSE .

    $default  reduce using rule 25 (bool_value)


state 27

   24 bool_value: TRUE .

    $default  reduce using rule 24 (bool_value)


state 28

   18 factor: IDENTIFIER .
   19       | IDENTIFIER . OPEN_SQUAREBRACKET expression CLOSE_SQUAREBRACKET

    OPEN_SQUAREBRACKET  shift, and go to state 38

    $default  reduce using rule 18 (factor)


state 29

   22 literal: INT_VALUE .

    $default  reduce using rule 22 (literal)


state 30

   10 statement: IDENTIFIER OPEN_SQUAREBRACKET expression . CLOSE_SQUAREBRACKET EQUAL expression SEMICOLON

    CLOSE_SQUAREBRACKET  shift, and go to state 39


state 31

   11 expression: term .
   12           | term . PLUS term
   13           | term . MINUS term

    PLUS   shift, and go to state 40
    MINUS  shift, and go to state 41

    $default  reduce using rule 11 (expression)


state 32

   14 term: factor .
   15     | factor . MULTIPLY factor
   16     | factor . DIVIDE factor
   17     | factor . MODULO factor

    MULTIPLY  shift, and go to state 42
    DIVIDE    shift, and go to state 43
    MODULO    shift, and go to state 44

    $default  reduce using rule 14 (term)


state 33

   20 factor: literal .

    $default  reduce using rule 20 (factor)


state 34

   23 literal: bool_value .

    $default  reduce using rule 23 (literal)


state 35

    9 statement: IDENTIFIER EQUAL expression . SEMICOLON

    SEMICOLON  shift, and go to state 45


state 36

    7 declaration: type IDENTIFIER OPEN_SQUAREBRACKET INT_VALUE . CLOSE_SQUAREBRACKET SEMICOLON

    CLOSE_SQUAREBRACKET  shift, and go to state 46


state 37

   21 factor: OPEN_PARANTHESIS expression . CLOSE_PARANTHESIS

    CLOSE_PARANTHESIS  shift, and go to state 47


state 38

   19 factor: IDENTIFIER OPEN_SQUAREBRACKET . expression CLOSE_SQUAREBRACKET

    OPEN_PARANTHESIS  shift, and go to state 25
    FALSE             shift, and go to state 26
    TRUE              shift, and go to state 27
    IDENTIFIER        shift, and go to state 28
    INT_VALUE         shift, and go to state 29

    expression  go to state 48
    term        go to state 31
    factor      go to state 32
    literal     go to state 33
    bool_value  go to state 34


state 39

   10 statement: IDENTIFIER OPEN_SQUAREBRACKET expression CLOSE_SQUAREBRACKET . EQUAL expression SEMICOLON

    EQUAL  shift, and go to state 49


state 40

   12 expression: term PLUS . term

    OPEN_PARANTHESIS  shift, and go to state 25
    FALSE             shift, and go to state 26
    TRUE              shift, and go to state 27
    IDENTIFIER        shift, and go to state 28
    INT_VALUE         shift, and go to state 29

    term        go to state 50
    factor      go to state 32
    literal     go to state 33
    bool_value  go to state 34


state 41

   13 expression: term MINUS . term

    OPEN_PARANTHESIS  shift, and go to state 25
    FALSE             shift, and go to state 26
    TRUE              shift, and go to state 27
    IDENTIFIER        shift, and go to state 28
    INT_VALUE         shift, and go to state 29

    term        go to state 51
    factor      go to state 32
    literal     go to state 33
    bool_value  go to state 34


state 42

   15 term: factor MULTIPLY . factor

    OPEN_PARANTHESIS  shift, and go to state 25
    FALSE             shift, and go to state 26
    TRUE              shift, and go to state 27
    IDENTIFIER        shift, and go to state 28
    INT_VALUE         shift, and go to state 29

    factor      go to state 52
    literal     go to state 33
    bool_value  go to state 34


state 43

   16 term: factor DIVIDE . factor

    OPEN_PARANTHESIS  shift, and go to state 25
    FALSE             shift, and go to state 26
    TRUE              shift, and go to state 27
    IDENTIFIER        shift, and go to state 28
    INT_VALUE         shift, and go to state 29

    factor      go to state 53
    literal     go to state 33
    bool_value  go to state 34


state 44

   17 term: factor MODULO . factor

    OPEN_PARANTHESIS  shift, and go to state 25
    FALSE             shift, and go to state 26
    TRUE              shift, and go to state 27
    IDENTIFIER        shift, and go to state 28
    INT_VALUE         shift, and go to state 29

    factor      go to state 54
    literal     go to state 33
    bool_value  go to state 34


state 45

    9 statement: IDENTIFIER EQUAL expression SEMICOLON .

    $default  reduce using rule 9 (statement)


state 46

    7 declaration: type IDENTIFIER OPEN_SQUAREBRACKET INT_VALUE CLOSE_SQUAREBRACKET . SEMICOLON

    SEMICOLON  shift, and go to state 55


state 47

   21 factor: OPEN_PARANTHESIS expression CLOSE_PARANTHESIS .

    $default  reduce using rule 21 (factor)


state 48

   19 factor: IDENTIFIER OPEN_SQUAREBRACKET expression . CLOSE_SQUAREBRACKET

    CLOSE_SQUAREBRACKET  shift, and go to state 56


state 49

   10 statement: IDENTIFIER OPEN_SQUAREBRACKET expression CLOSE_SQUAREBRACKET EQUAL . expression SEMICOLON

    OPEN_PARANTHESIS  shift, and go to state 25
    FALSE             shift, and go to state 26
    TRUE              shift, and go to state 27
    IDENTIFIER        shift, and go to state 28
    INT_VALUE         shift, and go to state 29

    expression  go to state 57
    term        go to state 31
    factor      go to state 32
    literal     go to state 33
    bool_value  go to state 34


state 50

   12 expression: term PLUS term .

    $default  reduce using rule 12 (expression)


state 51

   13 expression: term MINUS term .

    $default  reduce using rule 13 (expression)


state 52

   15 term: factor MULTIPLY factor .

    $default  reduce using rule 15 (term)


state 53

   16 term: factor DIVIDE factor .

    $default  reduce using rule 16 (term)


state 54

   17 term: factor MODULO factor .

    $default  reduce using rule 17 (term)


state 55

    7 declaration: type IDENTIFIER OPEN_SQUAREBRACKET INT_VALUE CLOSE_SQUAREBRACKET SEMICOLON .

    $default  reduce using rule 7 (declaration)


state 56

   19 factor: IDENTIFIER OPEN_SQUAREBRACKET expression CLOSE_SQUAREBRACKET .

    $default  reduce using rule 19 (factor)


state 57

   10 statement: IDENTIFIER OPEN_SQUAREBRACKET expression CLOSE_SQUAREBRACKET EQUAL expression . SEMICOLON

    SEMICOLON  shift, and go to state 58


state 58

   10 statement: IDENTIFIER OPEN_SQUAREBRACKET expression CLOSE_SQUAREBRACKET EQUAL expression SEMICOLON .

    $default  reduce using rule 10 (statement)
